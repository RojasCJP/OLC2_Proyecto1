Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONCAT
    CORCHETEDER
    CORCHETEIZQ
    LLAVDER
    LLAVIZQ
    NOTHING
    NUMERO
    PUNTO

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print_instr PTCOMA
Rule 5     instruccion -> println_instr PTCOMA
Rule 6     instruccion -> definicion_instr PTCOMA
Rule 7     instruccion -> asignacion_instr PTCOMA
Rule 8     instruccion -> definicion_asignacion_instr PTCOMA
Rule 9     instruccion -> call_function PTCOMA
Rule 10    instruccion -> declare_function PTCOMA
Rule 11    instruccion -> return_state PTCOMA
Rule 12    instruccion -> break_state PTCOMA
Rule 13    instruccion -> continue_state PTCOMA
Rule 14    instruccion -> if_state PTCOMA
Rule 15    instruccion -> while_state PTCOMA
Rule 16    expression -> MENOS expression
Rule 17    expression -> NOT expression
Rule 18    expression -> expression MAS expression
Rule 19    expression -> expression MENOS expression
Rule 20    expression -> expression POR expression
Rule 21    expression -> expression DIVIDIDO expression
Rule 22    expression -> expression POTENCIA expression
Rule 23    expression -> expression MODULO expression
Rule 24    expression -> expression MAYQUE expression
Rule 25    expression -> expression MENQUE expression
Rule 26    expression -> expression MENIGUALQUE expression
Rule 27    expression -> expression MAYIGUALQUE expression
Rule 28    expression -> expression IGUALQUE expression
Rule 29    expression -> expression NIGUALQUE expression
Rule 30    expression -> expression OR expression
Rule 31    expression -> expression AND expression
Rule 32    expression -> final_expression
Rule 33    final_expression -> PARIZQ expression PARDER
Rule 34    final_expression -> DECIMAL
Rule 35    final_expression -> ENTERO
Rule 36    final_expression -> CADENA
Rule 37    final_expression -> ID
Rule 38    final_expression -> TRUE
Rule 39    final_expression -> FALSE
Rule 40    final_expression -> call_func
Rule 41    final_expression -> nativas
Rule 42    call_func -> ID PARIZQ PARDER
Rule 43    call_func -> ID PARIZQ exp_list PARDER
Rule 44    nativas -> LOG PARIZQ ENTERO COMA expression PARDER
Rule 45    nativas -> LOG10 PARIZQ expression PARDER
Rule 46    nativas -> COS PARIZQ expression PARDER
Rule 47    nativas -> SIN PARIZQ expression PARDER
Rule 48    nativas -> TAN PARIZQ expression PARDER
Rule 49    nativas -> SQRT PARIZQ expression PARDER
Rule 50    nativas -> UPPERCASE PARIZQ expression PARDER
Rule 51    nativas -> LOWERCASE PARIZQ expression PARDER
Rule 52    nativas -> TOSTRING PARIZQ expression PARDER
Rule 53    nativas -> TOFLOAT PARIZQ expression PARDER
Rule 54    nativas -> TRUNC PARIZQ INT COMA expression PARDER
Rule 55    nativas -> TYPEOF PARIZQ expression PARDER
Rule 56    nativas -> PARSE PARIZQ tipo COMA expression PARDER
Rule 57    print_instr -> PRINT PARIZQ expression PARDER
Rule 58    println_instr -> PRINTLN PARIZQ expression PARDER
Rule 59    tipo -> INT
Rule 60    tipo -> FLOAT
Rule 61    tipo -> BOOL
Rule 62    tipo -> CHAR
Rule 63    tipo -> STRING
Rule 64    definicion_instr -> LOCAL ID
Rule 65    definicion_instr -> GLOBAL ID
Rule 66    asignacion_instr -> ID IGUAL expression
Rule 67    asignacion_instr -> LOCAL ID IGUAL expression
Rule 68    asignacion_instr -> GLOBAL ID IGUAL expression
Rule 69    definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo
Rule 70    definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo
Rule 71    definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo
Rule 72    call_function -> ID PARIZQ PARDER
Rule 73    call_function -> ID PARIZQ exp_list PARDER
Rule 74    exp_list -> exp_list COMA expression
Rule 75    exp_list -> expression
Rule 76    statement -> instrucciones
Rule 77    declare_function -> FUNCTION ID PARIZQ PARDER statement END
Rule 78    declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END
Rule 79    dec_params -> dec_params COMA ID
Rule 80    dec_params -> ID
Rule 81    if_state -> IF expression statement END
Rule 82    if_state -> IF expression statement ELSE statement END
Rule 83    if_state -> IF expression statement else_if_list END
Rule 84    else_if_list -> ELSEIF expression statement
Rule 85    else_if_list -> ELSEIF expression statement ELSE statement
Rule 86    else_if_list -> ELSEIF expression statement else_if_list
Rule 87    while_state -> WHILE expression statement END
Rule 88    break_state -> BREAK
Rule 89    continue_state -> CONTINUE
Rule 90    return_state -> RETURN
Rule 91    return_state -> RETURN expression

Terminals, with rules where they appear

AND                  : 31
BOOL                 : 61
BREAK                : 88
CADENA               : 36
CHAR                 : 62
COMA                 : 44 54 56 74 79
CONCAT               : 
CONTINUE             : 89
CORCHETEDER          : 
CORCHETEIZQ          : 
COS                  : 46
DECIMAL              : 34
DIVIDIDO             : 21
DOSP                 : 69 69 70 70 71 71
ELSE                 : 82 85
ELSEIF               : 84 85 86
END                  : 77 78 81 82 83 87
ENTERO               : 35 44
FALSE                : 39
FLOAT                : 60
FUNCTION             : 77 78
GLOBAL               : 65 68 71
ID                   : 37 42 43 64 65 66 67 68 69 70 71 72 73 77 78 79 80
IF                   : 81 82 83
IGUAL                : 66 67 68 69 70 71
IGUALQUE             : 28
INT                  : 54 59
LLAVDER              : 
LLAVIZQ              : 
LOCAL                : 64 67 70
LOG                  : 44
LOG10                : 45
LOWERCASE            : 51
MAS                  : 18
MAYIGUALQUE          : 27
MAYQUE               : 24
MENIGUALQUE          : 26
MENOS                : 16 19
MENQUE               : 25
MODULO               : 23
NIGUALQUE            : 29
NOT                  : 17
NOTHING              : 
NUMERO               : 
OR                   : 30
PARDER               : 33 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 72 73 77 78
PARIZQ               : 33 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 72 73 77 78
PARSE                : 56
POR                  : 20
POTENCIA             : 22
PRINT                : 57
PRINTLN              : 58
PTCOMA               : 4 5 6 7 8 9 10 11 12 13 14 15
PUNTO                : 
RETURN               : 90 91
SIN                  : 47
SQRT                 : 49
STRING               : 63
TAN                  : 48
TOFLOAT              : 53
TOSTRING             : 52
TRUE                 : 38
TRUNC                : 54
TYPEOF               : 55
UPPERCASE            : 50
WHILE                : 87
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 7
break_state          : 12
call_func            : 40
call_function        : 9
continue_state       : 13
dec_params           : 78 79
declare_function     : 10
definicion_asignacion_instr : 8
definicion_instr     : 6
else_if_list         : 83 86
exp_list             : 43 73 74
expression           : 16 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 33 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 66 67 68 69 70 71 74 75 81 82 83 84 85 86 87 91
final_expression     : 32
if_state             : 14
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 76
nativas              : 41
print_instr          : 4
println_instr        : 5
return_state         : 11
statement            : 77 78 81 82 82 83 84 85 85 86 87
tipo                 : 56 69 70 71
while_state          : 15

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    instruccion                    shift and go to state 27
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    LOCAL           reduce using rule 3 (instrucciones -> instruccion .)
    GLOBAL          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    END             reduce using rule 3 (instrucciones -> instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instruccion .)
    ELSEIF          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print_instr . PTCOMA

    PTCOMA          shift and go to state 28


state 5

    (5) instruccion -> println_instr . PTCOMA

    PTCOMA          shift and go to state 29


state 6

    (6) instruccion -> definicion_instr . PTCOMA

    PTCOMA          shift and go to state 30


state 7

    (7) instruccion -> asignacion_instr . PTCOMA

    PTCOMA          shift and go to state 31


state 8

    (8) instruccion -> definicion_asignacion_instr . PTCOMA

    PTCOMA          shift and go to state 32


state 9

    (9) instruccion -> call_function . PTCOMA

    PTCOMA          shift and go to state 33


state 10

    (10) instruccion -> declare_function . PTCOMA

    PTCOMA          shift and go to state 34


state 11

    (11) instruccion -> return_state . PTCOMA

    PTCOMA          shift and go to state 35


state 12

    (12) instruccion -> break_state . PTCOMA

    PTCOMA          shift and go to state 36


state 13

    (13) instruccion -> continue_state . PTCOMA

    PTCOMA          shift and go to state 37


state 14

    (14) instruccion -> if_state . PTCOMA

    PTCOMA          shift and go to state 38


state 15

    (15) instruccion -> while_state . PTCOMA

    PTCOMA          shift and go to state 39


state 16

    (57) print_instr -> PRINT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 40


state 17

    (58) println_instr -> PRINTLN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 41


state 18

    (64) definicion_instr -> LOCAL . ID
    (67) asignacion_instr -> LOCAL . ID IGUAL expression
    (70) definicion_asignacion_instr -> LOCAL . ID IGUAL expression DOSP DOSP tipo

    ID              shift and go to state 42


state 19

    (66) asignacion_instr -> ID . IGUAL expression
    (69) definicion_asignacion_instr -> ID . IGUAL expression DOSP DOSP tipo
    (72) call_function -> ID . PARIZQ PARDER
    (73) call_function -> ID . PARIZQ exp_list PARDER

    IGUAL           shift and go to state 43
    PARIZQ          shift and go to state 44


state 20

    (65) definicion_instr -> GLOBAL . ID
    (68) asignacion_instr -> GLOBAL . ID IGUAL expression
    (71) definicion_asignacion_instr -> GLOBAL . ID IGUAL expression DOSP DOSP tipo

    ID              shift and go to state 45


state 21

    (77) declare_function -> FUNCTION . ID PARIZQ PARDER statement END
    (78) declare_function -> FUNCTION . ID PARIZQ dec_params PARDER statement END

    ID              shift and go to state 46


state 22

    (90) return_state -> RETURN .
    (91) return_state -> RETURN . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    PTCOMA          reduce using rule 90 (return_state -> RETURN .)
    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 47
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 23

    (88) break_state -> BREAK .

    PTCOMA          reduce using rule 88 (break_state -> BREAK .)


state 24

    (89) continue_state -> CONTINUE .

    PTCOMA          reduce using rule 89 (continue_state -> CONTINUE .)


state 25

    (81) if_state -> IF . expression statement END
    (82) if_state -> IF . expression statement ELSE statement END
    (83) if_state -> IF . expression statement else_if_list END
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 73
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 26

    (87) while_state -> WHILE . expression statement END
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 74
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 27

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOCAL           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    GLOBAL          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSEIF          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 28

    (4) instruccion -> print_instr PTCOMA .

    PRINT           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    PRINTLN         reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    LOCAL           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    GLOBAL          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ID              reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    FUNCTION        reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    RETURN          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    BREAK           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    IF              reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    WHILE           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    $end            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    END             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ELSE            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ELSEIF          reduce using rule 4 (instruccion -> print_instr PTCOMA .)


state 29

    (5) instruccion -> println_instr PTCOMA .

    PRINT           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    PRINTLN         reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    LOCAL           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    GLOBAL          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ID              reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    FUNCTION        reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    RETURN          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    BREAK           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    IF              reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    WHILE           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    $end            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    END             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ELSE            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ELSEIF          reduce using rule 5 (instruccion -> println_instr PTCOMA .)


state 30

    (6) instruccion -> definicion_instr PTCOMA .

    PRINT           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    PRINTLN         reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    LOCAL           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    GLOBAL          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ID              reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    FUNCTION        reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    RETURN          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    BREAK           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    CONTINUE        reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    IF              reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    WHILE           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    $end            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    END             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ELSE            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ELSEIF          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)


state 31

    (7) instruccion -> asignacion_instr PTCOMA .

    PRINT           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    PRINTLN         reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    LOCAL           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    GLOBAL          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ID              reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    FUNCTION        reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    RETURN          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    BREAK           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    CONTINUE        reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    IF              reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    WHILE           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    $end            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    END             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ELSE            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ELSEIF          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)


state 32

    (8) instruccion -> definicion_asignacion_instr PTCOMA .

    PRINT           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    PRINTLN         reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    LOCAL           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    GLOBAL          reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ID              reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    FUNCTION        reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    RETURN          reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    BREAK           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    CONTINUE        reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    IF              reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    WHILE           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    $end            reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    END             reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ELSE            reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ELSEIF          reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)


state 33

    (9) instruccion -> call_function PTCOMA .

    PRINT           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    PRINTLN         reduce using rule 9 (instruccion -> call_function PTCOMA .)
    LOCAL           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    GLOBAL          reduce using rule 9 (instruccion -> call_function PTCOMA .)
    ID              reduce using rule 9 (instruccion -> call_function PTCOMA .)
    FUNCTION        reduce using rule 9 (instruccion -> call_function PTCOMA .)
    RETURN          reduce using rule 9 (instruccion -> call_function PTCOMA .)
    BREAK           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    CONTINUE        reduce using rule 9 (instruccion -> call_function PTCOMA .)
    IF              reduce using rule 9 (instruccion -> call_function PTCOMA .)
    WHILE           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    $end            reduce using rule 9 (instruccion -> call_function PTCOMA .)
    END             reduce using rule 9 (instruccion -> call_function PTCOMA .)
    ELSE            reduce using rule 9 (instruccion -> call_function PTCOMA .)
    ELSEIF          reduce using rule 9 (instruccion -> call_function PTCOMA .)


state 34

    (10) instruccion -> declare_function PTCOMA .

    PRINT           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    PRINTLN         reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    LOCAL           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    GLOBAL          reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    ID              reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    FUNCTION        reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    RETURN          reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    BREAK           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    IF              reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    WHILE           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    $end            reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    END             reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    ELSE            reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    ELSEIF          reduce using rule 10 (instruccion -> declare_function PTCOMA .)


state 35

    (11) instruccion -> return_state PTCOMA .

    PRINT           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    PRINTLN         reduce using rule 11 (instruccion -> return_state PTCOMA .)
    LOCAL           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    GLOBAL          reduce using rule 11 (instruccion -> return_state PTCOMA .)
    ID              reduce using rule 11 (instruccion -> return_state PTCOMA .)
    FUNCTION        reduce using rule 11 (instruccion -> return_state PTCOMA .)
    RETURN          reduce using rule 11 (instruccion -> return_state PTCOMA .)
    BREAK           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    CONTINUE        reduce using rule 11 (instruccion -> return_state PTCOMA .)
    IF              reduce using rule 11 (instruccion -> return_state PTCOMA .)
    WHILE           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    $end            reduce using rule 11 (instruccion -> return_state PTCOMA .)
    END             reduce using rule 11 (instruccion -> return_state PTCOMA .)
    ELSE            reduce using rule 11 (instruccion -> return_state PTCOMA .)
    ELSEIF          reduce using rule 11 (instruccion -> return_state PTCOMA .)


state 36

    (12) instruccion -> break_state PTCOMA .

    PRINT           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    PRINTLN         reduce using rule 12 (instruccion -> break_state PTCOMA .)
    LOCAL           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    GLOBAL          reduce using rule 12 (instruccion -> break_state PTCOMA .)
    ID              reduce using rule 12 (instruccion -> break_state PTCOMA .)
    FUNCTION        reduce using rule 12 (instruccion -> break_state PTCOMA .)
    RETURN          reduce using rule 12 (instruccion -> break_state PTCOMA .)
    BREAK           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> break_state PTCOMA .)
    IF              reduce using rule 12 (instruccion -> break_state PTCOMA .)
    WHILE           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    $end            reduce using rule 12 (instruccion -> break_state PTCOMA .)
    END             reduce using rule 12 (instruccion -> break_state PTCOMA .)
    ELSE            reduce using rule 12 (instruccion -> break_state PTCOMA .)
    ELSEIF          reduce using rule 12 (instruccion -> break_state PTCOMA .)


state 37

    (13) instruccion -> continue_state PTCOMA .

    PRINT           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    PRINTLN         reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    LOCAL           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    GLOBAL          reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    ID              reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    FUNCTION        reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    RETURN          reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    BREAK           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    IF              reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    WHILE           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    $end            reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    END             reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    ELSE            reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    ELSEIF          reduce using rule 13 (instruccion -> continue_state PTCOMA .)


state 38

    (14) instruccion -> if_state PTCOMA .

    PRINT           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    PRINTLN         reduce using rule 14 (instruccion -> if_state PTCOMA .)
    LOCAL           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    GLOBAL          reduce using rule 14 (instruccion -> if_state PTCOMA .)
    ID              reduce using rule 14 (instruccion -> if_state PTCOMA .)
    FUNCTION        reduce using rule 14 (instruccion -> if_state PTCOMA .)
    RETURN          reduce using rule 14 (instruccion -> if_state PTCOMA .)
    BREAK           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    CONTINUE        reduce using rule 14 (instruccion -> if_state PTCOMA .)
    IF              reduce using rule 14 (instruccion -> if_state PTCOMA .)
    WHILE           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    $end            reduce using rule 14 (instruccion -> if_state PTCOMA .)
    END             reduce using rule 14 (instruccion -> if_state PTCOMA .)
    ELSE            reduce using rule 14 (instruccion -> if_state PTCOMA .)
    ELSEIF          reduce using rule 14 (instruccion -> if_state PTCOMA .)


state 39

    (15) instruccion -> while_state PTCOMA .

    PRINT           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    PRINTLN         reduce using rule 15 (instruccion -> while_state PTCOMA .)
    LOCAL           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    GLOBAL          reduce using rule 15 (instruccion -> while_state PTCOMA .)
    ID              reduce using rule 15 (instruccion -> while_state PTCOMA .)
    FUNCTION        reduce using rule 15 (instruccion -> while_state PTCOMA .)
    RETURN          reduce using rule 15 (instruccion -> while_state PTCOMA .)
    BREAK           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    CONTINUE        reduce using rule 15 (instruccion -> while_state PTCOMA .)
    IF              reduce using rule 15 (instruccion -> while_state PTCOMA .)
    WHILE           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    $end            reduce using rule 15 (instruccion -> while_state PTCOMA .)
    END             reduce using rule 15 (instruccion -> while_state PTCOMA .)
    ELSE            reduce using rule 15 (instruccion -> while_state PTCOMA .)
    ELSEIF          reduce using rule 15 (instruccion -> while_state PTCOMA .)


state 40

    (57) print_instr -> PRINT PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 75
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 41

    (58) println_instr -> PRINTLN PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 76
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 42

    (64) definicion_instr -> LOCAL ID .
    (67) asignacion_instr -> LOCAL ID . IGUAL expression
    (70) definicion_asignacion_instr -> LOCAL ID . IGUAL expression DOSP DOSP tipo

    PTCOMA          reduce using rule 64 (definicion_instr -> LOCAL ID .)
    IGUAL           shift and go to state 77


state 43

    (66) asignacion_instr -> ID IGUAL . expression
    (69) definicion_asignacion_instr -> ID IGUAL . expression DOSP DOSP tipo
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 78
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 44

    (72) call_function -> ID PARIZQ . PARDER
    (73) call_function -> ID PARIZQ . exp_list PARDER
    (74) exp_list -> . exp_list COMA expression
    (75) exp_list -> . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    PARDER          shift and go to state 79
    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    exp_list                       shift and go to state 80
    expression                     shift and go to state 81
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 45

    (65) definicion_instr -> GLOBAL ID .
    (68) asignacion_instr -> GLOBAL ID . IGUAL expression
    (71) definicion_asignacion_instr -> GLOBAL ID . IGUAL expression DOSP DOSP tipo

    PTCOMA          reduce using rule 65 (definicion_instr -> GLOBAL ID .)
    IGUAL           shift and go to state 82


state 46

    (77) declare_function -> FUNCTION ID . PARIZQ PARDER statement END
    (78) declare_function -> FUNCTION ID . PARIZQ dec_params PARDER statement END

    PARIZQ          shift and go to state 83


state 47

    (91) return_state -> RETURN expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PTCOMA          reduce using rule 91 (return_state -> RETURN expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 48

    (16) expression -> MENOS . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 98
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 49

    (17) expression -> NOT . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 99
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 50

    (32) expression -> final_expression .

    MAS             reduce using rule 32 (expression -> final_expression .)
    MENOS           reduce using rule 32 (expression -> final_expression .)
    POR             reduce using rule 32 (expression -> final_expression .)
    DIVIDIDO        reduce using rule 32 (expression -> final_expression .)
    POTENCIA        reduce using rule 32 (expression -> final_expression .)
    MODULO          reduce using rule 32 (expression -> final_expression .)
    MAYQUE          reduce using rule 32 (expression -> final_expression .)
    MENQUE          reduce using rule 32 (expression -> final_expression .)
    MENIGUALQUE     reduce using rule 32 (expression -> final_expression .)
    MAYIGUALQUE     reduce using rule 32 (expression -> final_expression .)
    IGUALQUE        reduce using rule 32 (expression -> final_expression .)
    NIGUALQUE       reduce using rule 32 (expression -> final_expression .)
    OR              reduce using rule 32 (expression -> final_expression .)
    AND             reduce using rule 32 (expression -> final_expression .)
    PTCOMA          reduce using rule 32 (expression -> final_expression .)
    PRINT           reduce using rule 32 (expression -> final_expression .)
    PRINTLN         reduce using rule 32 (expression -> final_expression .)
    LOCAL           reduce using rule 32 (expression -> final_expression .)
    GLOBAL          reduce using rule 32 (expression -> final_expression .)
    ID              reduce using rule 32 (expression -> final_expression .)
    FUNCTION        reduce using rule 32 (expression -> final_expression .)
    RETURN          reduce using rule 32 (expression -> final_expression .)
    BREAK           reduce using rule 32 (expression -> final_expression .)
    CONTINUE        reduce using rule 32 (expression -> final_expression .)
    IF              reduce using rule 32 (expression -> final_expression .)
    WHILE           reduce using rule 32 (expression -> final_expression .)
    PARDER          reduce using rule 32 (expression -> final_expression .)
    DOSP            reduce using rule 32 (expression -> final_expression .)
    COMA            reduce using rule 32 (expression -> final_expression .)


state 51

    (33) final_expression -> PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 100
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 52

    (34) final_expression -> DECIMAL .

    MAS             reduce using rule 34 (final_expression -> DECIMAL .)
    MENOS           reduce using rule 34 (final_expression -> DECIMAL .)
    POR             reduce using rule 34 (final_expression -> DECIMAL .)
    DIVIDIDO        reduce using rule 34 (final_expression -> DECIMAL .)
    POTENCIA        reduce using rule 34 (final_expression -> DECIMAL .)
    MODULO          reduce using rule 34 (final_expression -> DECIMAL .)
    MAYQUE          reduce using rule 34 (final_expression -> DECIMAL .)
    MENQUE          reduce using rule 34 (final_expression -> DECIMAL .)
    MENIGUALQUE     reduce using rule 34 (final_expression -> DECIMAL .)
    MAYIGUALQUE     reduce using rule 34 (final_expression -> DECIMAL .)
    IGUALQUE        reduce using rule 34 (final_expression -> DECIMAL .)
    NIGUALQUE       reduce using rule 34 (final_expression -> DECIMAL .)
    OR              reduce using rule 34 (final_expression -> DECIMAL .)
    AND             reduce using rule 34 (final_expression -> DECIMAL .)
    PTCOMA          reduce using rule 34 (final_expression -> DECIMAL .)
    PRINT           reduce using rule 34 (final_expression -> DECIMAL .)
    PRINTLN         reduce using rule 34 (final_expression -> DECIMAL .)
    LOCAL           reduce using rule 34 (final_expression -> DECIMAL .)
    GLOBAL          reduce using rule 34 (final_expression -> DECIMAL .)
    ID              reduce using rule 34 (final_expression -> DECIMAL .)
    FUNCTION        reduce using rule 34 (final_expression -> DECIMAL .)
    RETURN          reduce using rule 34 (final_expression -> DECIMAL .)
    BREAK           reduce using rule 34 (final_expression -> DECIMAL .)
    CONTINUE        reduce using rule 34 (final_expression -> DECIMAL .)
    IF              reduce using rule 34 (final_expression -> DECIMAL .)
    WHILE           reduce using rule 34 (final_expression -> DECIMAL .)
    PARDER          reduce using rule 34 (final_expression -> DECIMAL .)
    DOSP            reduce using rule 34 (final_expression -> DECIMAL .)
    COMA            reduce using rule 34 (final_expression -> DECIMAL .)


state 53

    (35) final_expression -> ENTERO .

    MAS             reduce using rule 35 (final_expression -> ENTERO .)
    MENOS           reduce using rule 35 (final_expression -> ENTERO .)
    POR             reduce using rule 35 (final_expression -> ENTERO .)
    DIVIDIDO        reduce using rule 35 (final_expression -> ENTERO .)
    POTENCIA        reduce using rule 35 (final_expression -> ENTERO .)
    MODULO          reduce using rule 35 (final_expression -> ENTERO .)
    MAYQUE          reduce using rule 35 (final_expression -> ENTERO .)
    MENQUE          reduce using rule 35 (final_expression -> ENTERO .)
    MENIGUALQUE     reduce using rule 35 (final_expression -> ENTERO .)
    MAYIGUALQUE     reduce using rule 35 (final_expression -> ENTERO .)
    IGUALQUE        reduce using rule 35 (final_expression -> ENTERO .)
    NIGUALQUE       reduce using rule 35 (final_expression -> ENTERO .)
    OR              reduce using rule 35 (final_expression -> ENTERO .)
    AND             reduce using rule 35 (final_expression -> ENTERO .)
    PTCOMA          reduce using rule 35 (final_expression -> ENTERO .)
    PRINT           reduce using rule 35 (final_expression -> ENTERO .)
    PRINTLN         reduce using rule 35 (final_expression -> ENTERO .)
    LOCAL           reduce using rule 35 (final_expression -> ENTERO .)
    GLOBAL          reduce using rule 35 (final_expression -> ENTERO .)
    ID              reduce using rule 35 (final_expression -> ENTERO .)
    FUNCTION        reduce using rule 35 (final_expression -> ENTERO .)
    RETURN          reduce using rule 35 (final_expression -> ENTERO .)
    BREAK           reduce using rule 35 (final_expression -> ENTERO .)
    CONTINUE        reduce using rule 35 (final_expression -> ENTERO .)
    IF              reduce using rule 35 (final_expression -> ENTERO .)
    WHILE           reduce using rule 35 (final_expression -> ENTERO .)
    PARDER          reduce using rule 35 (final_expression -> ENTERO .)
    DOSP            reduce using rule 35 (final_expression -> ENTERO .)
    COMA            reduce using rule 35 (final_expression -> ENTERO .)


state 54

    (36) final_expression -> CADENA .

    MAS             reduce using rule 36 (final_expression -> CADENA .)
    MENOS           reduce using rule 36 (final_expression -> CADENA .)
    POR             reduce using rule 36 (final_expression -> CADENA .)
    DIVIDIDO        reduce using rule 36 (final_expression -> CADENA .)
    POTENCIA        reduce using rule 36 (final_expression -> CADENA .)
    MODULO          reduce using rule 36 (final_expression -> CADENA .)
    MAYQUE          reduce using rule 36 (final_expression -> CADENA .)
    MENQUE          reduce using rule 36 (final_expression -> CADENA .)
    MENIGUALQUE     reduce using rule 36 (final_expression -> CADENA .)
    MAYIGUALQUE     reduce using rule 36 (final_expression -> CADENA .)
    IGUALQUE        reduce using rule 36 (final_expression -> CADENA .)
    NIGUALQUE       reduce using rule 36 (final_expression -> CADENA .)
    OR              reduce using rule 36 (final_expression -> CADENA .)
    AND             reduce using rule 36 (final_expression -> CADENA .)
    PTCOMA          reduce using rule 36 (final_expression -> CADENA .)
    PRINT           reduce using rule 36 (final_expression -> CADENA .)
    PRINTLN         reduce using rule 36 (final_expression -> CADENA .)
    LOCAL           reduce using rule 36 (final_expression -> CADENA .)
    GLOBAL          reduce using rule 36 (final_expression -> CADENA .)
    ID              reduce using rule 36 (final_expression -> CADENA .)
    FUNCTION        reduce using rule 36 (final_expression -> CADENA .)
    RETURN          reduce using rule 36 (final_expression -> CADENA .)
    BREAK           reduce using rule 36 (final_expression -> CADENA .)
    CONTINUE        reduce using rule 36 (final_expression -> CADENA .)
    IF              reduce using rule 36 (final_expression -> CADENA .)
    WHILE           reduce using rule 36 (final_expression -> CADENA .)
    PARDER          reduce using rule 36 (final_expression -> CADENA .)
    DOSP            reduce using rule 36 (final_expression -> CADENA .)
    COMA            reduce using rule 36 (final_expression -> CADENA .)


state 55

    (37) final_expression -> ID .
    (42) call_func -> ID . PARIZQ PARDER
    (43) call_func -> ID . PARIZQ exp_list PARDER

    MAS             reduce using rule 37 (final_expression -> ID .)
    MENOS           reduce using rule 37 (final_expression -> ID .)
    POR             reduce using rule 37 (final_expression -> ID .)
    DIVIDIDO        reduce using rule 37 (final_expression -> ID .)
    POTENCIA        reduce using rule 37 (final_expression -> ID .)
    MODULO          reduce using rule 37 (final_expression -> ID .)
    MAYQUE          reduce using rule 37 (final_expression -> ID .)
    MENQUE          reduce using rule 37 (final_expression -> ID .)
    MENIGUALQUE     reduce using rule 37 (final_expression -> ID .)
    MAYIGUALQUE     reduce using rule 37 (final_expression -> ID .)
    IGUALQUE        reduce using rule 37 (final_expression -> ID .)
    NIGUALQUE       reduce using rule 37 (final_expression -> ID .)
    OR              reduce using rule 37 (final_expression -> ID .)
    AND             reduce using rule 37 (final_expression -> ID .)
    PTCOMA          reduce using rule 37 (final_expression -> ID .)
    PRINT           reduce using rule 37 (final_expression -> ID .)
    PRINTLN         reduce using rule 37 (final_expression -> ID .)
    LOCAL           reduce using rule 37 (final_expression -> ID .)
    GLOBAL          reduce using rule 37 (final_expression -> ID .)
    ID              reduce using rule 37 (final_expression -> ID .)
    FUNCTION        reduce using rule 37 (final_expression -> ID .)
    RETURN          reduce using rule 37 (final_expression -> ID .)
    BREAK           reduce using rule 37 (final_expression -> ID .)
    CONTINUE        reduce using rule 37 (final_expression -> ID .)
    IF              reduce using rule 37 (final_expression -> ID .)
    WHILE           reduce using rule 37 (final_expression -> ID .)
    PARDER          reduce using rule 37 (final_expression -> ID .)
    DOSP            reduce using rule 37 (final_expression -> ID .)
    COMA            reduce using rule 37 (final_expression -> ID .)
    PARIZQ          shift and go to state 101


state 56

    (38) final_expression -> TRUE .

    MAS             reduce using rule 38 (final_expression -> TRUE .)
    MENOS           reduce using rule 38 (final_expression -> TRUE .)
    POR             reduce using rule 38 (final_expression -> TRUE .)
    DIVIDIDO        reduce using rule 38 (final_expression -> TRUE .)
    POTENCIA        reduce using rule 38 (final_expression -> TRUE .)
    MODULO          reduce using rule 38 (final_expression -> TRUE .)
    MAYQUE          reduce using rule 38 (final_expression -> TRUE .)
    MENQUE          reduce using rule 38 (final_expression -> TRUE .)
    MENIGUALQUE     reduce using rule 38 (final_expression -> TRUE .)
    MAYIGUALQUE     reduce using rule 38 (final_expression -> TRUE .)
    IGUALQUE        reduce using rule 38 (final_expression -> TRUE .)
    NIGUALQUE       reduce using rule 38 (final_expression -> TRUE .)
    OR              reduce using rule 38 (final_expression -> TRUE .)
    AND             reduce using rule 38 (final_expression -> TRUE .)
    PTCOMA          reduce using rule 38 (final_expression -> TRUE .)
    PRINT           reduce using rule 38 (final_expression -> TRUE .)
    PRINTLN         reduce using rule 38 (final_expression -> TRUE .)
    LOCAL           reduce using rule 38 (final_expression -> TRUE .)
    GLOBAL          reduce using rule 38 (final_expression -> TRUE .)
    ID              reduce using rule 38 (final_expression -> TRUE .)
    FUNCTION        reduce using rule 38 (final_expression -> TRUE .)
    RETURN          reduce using rule 38 (final_expression -> TRUE .)
    BREAK           reduce using rule 38 (final_expression -> TRUE .)
    CONTINUE        reduce using rule 38 (final_expression -> TRUE .)
    IF              reduce using rule 38 (final_expression -> TRUE .)
    WHILE           reduce using rule 38 (final_expression -> TRUE .)
    PARDER          reduce using rule 38 (final_expression -> TRUE .)
    DOSP            reduce using rule 38 (final_expression -> TRUE .)
    COMA            reduce using rule 38 (final_expression -> TRUE .)


state 57

    (39) final_expression -> FALSE .

    MAS             reduce using rule 39 (final_expression -> FALSE .)
    MENOS           reduce using rule 39 (final_expression -> FALSE .)
    POR             reduce using rule 39 (final_expression -> FALSE .)
    DIVIDIDO        reduce using rule 39 (final_expression -> FALSE .)
    POTENCIA        reduce using rule 39 (final_expression -> FALSE .)
    MODULO          reduce using rule 39 (final_expression -> FALSE .)
    MAYQUE          reduce using rule 39 (final_expression -> FALSE .)
    MENQUE          reduce using rule 39 (final_expression -> FALSE .)
    MENIGUALQUE     reduce using rule 39 (final_expression -> FALSE .)
    MAYIGUALQUE     reduce using rule 39 (final_expression -> FALSE .)
    IGUALQUE        reduce using rule 39 (final_expression -> FALSE .)
    NIGUALQUE       reduce using rule 39 (final_expression -> FALSE .)
    OR              reduce using rule 39 (final_expression -> FALSE .)
    AND             reduce using rule 39 (final_expression -> FALSE .)
    PTCOMA          reduce using rule 39 (final_expression -> FALSE .)
    PRINT           reduce using rule 39 (final_expression -> FALSE .)
    PRINTLN         reduce using rule 39 (final_expression -> FALSE .)
    LOCAL           reduce using rule 39 (final_expression -> FALSE .)
    GLOBAL          reduce using rule 39 (final_expression -> FALSE .)
    ID              reduce using rule 39 (final_expression -> FALSE .)
    FUNCTION        reduce using rule 39 (final_expression -> FALSE .)
    RETURN          reduce using rule 39 (final_expression -> FALSE .)
    BREAK           reduce using rule 39 (final_expression -> FALSE .)
    CONTINUE        reduce using rule 39 (final_expression -> FALSE .)
    IF              reduce using rule 39 (final_expression -> FALSE .)
    WHILE           reduce using rule 39 (final_expression -> FALSE .)
    PARDER          reduce using rule 39 (final_expression -> FALSE .)
    DOSP            reduce using rule 39 (final_expression -> FALSE .)
    COMA            reduce using rule 39 (final_expression -> FALSE .)


state 58

    (40) final_expression -> call_func .

    MAS             reduce using rule 40 (final_expression -> call_func .)
    MENOS           reduce using rule 40 (final_expression -> call_func .)
    POR             reduce using rule 40 (final_expression -> call_func .)
    DIVIDIDO        reduce using rule 40 (final_expression -> call_func .)
    POTENCIA        reduce using rule 40 (final_expression -> call_func .)
    MODULO          reduce using rule 40 (final_expression -> call_func .)
    MAYQUE          reduce using rule 40 (final_expression -> call_func .)
    MENQUE          reduce using rule 40 (final_expression -> call_func .)
    MENIGUALQUE     reduce using rule 40 (final_expression -> call_func .)
    MAYIGUALQUE     reduce using rule 40 (final_expression -> call_func .)
    IGUALQUE        reduce using rule 40 (final_expression -> call_func .)
    NIGUALQUE       reduce using rule 40 (final_expression -> call_func .)
    OR              reduce using rule 40 (final_expression -> call_func .)
    AND             reduce using rule 40 (final_expression -> call_func .)
    PTCOMA          reduce using rule 40 (final_expression -> call_func .)
    PRINT           reduce using rule 40 (final_expression -> call_func .)
    PRINTLN         reduce using rule 40 (final_expression -> call_func .)
    LOCAL           reduce using rule 40 (final_expression -> call_func .)
    GLOBAL          reduce using rule 40 (final_expression -> call_func .)
    ID              reduce using rule 40 (final_expression -> call_func .)
    FUNCTION        reduce using rule 40 (final_expression -> call_func .)
    RETURN          reduce using rule 40 (final_expression -> call_func .)
    BREAK           reduce using rule 40 (final_expression -> call_func .)
    CONTINUE        reduce using rule 40 (final_expression -> call_func .)
    IF              reduce using rule 40 (final_expression -> call_func .)
    WHILE           reduce using rule 40 (final_expression -> call_func .)
    PARDER          reduce using rule 40 (final_expression -> call_func .)
    DOSP            reduce using rule 40 (final_expression -> call_func .)
    COMA            reduce using rule 40 (final_expression -> call_func .)


state 59

    (41) final_expression -> nativas .

    MAS             reduce using rule 41 (final_expression -> nativas .)
    MENOS           reduce using rule 41 (final_expression -> nativas .)
    POR             reduce using rule 41 (final_expression -> nativas .)
    DIVIDIDO        reduce using rule 41 (final_expression -> nativas .)
    POTENCIA        reduce using rule 41 (final_expression -> nativas .)
    MODULO          reduce using rule 41 (final_expression -> nativas .)
    MAYQUE          reduce using rule 41 (final_expression -> nativas .)
    MENQUE          reduce using rule 41 (final_expression -> nativas .)
    MENIGUALQUE     reduce using rule 41 (final_expression -> nativas .)
    MAYIGUALQUE     reduce using rule 41 (final_expression -> nativas .)
    IGUALQUE        reduce using rule 41 (final_expression -> nativas .)
    NIGUALQUE       reduce using rule 41 (final_expression -> nativas .)
    OR              reduce using rule 41 (final_expression -> nativas .)
    AND             reduce using rule 41 (final_expression -> nativas .)
    PTCOMA          reduce using rule 41 (final_expression -> nativas .)
    PRINT           reduce using rule 41 (final_expression -> nativas .)
    PRINTLN         reduce using rule 41 (final_expression -> nativas .)
    LOCAL           reduce using rule 41 (final_expression -> nativas .)
    GLOBAL          reduce using rule 41 (final_expression -> nativas .)
    ID              reduce using rule 41 (final_expression -> nativas .)
    FUNCTION        reduce using rule 41 (final_expression -> nativas .)
    RETURN          reduce using rule 41 (final_expression -> nativas .)
    BREAK           reduce using rule 41 (final_expression -> nativas .)
    CONTINUE        reduce using rule 41 (final_expression -> nativas .)
    IF              reduce using rule 41 (final_expression -> nativas .)
    WHILE           reduce using rule 41 (final_expression -> nativas .)
    PARDER          reduce using rule 41 (final_expression -> nativas .)
    DOSP            reduce using rule 41 (final_expression -> nativas .)
    COMA            reduce using rule 41 (final_expression -> nativas .)


state 60

    (44) nativas -> LOG . PARIZQ ENTERO COMA expression PARDER

    PARIZQ          shift and go to state 102


state 61

    (45) nativas -> LOG10 . PARIZQ expression PARDER

    PARIZQ          shift and go to state 103


state 62

    (46) nativas -> COS . PARIZQ expression PARDER

    PARIZQ          shift and go to state 104


state 63

    (47) nativas -> SIN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 105


state 64

    (48) nativas -> TAN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 106


state 65

    (49) nativas -> SQRT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 107


state 66

    (50) nativas -> UPPERCASE . PARIZQ expression PARDER

    PARIZQ          shift and go to state 108


state 67

    (51) nativas -> LOWERCASE . PARIZQ expression PARDER

    PARIZQ          shift and go to state 109


state 68

    (52) nativas -> TOSTRING . PARIZQ expression PARDER

    PARIZQ          shift and go to state 110


state 69

    (53) nativas -> TOFLOAT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 111


state 70

    (54) nativas -> TRUNC . PARIZQ INT COMA expression PARDER

    PARIZQ          shift and go to state 112


state 71

    (55) nativas -> TYPEOF . PARIZQ expression PARDER

    PARIZQ          shift and go to state 113


state 72

    (56) nativas -> PARSE . PARIZQ tipo COMA expression PARDER

    PARIZQ          shift and go to state 114


state 73

    (81) if_state -> IF expression . statement END
    (82) if_state -> IF expression . statement ELSE statement END
    (83) if_state -> IF expression . statement else_if_list END
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    statement                      shift and go to state 115
    instrucciones                  shift and go to state 116
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 74

    (87) while_state -> WHILE expression . statement END
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    statement                      shift and go to state 117
    instrucciones                  shift and go to state 116
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 75

    (57) print_instr -> PRINT PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 118
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 76

    (58) println_instr -> PRINTLN PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 119
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 77

    (67) asignacion_instr -> LOCAL ID IGUAL . expression
    (70) definicion_asignacion_instr -> LOCAL ID IGUAL . expression DOSP DOSP tipo
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 120
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 78

    (66) asignacion_instr -> ID IGUAL expression .
    (69) definicion_asignacion_instr -> ID IGUAL expression . DOSP DOSP tipo
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PTCOMA          reduce using rule 66 (asignacion_instr -> ID IGUAL expression .)
    DOSP            shift and go to state 121
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 79

    (72) call_function -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)


state 80

    (73) call_function -> ID PARIZQ exp_list . PARDER
    (74) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 122
    COMA            shift and go to state 123


state 81

    (75) exp_list -> expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          reduce using rule 75 (exp_list -> expression .)
    COMA            reduce using rule 75 (exp_list -> expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 82

    (68) asignacion_instr -> GLOBAL ID IGUAL . expression
    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL . expression DOSP DOSP tipo
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 124
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 83

    (77) declare_function -> FUNCTION ID PARIZQ . PARDER statement END
    (78) declare_function -> FUNCTION ID PARIZQ . dec_params PARDER statement END
    (79) dec_params -> . dec_params COMA ID
    (80) dec_params -> . ID

    PARDER          shift and go to state 126
    ID              shift and go to state 125

    dec_params                     shift and go to state 127

state 84

    (18) expression -> expression MAS . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 128
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 85

    (19) expression -> expression MENOS . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 129
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 86

    (20) expression -> expression POR . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 130
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 87

    (21) expression -> expression DIVIDIDO . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 131
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 88

    (22) expression -> expression POTENCIA . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 132
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 89

    (23) expression -> expression MODULO . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 133
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 90

    (24) expression -> expression MAYQUE . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 134
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 91

    (25) expression -> expression MENQUE . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 135
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 92

    (26) expression -> expression MENIGUALQUE . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 136
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 93

    (27) expression -> expression MAYIGUALQUE . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 137
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 94

    (28) expression -> expression IGUALQUE . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 138
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 95

    (29) expression -> expression NIGUALQUE . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 139
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 96

    (30) expression -> expression OR . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 140
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 97

    (31) expression -> expression AND . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 141
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 98

    (16) expression -> MENOS expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 16 (expression -> MENOS expression .)
    MENOS           reduce using rule 16 (expression -> MENOS expression .)
    POR             reduce using rule 16 (expression -> MENOS expression .)
    DIVIDIDO        reduce using rule 16 (expression -> MENOS expression .)
    POTENCIA        reduce using rule 16 (expression -> MENOS expression .)
    MODULO          reduce using rule 16 (expression -> MENOS expression .)
    MAYQUE          reduce using rule 16 (expression -> MENOS expression .)
    MENQUE          reduce using rule 16 (expression -> MENOS expression .)
    MENIGUALQUE     reduce using rule 16 (expression -> MENOS expression .)
    MAYIGUALQUE     reduce using rule 16 (expression -> MENOS expression .)
    IGUALQUE        reduce using rule 16 (expression -> MENOS expression .)
    NIGUALQUE       reduce using rule 16 (expression -> MENOS expression .)
    OR              reduce using rule 16 (expression -> MENOS expression .)
    AND             reduce using rule 16 (expression -> MENOS expression .)
    PTCOMA          reduce using rule 16 (expression -> MENOS expression .)
    PRINT           reduce using rule 16 (expression -> MENOS expression .)
    PRINTLN         reduce using rule 16 (expression -> MENOS expression .)
    LOCAL           reduce using rule 16 (expression -> MENOS expression .)
    GLOBAL          reduce using rule 16 (expression -> MENOS expression .)
    ID              reduce using rule 16 (expression -> MENOS expression .)
    FUNCTION        reduce using rule 16 (expression -> MENOS expression .)
    RETURN          reduce using rule 16 (expression -> MENOS expression .)
    BREAK           reduce using rule 16 (expression -> MENOS expression .)
    CONTINUE        reduce using rule 16 (expression -> MENOS expression .)
    IF              reduce using rule 16 (expression -> MENOS expression .)
    WHILE           reduce using rule 16 (expression -> MENOS expression .)
    PARDER          reduce using rule 16 (expression -> MENOS expression .)
    DOSP            reduce using rule 16 (expression -> MENOS expression .)
    COMA            reduce using rule 16 (expression -> MENOS expression .)

  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! POTENCIA        [ shift and go to state 88 ]
  ! MODULO          [ shift and go to state 89 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 99

    (17) expression -> NOT expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 17 (expression -> NOT expression .)
    MENOS           reduce using rule 17 (expression -> NOT expression .)
    POR             reduce using rule 17 (expression -> NOT expression .)
    DIVIDIDO        reduce using rule 17 (expression -> NOT expression .)
    POTENCIA        reduce using rule 17 (expression -> NOT expression .)
    MODULO          reduce using rule 17 (expression -> NOT expression .)
    MAYQUE          reduce using rule 17 (expression -> NOT expression .)
    MENQUE          reduce using rule 17 (expression -> NOT expression .)
    MENIGUALQUE     reduce using rule 17 (expression -> NOT expression .)
    MAYIGUALQUE     reduce using rule 17 (expression -> NOT expression .)
    IGUALQUE        reduce using rule 17 (expression -> NOT expression .)
    NIGUALQUE       reduce using rule 17 (expression -> NOT expression .)
    OR              reduce using rule 17 (expression -> NOT expression .)
    AND             reduce using rule 17 (expression -> NOT expression .)
    PTCOMA          reduce using rule 17 (expression -> NOT expression .)
    PRINT           reduce using rule 17 (expression -> NOT expression .)
    PRINTLN         reduce using rule 17 (expression -> NOT expression .)
    LOCAL           reduce using rule 17 (expression -> NOT expression .)
    GLOBAL          reduce using rule 17 (expression -> NOT expression .)
    ID              reduce using rule 17 (expression -> NOT expression .)
    FUNCTION        reduce using rule 17 (expression -> NOT expression .)
    RETURN          reduce using rule 17 (expression -> NOT expression .)
    BREAK           reduce using rule 17 (expression -> NOT expression .)
    CONTINUE        reduce using rule 17 (expression -> NOT expression .)
    IF              reduce using rule 17 (expression -> NOT expression .)
    WHILE           reduce using rule 17 (expression -> NOT expression .)
    PARDER          reduce using rule 17 (expression -> NOT expression .)
    DOSP            reduce using rule 17 (expression -> NOT expression .)
    COMA            reduce using rule 17 (expression -> NOT expression .)

  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! POTENCIA        [ shift and go to state 88 ]
  ! MODULO          [ shift and go to state 89 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 100

    (33) final_expression -> PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 142
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 101

    (42) call_func -> ID PARIZQ . PARDER
    (43) call_func -> ID PARIZQ . exp_list PARDER
    (74) exp_list -> . exp_list COMA expression
    (75) exp_list -> . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    PARDER          shift and go to state 143
    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    exp_list                       shift and go to state 144
    expression                     shift and go to state 81
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 102

    (44) nativas -> LOG PARIZQ . ENTERO COMA expression PARDER

    ENTERO          shift and go to state 145


state 103

    (45) nativas -> LOG10 PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 146
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 104

    (46) nativas -> COS PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 147
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 105

    (47) nativas -> SIN PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 148
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 106

    (48) nativas -> TAN PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 149
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 107

    (49) nativas -> SQRT PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 150
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 108

    (50) nativas -> UPPERCASE PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 151
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 109

    (51) nativas -> LOWERCASE PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 152
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 110

    (52) nativas -> TOSTRING PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 153
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 111

    (53) nativas -> TOFLOAT PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 154
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 112

    (54) nativas -> TRUNC PARIZQ . INT COMA expression PARDER

    INT             shift and go to state 155


state 113

    (55) nativas -> TYPEOF PARIZQ . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 156
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 114

    (56) nativas -> PARSE PARIZQ . tipo COMA expression PARDER
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 158
    FLOAT           shift and go to state 159
    BOOL            shift and go to state 160
    CHAR            shift and go to state 161
    STRING          shift and go to state 162

    tipo                           shift and go to state 157

state 115

    (81) if_state -> IF expression statement . END
    (82) if_state -> IF expression statement . ELSE statement END
    (83) if_state -> IF expression statement . else_if_list END
    (84) else_if_list -> . ELSEIF expression statement
    (85) else_if_list -> . ELSEIF expression statement ELSE statement
    (86) else_if_list -> . ELSEIF expression statement else_if_list

    END             shift and go to state 163
    ELSE            shift and go to state 164
    ELSEIF          shift and go to state 166

    else_if_list                   shift and go to state 165

state 116

    (76) statement -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    END             reduce using rule 76 (statement -> instrucciones .)
    ELSE            reduce using rule 76 (statement -> instrucciones .)
    ELSEIF          reduce using rule 76 (statement -> instrucciones .)
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    instruccion                    shift and go to state 27
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 117

    (87) while_state -> WHILE expression statement . END

    END             shift and go to state 167


state 118

    (57) print_instr -> PRINT PARIZQ expression PARDER .

    PTCOMA          reduce using rule 57 (print_instr -> PRINT PARIZQ expression PARDER .)


state 119

    (58) println_instr -> PRINTLN PARIZQ expression PARDER .

    PTCOMA          reduce using rule 58 (println_instr -> PRINTLN PARIZQ expression PARDER .)


state 120

    (67) asignacion_instr -> LOCAL ID IGUAL expression .
    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression . DOSP DOSP tipo
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PTCOMA          reduce using rule 67 (asignacion_instr -> LOCAL ID IGUAL expression .)
    DOSP            shift and go to state 168
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 121

    (69) definicion_asignacion_instr -> ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 169


state 122

    (73) call_function -> ID PARIZQ exp_list PARDER .

    PTCOMA          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)


state 123

    (74) exp_list -> exp_list COMA . expression
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 170
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 124

    (68) asignacion_instr -> GLOBAL ID IGUAL expression .
    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression . DOSP DOSP tipo
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PTCOMA          reduce using rule 68 (asignacion_instr -> GLOBAL ID IGUAL expression .)
    DOSP            shift and go to state 171
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 125

    (80) dec_params -> ID .

    PARDER          reduce using rule 80 (dec_params -> ID .)
    COMA            reduce using rule 80 (dec_params -> ID .)


state 126

    (77) declare_function -> FUNCTION ID PARIZQ PARDER . statement END
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    statement                      shift and go to state 172
    instrucciones                  shift and go to state 116
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 127

    (78) declare_function -> FUNCTION ID PARIZQ dec_params . PARDER statement END
    (79) dec_params -> dec_params . COMA ID

    PARDER          shift and go to state 173
    COMA            shift and go to state 174


state 128

    (18) expression -> expression MAS expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 18 (expression -> expression MAS expression .)
    MENOS           reduce using rule 18 (expression -> expression MAS expression .)
    MAYQUE          reduce using rule 18 (expression -> expression MAS expression .)
    MENQUE          reduce using rule 18 (expression -> expression MAS expression .)
    MENIGUALQUE     reduce using rule 18 (expression -> expression MAS expression .)
    MAYIGUALQUE     reduce using rule 18 (expression -> expression MAS expression .)
    IGUALQUE        reduce using rule 18 (expression -> expression MAS expression .)
    NIGUALQUE       reduce using rule 18 (expression -> expression MAS expression .)
    OR              reduce using rule 18 (expression -> expression MAS expression .)
    AND             reduce using rule 18 (expression -> expression MAS expression .)
    PTCOMA          reduce using rule 18 (expression -> expression MAS expression .)
    PRINT           reduce using rule 18 (expression -> expression MAS expression .)
    PRINTLN         reduce using rule 18 (expression -> expression MAS expression .)
    LOCAL           reduce using rule 18 (expression -> expression MAS expression .)
    GLOBAL          reduce using rule 18 (expression -> expression MAS expression .)
    ID              reduce using rule 18 (expression -> expression MAS expression .)
    FUNCTION        reduce using rule 18 (expression -> expression MAS expression .)
    RETURN          reduce using rule 18 (expression -> expression MAS expression .)
    BREAK           reduce using rule 18 (expression -> expression MAS expression .)
    CONTINUE        reduce using rule 18 (expression -> expression MAS expression .)
    IF              reduce using rule 18 (expression -> expression MAS expression .)
    WHILE           reduce using rule 18 (expression -> expression MAS expression .)
    PARDER          reduce using rule 18 (expression -> expression MAS expression .)
    DOSP            reduce using rule 18 (expression -> expression MAS expression .)
    COMA            reduce using rule 18 (expression -> expression MAS expression .)
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89

  ! POR             [ reduce using rule 18 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 18 (expression -> expression MAS expression .) ]
  ! POTENCIA        [ reduce using rule 18 (expression -> expression MAS expression .) ]
  ! MODULO          [ reduce using rule 18 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 129

    (19) expression -> expression MENOS expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 19 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 19 (expression -> expression MENOS expression .)
    MAYQUE          reduce using rule 19 (expression -> expression MENOS expression .)
    MENQUE          reduce using rule 19 (expression -> expression MENOS expression .)
    MENIGUALQUE     reduce using rule 19 (expression -> expression MENOS expression .)
    MAYIGUALQUE     reduce using rule 19 (expression -> expression MENOS expression .)
    IGUALQUE        reduce using rule 19 (expression -> expression MENOS expression .)
    NIGUALQUE       reduce using rule 19 (expression -> expression MENOS expression .)
    OR              reduce using rule 19 (expression -> expression MENOS expression .)
    AND             reduce using rule 19 (expression -> expression MENOS expression .)
    PTCOMA          reduce using rule 19 (expression -> expression MENOS expression .)
    PRINT           reduce using rule 19 (expression -> expression MENOS expression .)
    PRINTLN         reduce using rule 19 (expression -> expression MENOS expression .)
    LOCAL           reduce using rule 19 (expression -> expression MENOS expression .)
    GLOBAL          reduce using rule 19 (expression -> expression MENOS expression .)
    ID              reduce using rule 19 (expression -> expression MENOS expression .)
    FUNCTION        reduce using rule 19 (expression -> expression MENOS expression .)
    RETURN          reduce using rule 19 (expression -> expression MENOS expression .)
    BREAK           reduce using rule 19 (expression -> expression MENOS expression .)
    CONTINUE        reduce using rule 19 (expression -> expression MENOS expression .)
    IF              reduce using rule 19 (expression -> expression MENOS expression .)
    WHILE           reduce using rule 19 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 19 (expression -> expression MENOS expression .)
    DOSP            reduce using rule 19 (expression -> expression MENOS expression .)
    COMA            reduce using rule 19 (expression -> expression MENOS expression .)
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89

  ! POR             [ reduce using rule 19 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 19 (expression -> expression MENOS expression .) ]
  ! POTENCIA        [ reduce using rule 19 (expression -> expression MENOS expression .) ]
  ! MODULO          [ reduce using rule 19 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 130

    (20) expression -> expression POR expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 20 (expression -> expression POR expression .)
    MENOS           reduce using rule 20 (expression -> expression POR expression .)
    POR             reduce using rule 20 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 20 (expression -> expression POR expression .)
    MODULO          reduce using rule 20 (expression -> expression POR expression .)
    MAYQUE          reduce using rule 20 (expression -> expression POR expression .)
    MENQUE          reduce using rule 20 (expression -> expression POR expression .)
    MENIGUALQUE     reduce using rule 20 (expression -> expression POR expression .)
    MAYIGUALQUE     reduce using rule 20 (expression -> expression POR expression .)
    IGUALQUE        reduce using rule 20 (expression -> expression POR expression .)
    NIGUALQUE       reduce using rule 20 (expression -> expression POR expression .)
    OR              reduce using rule 20 (expression -> expression POR expression .)
    AND             reduce using rule 20 (expression -> expression POR expression .)
    PTCOMA          reduce using rule 20 (expression -> expression POR expression .)
    PRINT           reduce using rule 20 (expression -> expression POR expression .)
    PRINTLN         reduce using rule 20 (expression -> expression POR expression .)
    LOCAL           reduce using rule 20 (expression -> expression POR expression .)
    GLOBAL          reduce using rule 20 (expression -> expression POR expression .)
    ID              reduce using rule 20 (expression -> expression POR expression .)
    FUNCTION        reduce using rule 20 (expression -> expression POR expression .)
    RETURN          reduce using rule 20 (expression -> expression POR expression .)
    BREAK           reduce using rule 20 (expression -> expression POR expression .)
    CONTINUE        reduce using rule 20 (expression -> expression POR expression .)
    IF              reduce using rule 20 (expression -> expression POR expression .)
    WHILE           reduce using rule 20 (expression -> expression POR expression .)
    PARDER          reduce using rule 20 (expression -> expression POR expression .)
    DOSP            reduce using rule 20 (expression -> expression POR expression .)
    COMA            reduce using rule 20 (expression -> expression POR expression .)
    POTENCIA        shift and go to state 88

  ! POTENCIA        [ reduce using rule 20 (expression -> expression POR expression .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 89 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 131

    (21) expression -> expression DIVIDIDO expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    MODULO          reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    MAYQUE          reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    MENQUE          reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    MENIGUALQUE     reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    MAYIGUALQUE     reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    IGUALQUE        reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    NIGUALQUE       reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    PTCOMA          reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    PRINT           reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    PRINTLN         reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    LOCAL           reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    GLOBAL          reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    ID              reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    FUNCTION        reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    RETURN          reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    BREAK           reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    CONTINUE        reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    IF              reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    WHILE           reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    DOSP            reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 21 (expression -> expression DIVIDIDO expression .)
    POTENCIA        shift and go to state 88

  ! POTENCIA        [ reduce using rule 21 (expression -> expression DIVIDIDO expression .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 89 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 132

    (22) expression -> expression POTENCIA expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 22 (expression -> expression POTENCIA expression .)
    MENOS           reduce using rule 22 (expression -> expression POTENCIA expression .)
    POR             reduce using rule 22 (expression -> expression POTENCIA expression .)
    DIVIDIDO        reduce using rule 22 (expression -> expression POTENCIA expression .)
    POTENCIA        reduce using rule 22 (expression -> expression POTENCIA expression .)
    MODULO          reduce using rule 22 (expression -> expression POTENCIA expression .)
    MAYQUE          reduce using rule 22 (expression -> expression POTENCIA expression .)
    MENQUE          reduce using rule 22 (expression -> expression POTENCIA expression .)
    MENIGUALQUE     reduce using rule 22 (expression -> expression POTENCIA expression .)
    MAYIGUALQUE     reduce using rule 22 (expression -> expression POTENCIA expression .)
    IGUALQUE        reduce using rule 22 (expression -> expression POTENCIA expression .)
    NIGUALQUE       reduce using rule 22 (expression -> expression POTENCIA expression .)
    OR              reduce using rule 22 (expression -> expression POTENCIA expression .)
    AND             reduce using rule 22 (expression -> expression POTENCIA expression .)
    PTCOMA          reduce using rule 22 (expression -> expression POTENCIA expression .)
    PRINT           reduce using rule 22 (expression -> expression POTENCIA expression .)
    PRINTLN         reduce using rule 22 (expression -> expression POTENCIA expression .)
    LOCAL           reduce using rule 22 (expression -> expression POTENCIA expression .)
    GLOBAL          reduce using rule 22 (expression -> expression POTENCIA expression .)
    ID              reduce using rule 22 (expression -> expression POTENCIA expression .)
    FUNCTION        reduce using rule 22 (expression -> expression POTENCIA expression .)
    RETURN          reduce using rule 22 (expression -> expression POTENCIA expression .)
    BREAK           reduce using rule 22 (expression -> expression POTENCIA expression .)
    CONTINUE        reduce using rule 22 (expression -> expression POTENCIA expression .)
    IF              reduce using rule 22 (expression -> expression POTENCIA expression .)
    WHILE           reduce using rule 22 (expression -> expression POTENCIA expression .)
    PARDER          reduce using rule 22 (expression -> expression POTENCIA expression .)
    DOSP            reduce using rule 22 (expression -> expression POTENCIA expression .)
    COMA            reduce using rule 22 (expression -> expression POTENCIA expression .)

  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! POTENCIA        [ shift and go to state 88 ]
  ! MODULO          [ shift and go to state 89 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 133

    (23) expression -> expression MODULO expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAS             reduce using rule 23 (expression -> expression MODULO expression .)
    MENOS           reduce using rule 23 (expression -> expression MODULO expression .)
    POR             reduce using rule 23 (expression -> expression MODULO expression .)
    DIVIDIDO        reduce using rule 23 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 23 (expression -> expression MODULO expression .)
    MAYQUE          reduce using rule 23 (expression -> expression MODULO expression .)
    MENQUE          reduce using rule 23 (expression -> expression MODULO expression .)
    MENIGUALQUE     reduce using rule 23 (expression -> expression MODULO expression .)
    MAYIGUALQUE     reduce using rule 23 (expression -> expression MODULO expression .)
    IGUALQUE        reduce using rule 23 (expression -> expression MODULO expression .)
    NIGUALQUE       reduce using rule 23 (expression -> expression MODULO expression .)
    OR              reduce using rule 23 (expression -> expression MODULO expression .)
    AND             reduce using rule 23 (expression -> expression MODULO expression .)
    PTCOMA          reduce using rule 23 (expression -> expression MODULO expression .)
    PRINT           reduce using rule 23 (expression -> expression MODULO expression .)
    PRINTLN         reduce using rule 23 (expression -> expression MODULO expression .)
    LOCAL           reduce using rule 23 (expression -> expression MODULO expression .)
    GLOBAL          reduce using rule 23 (expression -> expression MODULO expression .)
    ID              reduce using rule 23 (expression -> expression MODULO expression .)
    FUNCTION        reduce using rule 23 (expression -> expression MODULO expression .)
    RETURN          reduce using rule 23 (expression -> expression MODULO expression .)
    BREAK           reduce using rule 23 (expression -> expression MODULO expression .)
    CONTINUE        reduce using rule 23 (expression -> expression MODULO expression .)
    IF              reduce using rule 23 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 23 (expression -> expression MODULO expression .)
    PARDER          reduce using rule 23 (expression -> expression MODULO expression .)
    DOSP            reduce using rule 23 (expression -> expression MODULO expression .)
    COMA            reduce using rule 23 (expression -> expression MODULO expression .)
    POTENCIA        shift and go to state 88

  ! POTENCIA        [ reduce using rule 23 (expression -> expression MODULO expression .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 89 ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 134

    (24) expression -> expression MAYQUE expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAYQUE          reduce using rule 24 (expression -> expression MAYQUE expression .)
    MENQUE          reduce using rule 24 (expression -> expression MAYQUE expression .)
    MENIGUALQUE     reduce using rule 24 (expression -> expression MAYQUE expression .)
    MAYIGUALQUE     reduce using rule 24 (expression -> expression MAYQUE expression .)
    IGUALQUE        reduce using rule 24 (expression -> expression MAYQUE expression .)
    NIGUALQUE       reduce using rule 24 (expression -> expression MAYQUE expression .)
    OR              reduce using rule 24 (expression -> expression MAYQUE expression .)
    AND             reduce using rule 24 (expression -> expression MAYQUE expression .)
    PTCOMA          reduce using rule 24 (expression -> expression MAYQUE expression .)
    PRINT           reduce using rule 24 (expression -> expression MAYQUE expression .)
    PRINTLN         reduce using rule 24 (expression -> expression MAYQUE expression .)
    LOCAL           reduce using rule 24 (expression -> expression MAYQUE expression .)
    GLOBAL          reduce using rule 24 (expression -> expression MAYQUE expression .)
    ID              reduce using rule 24 (expression -> expression MAYQUE expression .)
    FUNCTION        reduce using rule 24 (expression -> expression MAYQUE expression .)
    RETURN          reduce using rule 24 (expression -> expression MAYQUE expression .)
    BREAK           reduce using rule 24 (expression -> expression MAYQUE expression .)
    CONTINUE        reduce using rule 24 (expression -> expression MAYQUE expression .)
    IF              reduce using rule 24 (expression -> expression MAYQUE expression .)
    WHILE           reduce using rule 24 (expression -> expression MAYQUE expression .)
    PARDER          reduce using rule 24 (expression -> expression MAYQUE expression .)
    DOSP            reduce using rule 24 (expression -> expression MAYQUE expression .)
    COMA            reduce using rule 24 (expression -> expression MAYQUE expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 24 (expression -> expression MAYQUE expression .) ]
  ! MENOS           [ reduce using rule 24 (expression -> expression MAYQUE expression .) ]
  ! POR             [ reduce using rule 24 (expression -> expression MAYQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 24 (expression -> expression MAYQUE expression .) ]
  ! POTENCIA        [ reduce using rule 24 (expression -> expression MAYQUE expression .) ]
  ! MODULO          [ reduce using rule 24 (expression -> expression MAYQUE expression .) ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 135

    (25) expression -> expression MENQUE expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAYQUE          reduce using rule 25 (expression -> expression MENQUE expression .)
    MENQUE          reduce using rule 25 (expression -> expression MENQUE expression .)
    MENIGUALQUE     reduce using rule 25 (expression -> expression MENQUE expression .)
    MAYIGUALQUE     reduce using rule 25 (expression -> expression MENQUE expression .)
    IGUALQUE        reduce using rule 25 (expression -> expression MENQUE expression .)
    NIGUALQUE       reduce using rule 25 (expression -> expression MENQUE expression .)
    OR              reduce using rule 25 (expression -> expression MENQUE expression .)
    AND             reduce using rule 25 (expression -> expression MENQUE expression .)
    PTCOMA          reduce using rule 25 (expression -> expression MENQUE expression .)
    PRINT           reduce using rule 25 (expression -> expression MENQUE expression .)
    PRINTLN         reduce using rule 25 (expression -> expression MENQUE expression .)
    LOCAL           reduce using rule 25 (expression -> expression MENQUE expression .)
    GLOBAL          reduce using rule 25 (expression -> expression MENQUE expression .)
    ID              reduce using rule 25 (expression -> expression MENQUE expression .)
    FUNCTION        reduce using rule 25 (expression -> expression MENQUE expression .)
    RETURN          reduce using rule 25 (expression -> expression MENQUE expression .)
    BREAK           reduce using rule 25 (expression -> expression MENQUE expression .)
    CONTINUE        reduce using rule 25 (expression -> expression MENQUE expression .)
    IF              reduce using rule 25 (expression -> expression MENQUE expression .)
    WHILE           reduce using rule 25 (expression -> expression MENQUE expression .)
    PARDER          reduce using rule 25 (expression -> expression MENQUE expression .)
    DOSP            reduce using rule 25 (expression -> expression MENQUE expression .)
    COMA            reduce using rule 25 (expression -> expression MENQUE expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 25 (expression -> expression MENQUE expression .) ]
  ! MENOS           [ reduce using rule 25 (expression -> expression MENQUE expression .) ]
  ! POR             [ reduce using rule 25 (expression -> expression MENQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expression -> expression MENQUE expression .) ]
  ! POTENCIA        [ reduce using rule 25 (expression -> expression MENQUE expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression MENQUE expression .) ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 136

    (26) expression -> expression MENIGUALQUE expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAYQUE          reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    MENQUE          reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    IGUALQUE        reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    NIGUALQUE       reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    OR              reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    AND             reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    PTCOMA          reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    PRINT           reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    PRINTLN         reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    LOCAL           reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    GLOBAL          reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    ID              reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    FUNCTION        reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    RETURN          reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    BREAK           reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    CONTINUE        reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    IF              reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    WHILE           reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    PARDER          reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    DOSP            reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    COMA            reduce using rule 26 (expression -> expression MENIGUALQUE expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 26 (expression -> expression MENIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 26 (expression -> expression MENIGUALQUE expression .) ]
  ! POR             [ reduce using rule 26 (expression -> expression MENIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expression -> expression MENIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 26 (expression -> expression MENIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 26 (expression -> expression MENIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 137

    (27) expression -> expression MAYIGUALQUE expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    MAYQUE          reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    MENQUE          reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    IGUALQUE        reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    NIGUALQUE       reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    OR              reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    AND             reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    PTCOMA          reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    PRINT           reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    PRINTLN         reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    LOCAL           reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    GLOBAL          reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    ID              reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    FUNCTION        reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    RETURN          reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    BREAK           reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    CONTINUE        reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    IF              reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    WHILE           reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    PARDER          reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    DOSP            reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    COMA            reduce using rule 27 (expression -> expression MAYIGUALQUE expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 27 (expression -> expression MAYIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 27 (expression -> expression MAYIGUALQUE expression .) ]
  ! POR             [ reduce using rule 27 (expression -> expression MAYIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 27 (expression -> expression MAYIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 27 (expression -> expression MAYIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 27 (expression -> expression MAYIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 90 ]
  ! MENQUE          [ shift and go to state 91 ]
  ! MENIGUALQUE     [ shift and go to state 92 ]
  ! MAYIGUALQUE     [ shift and go to state 93 ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 138

    (28) expression -> expression IGUALQUE expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    IGUALQUE        reduce using rule 28 (expression -> expression IGUALQUE expression .)
    NIGUALQUE       reduce using rule 28 (expression -> expression IGUALQUE expression .)
    OR              reduce using rule 28 (expression -> expression IGUALQUE expression .)
    AND             reduce using rule 28 (expression -> expression IGUALQUE expression .)
    PTCOMA          reduce using rule 28 (expression -> expression IGUALQUE expression .)
    PRINT           reduce using rule 28 (expression -> expression IGUALQUE expression .)
    PRINTLN         reduce using rule 28 (expression -> expression IGUALQUE expression .)
    LOCAL           reduce using rule 28 (expression -> expression IGUALQUE expression .)
    GLOBAL          reduce using rule 28 (expression -> expression IGUALQUE expression .)
    ID              reduce using rule 28 (expression -> expression IGUALQUE expression .)
    FUNCTION        reduce using rule 28 (expression -> expression IGUALQUE expression .)
    RETURN          reduce using rule 28 (expression -> expression IGUALQUE expression .)
    BREAK           reduce using rule 28 (expression -> expression IGUALQUE expression .)
    CONTINUE        reduce using rule 28 (expression -> expression IGUALQUE expression .)
    IF              reduce using rule 28 (expression -> expression IGUALQUE expression .)
    WHILE           reduce using rule 28 (expression -> expression IGUALQUE expression .)
    PARDER          reduce using rule 28 (expression -> expression IGUALQUE expression .)
    DOSP            reduce using rule 28 (expression -> expression IGUALQUE expression .)
    COMA            reduce using rule 28 (expression -> expression IGUALQUE expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93

  ! MAS             [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! POR             [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 28 (expression -> expression IGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 139

    (29) expression -> expression NIGUALQUE expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    IGUALQUE        reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    NIGUALQUE       reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    OR              reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    AND             reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    PTCOMA          reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    PRINT           reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    PRINTLN         reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    LOCAL           reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    GLOBAL          reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    ID              reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    FUNCTION        reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    RETURN          reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    BREAK           reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    CONTINUE        reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    IF              reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    WHILE           reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    PARDER          reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    DOSP            reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    COMA            reduce using rule 29 (expression -> expression NIGUALQUE expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93

  ! MAS             [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! POR             [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 29 (expression -> expression NIGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 94 ]
  ! NIGUALQUE       [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 140

    (30) expression -> expression OR expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    OR              reduce using rule 30 (expression -> expression OR expression .)
    PTCOMA          reduce using rule 30 (expression -> expression OR expression .)
    PRINT           reduce using rule 30 (expression -> expression OR expression .)
    PRINTLN         reduce using rule 30 (expression -> expression OR expression .)
    LOCAL           reduce using rule 30 (expression -> expression OR expression .)
    GLOBAL          reduce using rule 30 (expression -> expression OR expression .)
    ID              reduce using rule 30 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 30 (expression -> expression OR expression .)
    RETURN          reduce using rule 30 (expression -> expression OR expression .)
    BREAK           reduce using rule 30 (expression -> expression OR expression .)
    CONTINUE        reduce using rule 30 (expression -> expression OR expression .)
    IF              reduce using rule 30 (expression -> expression OR expression .)
    WHILE           reduce using rule 30 (expression -> expression OR expression .)
    PARDER          reduce using rule 30 (expression -> expression OR expression .)
    DOSP            reduce using rule 30 (expression -> expression OR expression .)
    COMA            reduce using rule 30 (expression -> expression OR expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    AND             shift and go to state 97

  ! MAS             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! POTENCIA        [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MAYQUE          [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MENQUE          [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MENIGUALQUE     [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! IGUALQUE        [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! NIGUALQUE       [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 96 ]


state 141

    (31) expression -> expression AND expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    OR              reduce using rule 31 (expression -> expression AND expression .)
    AND             reduce using rule 31 (expression -> expression AND expression .)
    PTCOMA          reduce using rule 31 (expression -> expression AND expression .)
    PRINT           reduce using rule 31 (expression -> expression AND expression .)
    PRINTLN         reduce using rule 31 (expression -> expression AND expression .)
    LOCAL           reduce using rule 31 (expression -> expression AND expression .)
    GLOBAL          reduce using rule 31 (expression -> expression AND expression .)
    ID              reduce using rule 31 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 31 (expression -> expression AND expression .)
    RETURN          reduce using rule 31 (expression -> expression AND expression .)
    BREAK           reduce using rule 31 (expression -> expression AND expression .)
    CONTINUE        reduce using rule 31 (expression -> expression AND expression .)
    IF              reduce using rule 31 (expression -> expression AND expression .)
    WHILE           reduce using rule 31 (expression -> expression AND expression .)
    PARDER          reduce using rule 31 (expression -> expression AND expression .)
    DOSP            reduce using rule 31 (expression -> expression AND expression .)
    COMA            reduce using rule 31 (expression -> expression AND expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95

  ! MAS             [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! POTENCIA        [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! MAYQUE          [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! MENQUE          [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! MENIGUALQUE     [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! IGUALQUE        [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! NIGUALQUE       [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 142

    (33) final_expression -> PARIZQ expression PARDER .

    MAS             reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    MODULO          reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    MENQUE          reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    PRINT           reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    LOCAL           reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    ID              reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    RETURN          reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    BREAK           reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    IF              reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    WHILE           reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    DOSP            reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 33 (final_expression -> PARIZQ expression PARDER .)


state 143

    (42) call_func -> ID PARIZQ PARDER .

    MAS             reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    POR             reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    MENIGUALQUE     reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    MAYIGUALQUE     reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    OR              reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    AND             reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    PTCOMA          reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    PRINT           reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    PRINTLN         reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    LOCAL           reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    GLOBAL          reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    ID              reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    FUNCTION        reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    IF              reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    DOSP            reduce using rule 42 (call_func -> ID PARIZQ PARDER .)
    COMA            reduce using rule 42 (call_func -> ID PARIZQ PARDER .)


state 144

    (43) call_func -> ID PARIZQ exp_list . PARDER
    (74) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 175
    COMA            shift and go to state 123


state 145

    (44) nativas -> LOG PARIZQ ENTERO . COMA expression PARDER

    COMA            shift and go to state 176


state 146

    (45) nativas -> LOG10 PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 177
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 147

    (46) nativas -> COS PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 178
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 148

    (47) nativas -> SIN PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 179
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 149

    (48) nativas -> TAN PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 180
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 150

    (49) nativas -> SQRT PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 181
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 151

    (50) nativas -> UPPERCASE PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 182
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 152

    (51) nativas -> LOWERCASE PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 183
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 153

    (52) nativas -> TOSTRING PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 184
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 154

    (53) nativas -> TOFLOAT PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 185
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 155

    (54) nativas -> TRUNC PARIZQ INT . COMA expression PARDER

    COMA            shift and go to state 186


state 156

    (55) nativas -> TYPEOF PARIZQ expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 187
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 157

    (56) nativas -> PARSE PARIZQ tipo . COMA expression PARDER

    COMA            shift and go to state 188


state 158

    (59) tipo -> INT .

    COMA            reduce using rule 59 (tipo -> INT .)
    PTCOMA          reduce using rule 59 (tipo -> INT .)


state 159

    (60) tipo -> FLOAT .

    COMA            reduce using rule 60 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 60 (tipo -> FLOAT .)


state 160

    (61) tipo -> BOOL .

    COMA            reduce using rule 61 (tipo -> BOOL .)
    PTCOMA          reduce using rule 61 (tipo -> BOOL .)


state 161

    (62) tipo -> CHAR .

    COMA            reduce using rule 62 (tipo -> CHAR .)
    PTCOMA          reduce using rule 62 (tipo -> CHAR .)


state 162

    (63) tipo -> STRING .

    COMA            reduce using rule 63 (tipo -> STRING .)
    PTCOMA          reduce using rule 63 (tipo -> STRING .)


state 163

    (81) if_state -> IF expression statement END .

    PTCOMA          reduce using rule 81 (if_state -> IF expression statement END .)


state 164

    (82) if_state -> IF expression statement ELSE . statement END
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    statement                      shift and go to state 189
    instrucciones                  shift and go to state 116
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 165

    (83) if_state -> IF expression statement else_if_list . END

    END             shift and go to state 190


state 166

    (84) else_if_list -> ELSEIF . expression statement
    (85) else_if_list -> ELSEIF . expression statement ELSE statement
    (86) else_if_list -> ELSEIF . expression statement else_if_list
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 191
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 167

    (87) while_state -> WHILE expression statement END .

    PTCOMA          reduce using rule 87 (while_state -> WHILE expression statement END .)


state 168

    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 192


state 169

    (69) definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP . tipo
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 158
    FLOAT           shift and go to state 159
    BOOL            shift and go to state 160
    CHAR            shift and go to state 161
    STRING          shift and go to state 162

    tipo                           shift and go to state 193

state 170

    (74) exp_list -> exp_list COMA expression .
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          reduce using rule 74 (exp_list -> exp_list COMA expression .)
    COMA            reduce using rule 74 (exp_list -> exp_list COMA expression .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 171

    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 194


state 172

    (77) declare_function -> FUNCTION ID PARIZQ PARDER statement . END

    END             shift and go to state 195


state 173

    (78) declare_function -> FUNCTION ID PARIZQ dec_params PARDER . statement END
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    statement                      shift and go to state 196
    instrucciones                  shift and go to state 116
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 174

    (79) dec_params -> dec_params COMA . ID

    ID              shift and go to state 197


state 175

    (43) call_func -> ID PARIZQ exp_list PARDER .

    MAS             reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    MENOS           reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    POR             reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    DIVIDIDO        reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    POTENCIA        reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    MODULO          reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    MAYQUE          reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    MENQUE          reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    MENIGUALQUE     reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    MAYIGUALQUE     reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    IGUALQUE        reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    NIGUALQUE       reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    OR              reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    AND             reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    PTCOMA          reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    PRINT           reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    PRINTLN         reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    LOCAL           reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    GLOBAL          reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    ID              reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    FUNCTION        reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    RETURN          reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    BREAK           reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    CONTINUE        reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    IF              reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    WHILE           reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    PARDER          reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    DOSP            reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)
    COMA            reduce using rule 43 (call_func -> ID PARIZQ exp_list PARDER .)


state 176

    (44) nativas -> LOG PARIZQ ENTERO COMA . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 198
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 177

    (45) nativas -> LOG10 PARIZQ expression PARDER .

    MAS             reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENOS           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    POR             reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MODULO          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENQUE          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    OR              reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    AND             reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PRINT           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    LOCAL           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    ID              reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    RETURN          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    BREAK           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    IF              reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    WHILE           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PARDER          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    DOSP            reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    COMA            reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)


state 178

    (46) nativas -> COS PARIZQ expression PARDER .

    MAS             reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MENOS           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    POR             reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MODULO          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MENQUE          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    OR              reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    AND             reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PRINT           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    LOCAL           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    ID              reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    RETURN          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    BREAK           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    IF              reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    WHILE           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PARDER          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    DOSP            reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    COMA            reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)


state 179

    (47) nativas -> SIN PARIZQ expression PARDER .

    MAS             reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MENOS           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    POR             reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MODULO          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MENQUE          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    OR              reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    AND             reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PRINT           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    LOCAL           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    ID              reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    RETURN          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    BREAK           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    IF              reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    WHILE           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PARDER          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    DOSP            reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    COMA            reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)


state 180

    (48) nativas -> TAN PARIZQ expression PARDER .

    MAS             reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MENOS           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    POR             reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MODULO          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MENQUE          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    OR              reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    AND             reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PRINT           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    LOCAL           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    ID              reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    RETURN          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    BREAK           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    IF              reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    WHILE           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PARDER          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    DOSP            reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    COMA            reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)


state 181

    (49) nativas -> SQRT PARIZQ expression PARDER .

    MAS             reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MENOS           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    POR             reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MODULO          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    OR              reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    AND             reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PRINT           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    LOCAL           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    ID              reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    RETURN          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    BREAK           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    IF              reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    WHILE           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PARDER          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    DOSP            reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    COMA            reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)


state 182

    (50) nativas -> UPPERCASE PARIZQ expression PARDER .

    MAS             reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENOS           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    POR             reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MODULO          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENQUE          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    OR              reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    AND             reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PRINT           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    LOCAL           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    ID              reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    RETURN          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    BREAK           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    IF              reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    WHILE           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PARDER          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    DOSP            reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    COMA            reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)


state 183

    (51) nativas -> LOWERCASE PARIZQ expression PARDER .

    MAS             reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENOS           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    POR             reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MODULO          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENQUE          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    OR              reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    AND             reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PRINT           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    LOCAL           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    ID              reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    RETURN          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    BREAK           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    IF              reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    WHILE           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PARDER          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    DOSP            reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    COMA            reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)


state 184

    (52) nativas -> TOSTRING PARIZQ expression PARDER .

    MAS             reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENOS           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    POR             reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MODULO          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENQUE          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    OR              reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    AND             reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PRINT           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    LOCAL           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    ID              reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    RETURN          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    BREAK           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    IF              reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    WHILE           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PARDER          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    DOSP            reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    COMA            reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)


state 185

    (53) nativas -> TOFLOAT PARIZQ expression PARDER .

    MAS             reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENOS           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    POR             reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MODULO          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    OR              reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    AND             reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PRINT           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    LOCAL           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    ID              reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    RETURN          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    BREAK           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    IF              reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    WHILE           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PARDER          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    DOSP            reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    COMA            reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)


state 186

    (54) nativas -> TRUNC PARIZQ INT COMA . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 199
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 187

    (55) nativas -> TYPEOF PARIZQ expression PARDER .

    MAS             reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENOS           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    POR             reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MODULO          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENQUE          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    OR              reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    AND             reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PRINT           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    LOCAL           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    ID              reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    RETURN          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    BREAK           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    IF              reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    WHILE           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PARDER          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    DOSP            reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    COMA            reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)


state 188

    (56) nativas -> PARSE PARIZQ tipo COMA . expression PARDER
    (16) expression -> . MENOS expression
    (17) expression -> . NOT expression
    (18) expression -> . expression MAS expression
    (19) expression -> . expression MENOS expression
    (20) expression -> . expression POR expression
    (21) expression -> . expression DIVIDIDO expression
    (22) expression -> . expression POTENCIA expression
    (23) expression -> . expression MODULO expression
    (24) expression -> . expression MAYQUE expression
    (25) expression -> . expression MENQUE expression
    (26) expression -> . expression MENIGUALQUE expression
    (27) expression -> . expression MAYIGUALQUE expression
    (28) expression -> . expression IGUALQUE expression
    (29) expression -> . expression NIGUALQUE expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression AND expression
    (32) expression -> . final_expression
    (33) final_expression -> . PARIZQ expression PARDER
    (34) final_expression -> . DECIMAL
    (35) final_expression -> . ENTERO
    (36) final_expression -> . CADENA
    (37) final_expression -> . ID
    (38) final_expression -> . TRUE
    (39) final_expression -> . FALSE
    (40) final_expression -> . call_func
    (41) final_expression -> . nativas
    (42) call_func -> . ID PARIZQ PARDER
    (43) call_func -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 51
    DECIMAL         shift and go to state 52
    ENTERO          shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LOG             shift and go to state 60
    LOG10           shift and go to state 61
    COS             shift and go to state 62
    SIN             shift and go to state 63
    TAN             shift and go to state 64
    SQRT            shift and go to state 65
    UPPERCASE       shift and go to state 66
    LOWERCASE       shift and go to state 67
    TOSTRING        shift and go to state 68
    TOFLOAT         shift and go to state 69
    TRUNC           shift and go to state 70
    TYPEOF          shift and go to state 71
    PARSE           shift and go to state 72

    expression                     shift and go to state 200
    final_expression               shift and go to state 50
    call_func                      shift and go to state 58
    nativas                        shift and go to state 59

state 189

    (82) if_state -> IF expression statement ELSE statement . END

    END             shift and go to state 201


state 190

    (83) if_state -> IF expression statement else_if_list END .

    PTCOMA          reduce using rule 83 (if_state -> IF expression statement else_if_list END .)


state 191

    (84) else_if_list -> ELSEIF expression . statement
    (85) else_if_list -> ELSEIF expression . statement ELSE statement
    (86) else_if_list -> ELSEIF expression . statement else_if_list
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    statement                      shift and go to state 202
    instrucciones                  shift and go to state 116
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 192

    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP . tipo
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 158
    FLOAT           shift and go to state 159
    BOOL            shift and go to state 160
    CHAR            shift and go to state 161
    STRING          shift and go to state 162

    tipo                           shift and go to state 203

state 193

    (69) definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 69 (definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo .)


state 194

    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP . tipo
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 158
    FLOAT           shift and go to state 159
    BOOL            shift and go to state 160
    CHAR            shift and go to state 161
    STRING          shift and go to state 162

    tipo                           shift and go to state 204

state 195

    (77) declare_function -> FUNCTION ID PARIZQ PARDER statement END .

    PTCOMA          reduce using rule 77 (declare_function -> FUNCTION ID PARIZQ PARDER statement END .)


state 196

    (78) declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement . END

    END             shift and go to state 205


state 197

    (79) dec_params -> dec_params COMA ID .

    PARDER          reduce using rule 79 (dec_params -> dec_params COMA ID .)
    COMA            reduce using rule 79 (dec_params -> dec_params COMA ID .)


state 198

    (44) nativas -> LOG PARIZQ ENTERO COMA expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 206
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 199

    (54) nativas -> TRUNC PARIZQ INT COMA expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 207
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 200

    (56) nativas -> PARSE PARIZQ tipo COMA expression . PARDER
    (18) expression -> expression . MAS expression
    (19) expression -> expression . MENOS expression
    (20) expression -> expression . POR expression
    (21) expression -> expression . DIVIDIDO expression
    (22) expression -> expression . POTENCIA expression
    (23) expression -> expression . MODULO expression
    (24) expression -> expression . MAYQUE expression
    (25) expression -> expression . MENQUE expression
    (26) expression -> expression . MENIGUALQUE expression
    (27) expression -> expression . MAYIGUALQUE expression
    (28) expression -> expression . IGUALQUE expression
    (29) expression -> expression . NIGUALQUE expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . AND expression

    PARDER          shift and go to state 208
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    POTENCIA        shift and go to state 88
    MODULO          shift and go to state 89
    MAYQUE          shift and go to state 90
    MENQUE          shift and go to state 91
    MENIGUALQUE     shift and go to state 92
    MAYIGUALQUE     shift and go to state 93
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 201

    (82) if_state -> IF expression statement ELSE statement END .

    PTCOMA          reduce using rule 82 (if_state -> IF expression statement ELSE statement END .)


state 202

    (84) else_if_list -> ELSEIF expression statement .
    (85) else_if_list -> ELSEIF expression statement . ELSE statement
    (86) else_if_list -> ELSEIF expression statement . else_if_list
    (84) else_if_list -> . ELSEIF expression statement
    (85) else_if_list -> . ELSEIF expression statement ELSE statement
    (86) else_if_list -> . ELSEIF expression statement else_if_list

    END             reduce using rule 84 (else_if_list -> ELSEIF expression statement .)
    ELSE            shift and go to state 209
    ELSEIF          shift and go to state 166

    else_if_list                   shift and go to state 210

state 203

    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 70 (definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo .)


state 204

    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 71 (definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo .)


state 205

    (78) declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END .

    PTCOMA          reduce using rule 78 (declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END .)


state 206

    (44) nativas -> LOG PARIZQ ENTERO COMA expression PARDER .

    MAS             reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENOS           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    POR             reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    DIVIDIDO        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    POTENCIA        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MODULO          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MAYQUE          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENQUE          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    IGUALQUE        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    NIGUALQUE       reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    OR              reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    AND             reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PTCOMA          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PRINT           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PRINTLN         reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    LOCAL           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    GLOBAL          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    ID              reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    FUNCTION        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    RETURN          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    BREAK           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    CONTINUE        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    IF              reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    WHILE           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PARDER          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    DOSP            reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    COMA            reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)


state 207

    (54) nativas -> TRUNC PARIZQ INT COMA expression PARDER .

    MAS             reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENOS           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    POR             reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    DIVIDIDO        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    POTENCIA        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MODULO          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MAYQUE          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENQUE          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    IGUALQUE        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    NIGUALQUE       reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    OR              reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    AND             reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PTCOMA          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PRINT           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PRINTLN         reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    LOCAL           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    GLOBAL          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    ID              reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    FUNCTION        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    RETURN          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    BREAK           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    CONTINUE        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    IF              reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    WHILE           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PARDER          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    DOSP            reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    COMA            reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)


state 208

    (56) nativas -> PARSE PARIZQ tipo COMA expression PARDER .

    MAS             reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENOS           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    POR             reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    DIVIDIDO        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    POTENCIA        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MODULO          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MAYQUE          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENQUE          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    IGUALQUE        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    NIGUALQUE       reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    OR              reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    AND             reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PTCOMA          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PRINT           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PRINTLN         reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    LOCAL           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    GLOBAL          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    ID              reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    FUNCTION        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    RETURN          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    BREAK           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    CONTINUE        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    IF              reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    WHILE           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PARDER          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    DOSP            reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    COMA            reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)


state 209

    (85) else_if_list -> ELSEIF expression statement ELSE . statement
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ expression PARDER
    (58) println_instr -> . PRINTLN PARIZQ expression PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (90) return_state -> . RETURN
    (91) return_state -> . RETURN expression
    (88) break_state -> . BREAK
    (89) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 20
    ID              shift and go to state 19
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26

    statement                      shift and go to state 211
    instrucciones                  shift and go to state 116
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15

state 210

    (86) else_if_list -> ELSEIF expression statement else_if_list .

    END             reduce using rule 86 (else_if_list -> ELSEIF expression statement else_if_list .)


state 211

    (85) else_if_list -> ELSEIF expression statement ELSE statement .

    END             reduce using rule 85 (else_if_list -> ELSEIF expression statement ELSE statement .)

