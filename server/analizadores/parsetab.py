
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALQUENIGUALQUEleftMAYQUEMENQUEMAYIGUALQUEMENIGUALQUEleftMASMENOSleftPORDIVIDIDOMODULOleftPOTENCIArightUMENOSAND BOOL BREAK CADENA CARACTER CHAR COMA CONCAT CONTINUE CORCHETEDER CORCHETEIZQ COS DECIMAL DIVIDIDO DOSP ELSE ELSEIF END ENTERO FALSE FLOAT FOR FUNCTION GLOBAL ID IF IGUAL IGUALQUE IN INT LLAVDER LLAVIZQ LOCAL LOG LOG10 LOWERCASE MAS MAYIGUALQUE MAYQUE MENIGUALQUE MENOS MENQUE MODULO NIGUALQUE NOT NOTHING OR PARDER PARIZQ PARSE POR POTENCIA PRINT PRINTLN PTCOMA PUNTO RETURN SIN SQRT STRING TAN TOFLOAT TOSTRING TRUE TRUNC TYPEOF UPPERCASE WHILEinit            : instruccionesinstrucciones    : instrucciones instruccion\n                        | instruccioninstruccion      : print_instr PTCOMA\n                        | println_instr PTCOMA\n                        | definicion_instr PTCOMA\n                        | asignacion_instr PTCOMA\n                        | definicion_asignacion_instr PTCOMA\n                        | call_function PTCOMA\n                        | declare_function PTCOMA\n                        | return_state PTCOMA\n                        | break_state PTCOMA\n                        | continue_state PTCOMA\n                        | if_state PTCOMA\n                        | while_state PTCOMA\n                        | for_state PTCOMAexpression       : MENOS expression %prec UMENOS\n                        | NOT expression %prec UMENOS\n                        | expression MAS expression\n                        | expression MENOS expression\n                        | expression POR expression\n                        | expression DIVIDIDO expression\n                        | expression POTENCIA expression\n                        | expression MODULO expression\n                        | expression MAYQUE expression\n                        | expression MENQUE expression\n                        | expression MENIGUALQUE expression\n                        | expression MAYIGUALQUE expression\n                        | expression IGUALQUE expression\n                        | expression NIGUALQUE expression\n                        | expression OR expression\n                        | expression AND expression\n                        | final_expressionfinal_expression     : PARIZQ expression PARDER\n                            | DECIMAL\n                            | ENTERO\n                            | CADENA\n                            | CARACTER\n                            | ID\n                            | TRUE\n                            | FALSE\n                            | call_function\n                            | nativasnativas          : LOG PARIZQ ENTERO COMA expression PARDER\n                        | LOG10 PARIZQ expression PARDER\n                        | COS PARIZQ expression PARDER\n                        | SIN PARIZQ expression PARDER\n                        | TAN PARIZQ expression PARDER\n                        | SQRT PARIZQ expression PARDER\n                        | UPPERCASE PARIZQ expression PARDER\n                        | LOWERCASE PARIZQ expression PARDER\n                        | TOSTRING PARIZQ expression PARDER\n                        | TOFLOAT PARIZQ expression PARDER\n                        | TRUNC PARIZQ INT COMA expression PARDER\n                        | TYPEOF PARIZQ expression PARDER\n                        | PARSE PARIZQ tipo COMA expression PARDER\n                        print_instr    : PRINT PARIZQ exp_list PARDERprintln_instr  : PRINTLN PARIZQ exp_list PARDERtipo     : INT\n                | FLOAT\n                | BOOL\n                | CHAR\n                | STRING\n    definicion_instr   :  LOCAL ID\n                            | GLOBAL IDasignacion_instr   : ID IGUAL expression\n                            | LOCAL ID IGUAL expression\n                            | GLOBAL ID IGUAL expressiondefinicion_asignacion_instr  : ID IGUAL expression DOSP DOSP tipo\n                                    | LOCAL ID IGUAL expression DOSP DOSP tipo\n                                    | GLOBAL ID IGUAL expression DOSP DOSP tipocall_function    : ID PARIZQ PARDER\n                        | ID PARIZQ exp_list PARDERexp_list         : exp_list COMA expression\n                        | expressionstatement        : instruccionesdeclare_function     : FUNCTION ID PARIZQ PARDER statement END\n                            | FUNCTION ID PARIZQ dec_params PARDER statement ENDdec_params :    dec_params COMA ID\n                    | IDif_state     : IF expression statement END\n                    | IF expression statement ELSE statement END\n                    | IF expression statement else_if_list ENDelse_if_list     : ELSEIF expression statement\n                        | ELSEIF expression statement ELSE statement\n                        | ELSEIF expression statement else_if_listwhile_state      : WHILE expression statement ENDfor_state        : FOR ID IN expression DOSP expression statement END\n                        | FOR ID IN expression statement ENDbreak_state      : BREAKcontinue_state      : CONTINUEreturn_state     : RETURN\n                        | RETURN expression'
    
_lr_action_items = {'PRINT':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[17,17,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,17,17,-72,-17,-18,17,-73,17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,17,17,17,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,17,17,-44,-54,-56,17,]),'PRINTLN':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[18,18,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,18,18,-72,-17,-18,18,-73,18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,18,18,18,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,18,18,-44,-54,-56,18,]),'LOCAL':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[19,19,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,19,19,-72,-17,-18,19,-73,19,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,19,19,19,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,19,19,-44,-54,-56,19,]),'GLOBAL':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[21,21,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,21,21,-72,-17,-18,21,-73,21,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,21,21,21,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,21,21,-44,-54,-56,21,]),'ID':([0,2,3,19,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,77,78,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,117,120,122,124,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,169,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,208,213,214,215,216,],[20,20,-3,45,48,49,59,59,59,79,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,59,59,59,59,59,59,-33,59,-35,-36,-37,-38,-39,-40,-41,-42,-43,20,20,59,-72,59,130,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-17,-18,59,59,59,59,59,59,59,59,59,59,20,59,59,-73,20,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,20,59,20,20,202,59,-45,-46,-47,-48,-49,-50,-51,-52,-53,59,-55,59,20,59,20,-44,-54,-56,20,]),'FUNCTION':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[22,22,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,22,22,-72,-17,-18,22,-73,22,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,22,22,22,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,22,22,-44,-54,-56,22,]),'RETURN':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,23,23,-72,-17,-18,23,-73,23,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,23,23,23,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,23,23,-44,-54,-56,23,]),'BREAK':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[24,24,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,24,24,-72,-17,-18,24,-73,24,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,24,24,24,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,24,24,-44,-54,-56,24,]),'CONTINUE':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[25,25,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,25,25,-72,-17,-18,25,-73,25,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,25,25,25,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,25,25,-44,-54,-56,25,]),'IF':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[26,26,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,26,26,-72,-17,-18,26,-73,26,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,26,26,26,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,26,26,-44,-54,-56,26,]),'WHILE':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[27,27,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,27,27,-72,-17,-18,27,-73,27,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,27,27,27,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,27,27,-44,-54,-56,27,]),'FOR':([0,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,55,56,57,58,59,60,61,62,63,77,78,85,103,104,120,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,167,171,177,180,181,182,183,184,185,186,187,188,190,194,208,213,214,215,216,],[28,28,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,28,28,-72,-17,-18,28,-73,28,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,28,28,28,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,28,28,-44,-54,-56,28,]),'$end':([1,2,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,]),'END':([3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,119,120,121,168,176,192,196,201,207,217,218,219,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,166,-76,170,193,200,206,209,212,-84,-86,220,-85,]),'ELSE':([3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,119,120,207,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,167,-76,216,]),'ELSEIF':([3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,119,120,207,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,169,-76,169,]),'PTCOMA':([4,5,6,7,8,9,10,11,12,13,14,15,16,23,24,25,45,48,50,53,55,56,57,58,59,60,61,62,63,84,85,103,104,123,125,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,161,162,163,164,165,166,170,180,181,182,183,184,185,186,187,188,190,193,198,200,206,209,210,211,212,213,214,215,220,],[30,31,32,33,34,35,36,37,38,39,40,41,42,-92,-90,-91,-64,-65,-93,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,-66,-72,-17,-18,-57,-58,-67,-73,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,-59,-60,-61,-62,-63,-81,-87,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,-83,-69,-77,-82,-89,-70,-71,-78,-44,-54,-56,-88,]),'PARIZQ':([17,18,20,23,26,27,43,44,46,47,49,51,52,54,59,64,65,66,67,68,69,70,71,72,73,74,75,76,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[43,44,47,54,54,54,54,54,54,54,88,54,54,54,47,106,107,108,109,110,111,112,113,114,115,116,117,118,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'IGUAL':([20,45,48,],[46,83,87,]),'MENOS':([23,26,27,43,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,77,78,81,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,117,122,124,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,169,171,172,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,203,204,205,208,213,214,215,],[51,51,51,51,51,51,51,90,51,51,-33,51,-35,-36,-37,-38,-39,-40,-41,-42,-43,90,90,90,51,90,-72,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-17,-18,90,51,51,51,51,51,51,51,51,51,51,51,51,90,-73,90,-19,-20,-21,-22,-23,-24,90,90,90,90,90,90,90,90,-34,90,90,90,90,90,90,90,90,90,90,51,90,90,51,-45,-46,-47,-48,-49,-50,-51,-52,-53,51,-55,51,90,51,90,90,90,90,-44,-54,-56,]),'NOT':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'DECIMAL':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ENTERO':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,148,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CADENA':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'CARACTER':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'TRUE':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FALSE':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'LOG':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LOG10':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'COS':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'SIN':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'TAN':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'SQRT':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'UPPERCASE':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'LOWERCASE':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TOSTRING':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'TOFLOAT':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'TRUNC':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TYPEOF':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'PARSE':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'PARDER':([47,53,55,56,57,58,59,60,61,62,63,80,81,82,85,86,88,103,104,105,128,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,172,180,181,182,183,184,185,186,187,188,190,202,203,204,205,213,214,215,],[85,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,123,-75,125,-72,128,131,-17,-18,147,-73,-80,177,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,180,181,182,183,184,185,186,187,188,190,-74,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,-79,213,214,215,-44,-54,-56,]),'MAS':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[89,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,89,89,89,89,-72,-17,-18,89,89,-73,89,-19,-20,-21,-22,-23,-24,89,89,89,89,89,89,89,89,-34,89,89,89,89,89,89,89,89,89,89,89,89,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,89,89,89,89,89,-44,-54,-56,]),'POR':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[91,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,91,91,91,91,-72,-17,-18,91,91,-73,91,91,91,-21,-22,-23,-24,91,91,91,91,91,91,91,91,-34,91,91,91,91,91,91,91,91,91,91,91,91,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,91,91,91,91,91,-44,-54,-56,]),'DIVIDIDO':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[92,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,92,92,92,92,-72,-17,-18,92,92,-73,92,92,92,-21,-22,-23,-24,92,92,92,92,92,92,92,92,-34,92,92,92,92,92,92,92,92,92,92,92,92,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,92,92,92,92,92,-44,-54,-56,]),'POTENCIA':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[93,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,93,93,93,93,-72,-17,-18,93,93,-73,93,93,93,93,93,-23,93,93,93,93,93,93,93,93,93,-34,93,93,93,93,93,93,93,93,93,93,93,93,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,93,93,93,93,93,-44,-54,-56,]),'MODULO':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[94,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,94,94,94,94,-72,-17,-18,94,94,-73,94,94,94,-21,-22,-23,-24,94,94,94,94,94,94,94,94,-34,94,94,94,94,94,94,94,94,94,94,94,94,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,94,94,94,94,94,-44,-54,-56,]),'MAYQUE':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[95,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,95,95,95,95,-72,-17,-18,95,95,-73,95,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,95,95,95,95,-34,95,95,95,95,95,95,95,95,95,95,95,95,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,95,95,95,95,95,-44,-54,-56,]),'MENQUE':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[96,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,96,96,96,96,-72,-17,-18,96,96,-73,96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,96,96,96,96,-34,96,96,96,96,96,96,96,96,96,96,96,96,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,96,96,96,96,96,-44,-54,-56,]),'MENIGUALQUE':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[97,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,97,97,97,97,-72,-17,-18,97,97,-73,97,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,97,97,97,97,-34,97,97,97,97,97,97,97,97,97,97,97,97,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,97,97,97,97,97,-44,-54,-56,]),'MAYIGUALQUE':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[98,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,98,98,98,98,-72,-17,-18,98,98,-73,98,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,98,98,98,98,-34,98,98,98,98,98,98,98,98,98,98,98,98,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,98,98,98,98,98,-44,-54,-56,]),'IGUALQUE':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[99,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,99,99,99,99,-72,-17,-18,99,99,-73,99,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,99,99,-34,99,99,99,99,99,99,99,99,99,99,99,99,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,99,99,99,99,99,-44,-54,-56,]),'NIGUALQUE':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[100,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,100,100,100,100,-72,-17,-18,100,100,-73,100,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,100,100,-34,100,100,100,100,100,100,100,100,100,100,100,100,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,100,100,100,100,100,-44,-54,-56,]),'OR':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[101,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,101,101,101,101,-72,-17,-18,101,101,-73,101,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,101,101,101,101,101,101,101,101,101,101,101,101,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,101,101,101,101,101,-44,-54,-56,]),'AND':([50,53,55,56,57,58,59,60,61,62,63,77,78,81,84,85,103,104,105,126,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,159,171,172,180,181,182,183,184,185,186,187,188,190,194,203,204,205,208,213,214,215,],[102,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,102,102,102,102,-72,-17,-18,102,102,-73,102,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,102,-32,-34,102,102,102,102,102,102,102,102,102,102,102,102,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,102,102,102,102,102,-44,-54,-56,]),'COMA':([53,55,56,57,58,59,60,61,62,63,80,81,82,85,86,103,104,128,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,158,160,161,162,163,164,165,172,180,181,182,183,184,185,186,187,188,190,202,213,214,215,],[-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,124,-75,124,-72,124,-17,-18,-73,-80,178,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,179,189,191,-59,-60,-61,-62,-63,-74,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,-79,-44,-54,-56,]),'DOSP':([53,55,56,57,58,59,60,61,62,63,84,85,103,104,126,127,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,171,173,175,180,181,182,183,184,185,186,187,188,190,213,214,215,],[-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,127,-72,-17,-18,173,174,-73,175,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-34,195,197,199,-45,-46,-47,-48,-49,-50,-51,-52,-53,-55,-44,-54,-56,]),'IN':([79,],[122,]),'INT':([116,118,174,197,199,],[158,161,161,161,161,]),'FLOAT':([118,174,197,199,],[162,162,162,162,]),'BOOL':([118,174,197,199,],[163,163,163,163,]),'CHAR':([118,174,197,199,],[164,164,164,164,]),'STRING':([118,174,197,199,],[165,165,165,165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,77,78,131,167,171,177,194,208,216,],[2,120,120,120,120,120,120,120,120,120,]),'instruccion':([0,2,77,78,120,131,167,171,177,194,208,216,],[3,29,3,3,29,3,3,3,3,3,3,3,]),'print_instr':([0,2,77,78,120,131,167,171,177,194,208,216,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'println_instr':([0,2,77,78,120,131,167,171,177,194,208,216,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'definicion_instr':([0,2,77,78,120,131,167,171,177,194,208,216,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion_instr':([0,2,77,78,120,131,167,171,177,194,208,216,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'definicion_asignacion_instr':([0,2,77,78,120,131,167,171,177,194,208,216,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'call_function':([0,2,23,26,27,43,44,46,47,51,52,54,77,78,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,120,122,124,131,167,169,171,177,179,189,191,194,195,208,216,],[9,9,62,62,62,62,62,62,62,62,62,62,9,9,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,9,62,62,9,9,62,9,9,62,62,62,9,62,9,9,]),'declare_function':([0,2,77,78,120,131,167,171,177,194,208,216,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'return_state':([0,2,77,78,120,131,167,171,177,194,208,216,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'break_state':([0,2,77,78,120,131,167,171,177,194,208,216,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'continue_state':([0,2,77,78,120,131,167,171,177,194,208,216,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'if_state':([0,2,77,78,120,131,167,171,177,194,208,216,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'while_state':([0,2,77,78,120,131,167,171,177,194,208,216,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'for_state':([0,2,77,78,120,131,167,171,177,194,208,216,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'expression':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[50,77,78,81,81,84,81,103,104,105,126,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,151,152,153,154,155,156,157,159,171,172,194,203,204,205,208,]),'final_expression':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'nativas':([23,26,27,43,44,46,47,51,52,54,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,113,114,115,117,122,124,169,179,189,191,195,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'exp_list':([43,44,47,],[80,82,86,]),'statement':([77,78,131,167,171,177,194,208,216,],[119,121,176,192,196,201,207,218,219,]),'dec_params':([88,],[132,]),'tipo':([118,174,197,199,],[160,198,210,211,]),'else_if_list':([119,207,],[168,217,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','sintactico.py',233),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','sintactico.py',238),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','sintactico.py',239),
  ('instruccion -> print_instr PTCOMA','instruccion',2,'p_instruccion','sintactico.py',248),
  ('instruccion -> println_instr PTCOMA','instruccion',2,'p_instruccion','sintactico.py',249),
  ('instruccion -> definicion_instr PTCOMA','instruccion',2,'p_instruccion','sintactico.py',250),
  ('instruccion -> asignacion_instr PTCOMA','instruccion',2,'p_instruccion','sintactico.py',251),
  ('instruccion -> definicion_asignacion_instr PTCOMA','instruccion',2,'p_instruccion','sintactico.py',252),
  ('instruccion -> call_function PTCOMA','instruccion',2,'p_instruccion','sintactico.py',253),
  ('instruccion -> declare_function PTCOMA','instruccion',2,'p_instruccion','sintactico.py',254),
  ('instruccion -> return_state PTCOMA','instruccion',2,'p_instruccion','sintactico.py',255),
  ('instruccion -> break_state PTCOMA','instruccion',2,'p_instruccion','sintactico.py',256),
  ('instruccion -> continue_state PTCOMA','instruccion',2,'p_instruccion','sintactico.py',257),
  ('instruccion -> if_state PTCOMA','instruccion',2,'p_instruccion','sintactico.py',258),
  ('instruccion -> while_state PTCOMA','instruccion',2,'p_instruccion','sintactico.py',259),
  ('instruccion -> for_state PTCOMA','instruccion',2,'p_instruccion','sintactico.py',260),
  ('expression -> MENOS expression','expression',2,'p_expression','sintactico.py',265),
  ('expression -> NOT expression','expression',2,'p_expression','sintactico.py',266),
  ('expression -> expression MAS expression','expression',3,'p_expression','sintactico.py',267),
  ('expression -> expression MENOS expression','expression',3,'p_expression','sintactico.py',268),
  ('expression -> expression POR expression','expression',3,'p_expression','sintactico.py',269),
  ('expression -> expression DIVIDIDO expression','expression',3,'p_expression','sintactico.py',270),
  ('expression -> expression POTENCIA expression','expression',3,'p_expression','sintactico.py',271),
  ('expression -> expression MODULO expression','expression',3,'p_expression','sintactico.py',272),
  ('expression -> expression MAYQUE expression','expression',3,'p_expression','sintactico.py',273),
  ('expression -> expression MENQUE expression','expression',3,'p_expression','sintactico.py',274),
  ('expression -> expression MENIGUALQUE expression','expression',3,'p_expression','sintactico.py',275),
  ('expression -> expression MAYIGUALQUE expression','expression',3,'p_expression','sintactico.py',276),
  ('expression -> expression IGUALQUE expression','expression',3,'p_expression','sintactico.py',277),
  ('expression -> expression NIGUALQUE expression','expression',3,'p_expression','sintactico.py',278),
  ('expression -> expression OR expression','expression',3,'p_expression','sintactico.py',279),
  ('expression -> expression AND expression','expression',3,'p_expression','sintactico.py',280),
  ('expression -> final_expression','expression',1,'p_expression','sintactico.py',281),
  ('final_expression -> PARIZQ expression PARDER','final_expression',3,'p_final_expression','sintactico.py',338),
  ('final_expression -> DECIMAL','final_expression',1,'p_final_expression','sintactico.py',339),
  ('final_expression -> ENTERO','final_expression',1,'p_final_expression','sintactico.py',340),
  ('final_expression -> CADENA','final_expression',1,'p_final_expression','sintactico.py',341),
  ('final_expression -> CARACTER','final_expression',1,'p_final_expression','sintactico.py',342),
  ('final_expression -> ID','final_expression',1,'p_final_expression','sintactico.py',343),
  ('final_expression -> TRUE','final_expression',1,'p_final_expression','sintactico.py',344),
  ('final_expression -> FALSE','final_expression',1,'p_final_expression','sintactico.py',345),
  ('final_expression -> call_function','final_expression',1,'p_final_expression','sintactico.py',346),
  ('final_expression -> nativas','final_expression',1,'p_final_expression','sintactico.py',347),
  ('nativas -> LOG PARIZQ ENTERO COMA expression PARDER','nativas',6,'p_nativas','sintactico.py',373),
  ('nativas -> LOG10 PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',374),
  ('nativas -> COS PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',375),
  ('nativas -> SIN PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',376),
  ('nativas -> TAN PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',377),
  ('nativas -> SQRT PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',378),
  ('nativas -> UPPERCASE PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',379),
  ('nativas -> LOWERCASE PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',380),
  ('nativas -> TOSTRING PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',381),
  ('nativas -> TOFLOAT PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',382),
  ('nativas -> TRUNC PARIZQ INT COMA expression PARDER','nativas',6,'p_nativas','sintactico.py',383),
  ('nativas -> TYPEOF PARIZQ expression PARDER','nativas',4,'p_nativas','sintactico.py',384),
  ('nativas -> PARSE PARIZQ tipo COMA expression PARDER','nativas',6,'p_nativas','sintactico.py',385),
  ('print_instr -> PRINT PARIZQ exp_list PARDER','print_instr',4,'p_print_instr','sintactico.py',416),
  ('println_instr -> PRINTLN PARIZQ exp_list PARDER','println_instr',4,'p_println_instr','sintactico.py',421),
  ('tipo -> INT','tipo',1,'p_tipo','sintactico.py',426),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintactico.py',427),
  ('tipo -> BOOL','tipo',1,'p_tipo','sintactico.py',428),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintactico.py',429),
  ('tipo -> STRING','tipo',1,'p_tipo','sintactico.py',430),
  ('definicion_instr -> LOCAL ID','definicion_instr',2,'p_definicion_instr','sintactico.py',445),
  ('definicion_instr -> GLOBAL ID','definicion_instr',2,'p_definicion_instr','sintactico.py',446),
  ('asignacion_instr -> ID IGUAL expression','asignacion_instr',3,'p_asignacion_instr','sintactico.py',454),
  ('asignacion_instr -> LOCAL ID IGUAL expression','asignacion_instr',4,'p_asignacion_instr','sintactico.py',455),
  ('asignacion_instr -> GLOBAL ID IGUAL expression','asignacion_instr',4,'p_asignacion_instr','sintactico.py',456),
  ('definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo','definicion_asignacion_instr',6,'p_definicion_asignacion_instr','sintactico.py',467),
  ('definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo','definicion_asignacion_instr',7,'p_definicion_asignacion_instr','sintactico.py',468),
  ('definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo','definicion_asignacion_instr',7,'p_definicion_asignacion_instr','sintactico.py',469),
  ('call_function -> ID PARIZQ PARDER','call_function',3,'p_call_function_instr','sintactico.py',480),
  ('call_function -> ID PARIZQ exp_list PARDER','call_function',4,'p_call_function_instr','sintactico.py',481),
  ('exp_list -> exp_list COMA expression','exp_list',3,'p_exp_list_instr','sintactico.py',489),
  ('exp_list -> expression','exp_list',1,'p_exp_list_instr','sintactico.py',490),
  ('statement -> instrucciones','statement',1,'p_statement','sintactico.py',499),
  ('declare_function -> FUNCTION ID PARIZQ PARDER statement END','declare_function',6,'p_declare_function','sintactico.py',504),
  ('declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END','declare_function',7,'p_declare_function','sintactico.py',505),
  ('dec_params -> dec_params COMA ID','dec_params',3,'p_dec_params','sintactico.py',513),
  ('dec_params -> ID','dec_params',1,'p_dec_params','sintactico.py',514),
  ('if_state -> IF expression statement END','if_state',4,'p_if_state','sintactico.py',523),
  ('if_state -> IF expression statement ELSE statement END','if_state',6,'p_if_state','sintactico.py',524),
  ('if_state -> IF expression statement else_if_list END','if_state',5,'p_if_state','sintactico.py',525),
  ('else_if_list -> ELSEIF expression statement','else_if_list',3,'p_else_if_list','sintactico.py',535),
  ('else_if_list -> ELSEIF expression statement ELSE statement','else_if_list',5,'p_else_if_list','sintactico.py',536),
  ('else_if_list -> ELSEIF expression statement else_if_list','else_if_list',4,'p_else_if_list','sintactico.py',537),
  ('while_state -> WHILE expression statement END','while_state',4,'p_while_state','sintactico.py',547),
  ('for_state -> FOR ID IN expression DOSP expression statement END','for_state',8,'p_for_state','sintactico.py',552),
  ('for_state -> FOR ID IN expression statement END','for_state',6,'p_for_state','sintactico.py',553),
  ('break_state -> BREAK','break_state',1,'p_break','sintactico.py',561),
  ('continue_state -> CONTINUE','continue_state',1,'p_continue','sintactico.py',566),
  ('return_state -> RETURN','return_state',1,'p_return','sintactico.py',571),
  ('return_state -> RETURN expression','return_state',2,'p_return','sintactico.py',572),
]
