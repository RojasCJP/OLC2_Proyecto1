Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONCAT
    CORCHETEDER
    CORCHETEIZQ
    LLAVDER
    LLAVIZQ
    NOTHING
    PUNTO

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print_instr PTCOMA
Rule 5     instruccion -> println_instr PTCOMA
Rule 6     instruccion -> definicion_instr PTCOMA
Rule 7     instruccion -> asignacion_instr PTCOMA
Rule 8     instruccion -> definicion_asignacion_instr PTCOMA
Rule 9     instruccion -> call_function PTCOMA
Rule 10    instruccion -> declare_function PTCOMA
Rule 11    instruccion -> return_state PTCOMA
Rule 12    instruccion -> break_state PTCOMA
Rule 13    instruccion -> continue_state PTCOMA
Rule 14    instruccion -> if_state PTCOMA
Rule 15    instruccion -> while_state PTCOMA
Rule 16    instruccion -> for_state PTCOMA
Rule 17    expression -> MENOS expression
Rule 18    expression -> NOT expression
Rule 19    expression -> expression MAS expression
Rule 20    expression -> expression MENOS expression
Rule 21    expression -> expression POR expression
Rule 22    expression -> expression DIVIDIDO expression
Rule 23    expression -> expression POTENCIA expression
Rule 24    expression -> expression MODULO expression
Rule 25    expression -> expression MAYQUE expression
Rule 26    expression -> expression MENQUE expression
Rule 27    expression -> expression MENIGUALQUE expression
Rule 28    expression -> expression MAYIGUALQUE expression
Rule 29    expression -> expression IGUALQUE expression
Rule 30    expression -> expression NIGUALQUE expression
Rule 31    expression -> expression OR expression
Rule 32    expression -> expression AND expression
Rule 33    expression -> final_expression
Rule 34    final_expression -> PARIZQ expression PARDER
Rule 35    final_expression -> DECIMAL
Rule 36    final_expression -> ENTERO
Rule 37    final_expression -> CADENA
Rule 38    final_expression -> CARACTER
Rule 39    final_expression -> ID
Rule 40    final_expression -> TRUE
Rule 41    final_expression -> FALSE
Rule 42    final_expression -> call_function
Rule 43    final_expression -> nativas
Rule 44    nativas -> LOG PARIZQ ENTERO COMA expression PARDER
Rule 45    nativas -> LOG10 PARIZQ expression PARDER
Rule 46    nativas -> COS PARIZQ expression PARDER
Rule 47    nativas -> SIN PARIZQ expression PARDER
Rule 48    nativas -> TAN PARIZQ expression PARDER
Rule 49    nativas -> SQRT PARIZQ expression PARDER
Rule 50    nativas -> UPPERCASE PARIZQ expression PARDER
Rule 51    nativas -> LOWERCASE PARIZQ expression PARDER
Rule 52    nativas -> TOSTRING PARIZQ expression PARDER
Rule 53    nativas -> TOFLOAT PARIZQ expression PARDER
Rule 54    nativas -> TRUNC PARIZQ INT COMA expression PARDER
Rule 55    nativas -> TYPEOF PARIZQ expression PARDER
Rule 56    nativas -> PARSE PARIZQ tipo COMA expression PARDER
Rule 57    print_instr -> PRINT PARIZQ exp_list PARDER
Rule 58    println_instr -> PRINTLN PARIZQ exp_list PARDER
Rule 59    tipo -> INT
Rule 60    tipo -> FLOAT
Rule 61    tipo -> BOOL
Rule 62    tipo -> CHAR
Rule 63    tipo -> STRING
Rule 64    definicion_instr -> LOCAL ID
Rule 65    definicion_instr -> GLOBAL ID
Rule 66    asignacion_instr -> ID IGUAL expression
Rule 67    asignacion_instr -> LOCAL ID IGUAL expression
Rule 68    asignacion_instr -> GLOBAL ID IGUAL expression
Rule 69    definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo
Rule 70    definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo
Rule 71    definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo
Rule 72    call_function -> ID PARIZQ PARDER
Rule 73    call_function -> ID PARIZQ exp_list PARDER
Rule 74    exp_list -> exp_list COMA expression
Rule 75    exp_list -> expression
Rule 76    statement -> instrucciones
Rule 77    declare_function -> FUNCTION ID PARIZQ PARDER statement END
Rule 78    declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END
Rule 79    dec_params -> dec_params COMA ID
Rule 80    dec_params -> ID
Rule 81    if_state -> IF expression statement END
Rule 82    if_state -> IF expression statement ELSE statement END
Rule 83    if_state -> IF expression statement else_if_list END
Rule 84    else_if_list -> ELSEIF expression statement
Rule 85    else_if_list -> ELSEIF expression statement ELSE statement
Rule 86    else_if_list -> ELSEIF expression statement else_if_list
Rule 87    while_state -> WHILE expression statement END
Rule 88    for_state -> FOR ID IN expression DOSP expression statement END
Rule 89    for_state -> FOR ID IN expression statement END
Rule 90    break_state -> BREAK
Rule 91    continue_state -> CONTINUE
Rule 92    return_state -> RETURN
Rule 93    return_state -> RETURN expression

Terminals, with rules where they appear

AND                  : 32
BOOL                 : 61
BREAK                : 90
CADENA               : 37
CARACTER             : 38
CHAR                 : 62
COMA                 : 44 54 56 74 79
CONCAT               : 
CONTINUE             : 91
CORCHETEDER          : 
CORCHETEIZQ          : 
COS                  : 46
DECIMAL              : 35
DIVIDIDO             : 22
DOSP                 : 69 69 70 70 71 71 88
ELSE                 : 82 85
ELSEIF               : 84 85 86
END                  : 77 78 81 82 83 87 88 89
ENTERO               : 36 44
FALSE                : 41
FLOAT                : 60
FOR                  : 88 89
FUNCTION             : 77 78
GLOBAL               : 65 68 71
ID                   : 39 64 65 66 67 68 69 70 71 72 73 77 78 79 80 88 89
IF                   : 81 82 83
IGUAL                : 66 67 68 69 70 71
IGUALQUE             : 29
IN                   : 88 89
INT                  : 54 59
LLAVDER              : 
LLAVIZQ              : 
LOCAL                : 64 67 70
LOG                  : 44
LOG10                : 45
LOWERCASE            : 51
MAS                  : 19
MAYIGUALQUE          : 28
MAYQUE               : 25
MENIGUALQUE          : 27
MENOS                : 17 20
MENQUE               : 26
MODULO               : 24
NIGUALQUE            : 30
NOT                  : 18
NOTHING              : 
OR                   : 31
PARDER               : 34 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 72 73 77 78
PARIZQ               : 34 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 72 73 77 78
PARSE                : 56
POR                  : 21
POTENCIA             : 23
PRINT                : 57
PRINTLN              : 58
PTCOMA               : 4 5 6 7 8 9 10 11 12 13 14 15 16
PUNTO                : 
RETURN               : 92 93
SIN                  : 47
SQRT                 : 49
STRING               : 63
TAN                  : 48
TOFLOAT              : 53
TOSTRING             : 52
TRUE                 : 40
TRUNC                : 54
TYPEOF               : 55
UPPERCASE            : 50
WHILE                : 87
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 7
break_state          : 12
call_function        : 9 42
continue_state       : 13
dec_params           : 78 79
declare_function     : 10
definicion_asignacion_instr : 8
definicion_instr     : 6
else_if_list         : 83 86
exp_list             : 57 58 73 74
expression           : 17 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 34 44 45 46 47 48 49 50 51 52 53 54 55 56 66 67 68 69 70 71 74 75 81 82 83 84 85 86 87 88 88 89 93
final_expression     : 33
for_state            : 16
if_state             : 14
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 76
nativas              : 43
print_instr          : 4
println_instr        : 5
return_state         : 11
statement            : 77 78 81 82 82 83 84 85 85 86 87 88 89
tipo                 : 56 69 70 71
while_state          : 15

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    instruccion                    shift and go to state 29
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    LOCAL           reduce using rule 3 (instrucciones -> instruccion .)
    GLOBAL          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    END             reduce using rule 3 (instrucciones -> instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instruccion .)
    ELSEIF          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print_instr . PTCOMA

    PTCOMA          shift and go to state 30


state 5

    (5) instruccion -> println_instr . PTCOMA

    PTCOMA          shift and go to state 31


state 6

    (6) instruccion -> definicion_instr . PTCOMA

    PTCOMA          shift and go to state 32


state 7

    (7) instruccion -> asignacion_instr . PTCOMA

    PTCOMA          shift and go to state 33


state 8

    (8) instruccion -> definicion_asignacion_instr . PTCOMA

    PTCOMA          shift and go to state 34


state 9

    (9) instruccion -> call_function . PTCOMA

    PTCOMA          shift and go to state 35


state 10

    (10) instruccion -> declare_function . PTCOMA

    PTCOMA          shift and go to state 36


state 11

    (11) instruccion -> return_state . PTCOMA

    PTCOMA          shift and go to state 37


state 12

    (12) instruccion -> break_state . PTCOMA

    PTCOMA          shift and go to state 38


state 13

    (13) instruccion -> continue_state . PTCOMA

    PTCOMA          shift and go to state 39


state 14

    (14) instruccion -> if_state . PTCOMA

    PTCOMA          shift and go to state 40


state 15

    (15) instruccion -> while_state . PTCOMA

    PTCOMA          shift and go to state 41


state 16

    (16) instruccion -> for_state . PTCOMA

    PTCOMA          shift and go to state 42


state 17

    (57) print_instr -> PRINT . PARIZQ exp_list PARDER

    PARIZQ          shift and go to state 43


state 18

    (58) println_instr -> PRINTLN . PARIZQ exp_list PARDER

    PARIZQ          shift and go to state 44


state 19

    (64) definicion_instr -> LOCAL . ID
    (67) asignacion_instr -> LOCAL . ID IGUAL expression
    (70) definicion_asignacion_instr -> LOCAL . ID IGUAL expression DOSP DOSP tipo

    ID              shift and go to state 45


state 20

    (66) asignacion_instr -> ID . IGUAL expression
    (69) definicion_asignacion_instr -> ID . IGUAL expression DOSP DOSP tipo
    (72) call_function -> ID . PARIZQ PARDER
    (73) call_function -> ID . PARIZQ exp_list PARDER

    IGUAL           shift and go to state 46
    PARIZQ          shift and go to state 47


state 21

    (65) definicion_instr -> GLOBAL . ID
    (68) asignacion_instr -> GLOBAL . ID IGUAL expression
    (71) definicion_asignacion_instr -> GLOBAL . ID IGUAL expression DOSP DOSP tipo

    ID              shift and go to state 48


state 22

    (77) declare_function -> FUNCTION . ID PARIZQ PARDER statement END
    (78) declare_function -> FUNCTION . ID PARIZQ dec_params PARDER statement END

    ID              shift and go to state 49


state 23

    (92) return_state -> RETURN .
    (93) return_state -> RETURN . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    PTCOMA          reduce using rule 92 (return_state -> RETURN .)
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 50
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 24

    (90) break_state -> BREAK .

    PTCOMA          reduce using rule 90 (break_state -> BREAK .)


state 25

    (91) continue_state -> CONTINUE .

    PTCOMA          reduce using rule 91 (continue_state -> CONTINUE .)


state 26

    (81) if_state -> IF . expression statement END
    (82) if_state -> IF . expression statement ELSE statement END
    (83) if_state -> IF . expression statement else_if_list END
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 77
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 27

    (87) while_state -> WHILE . expression statement END
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 78
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 28

    (88) for_state -> FOR . ID IN expression DOSP expression statement END
    (89) for_state -> FOR . ID IN expression statement END

    ID              shift and go to state 79


state 29

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOCAL           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    GLOBAL          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSEIF          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 30

    (4) instruccion -> print_instr PTCOMA .

    PRINT           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    PRINTLN         reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    LOCAL           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    GLOBAL          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ID              reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    FUNCTION        reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    RETURN          reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    BREAK           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    IF              reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    WHILE           reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    FOR             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    $end            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    END             reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ELSE            reduce using rule 4 (instruccion -> print_instr PTCOMA .)
    ELSEIF          reduce using rule 4 (instruccion -> print_instr PTCOMA .)


state 31

    (5) instruccion -> println_instr PTCOMA .

    PRINT           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    PRINTLN         reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    LOCAL           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    GLOBAL          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ID              reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    FUNCTION        reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    RETURN          reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    BREAK           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    IF              reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    WHILE           reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    FOR             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    $end            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    END             reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ELSE            reduce using rule 5 (instruccion -> println_instr PTCOMA .)
    ELSEIF          reduce using rule 5 (instruccion -> println_instr PTCOMA .)


state 32

    (6) instruccion -> definicion_instr PTCOMA .

    PRINT           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    PRINTLN         reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    LOCAL           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    GLOBAL          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ID              reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    FUNCTION        reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    RETURN          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    BREAK           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    CONTINUE        reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    IF              reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    WHILE           reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    FOR             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    $end            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    END             reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ELSE            reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)
    ELSEIF          reduce using rule 6 (instruccion -> definicion_instr PTCOMA .)


state 33

    (7) instruccion -> asignacion_instr PTCOMA .

    PRINT           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    PRINTLN         reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    LOCAL           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    GLOBAL          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ID              reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    FUNCTION        reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    RETURN          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    BREAK           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    CONTINUE        reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    IF              reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    WHILE           reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    FOR             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    $end            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    END             reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ELSE            reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)
    ELSEIF          reduce using rule 7 (instruccion -> asignacion_instr PTCOMA .)


state 34

    (8) instruccion -> definicion_asignacion_instr PTCOMA .

    PRINT           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    PRINTLN         reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    LOCAL           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    GLOBAL          reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ID              reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    FUNCTION        reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    RETURN          reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    BREAK           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    CONTINUE        reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    IF              reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    WHILE           reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    FOR             reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    $end            reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    END             reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ELSE            reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)
    ELSEIF          reduce using rule 8 (instruccion -> definicion_asignacion_instr PTCOMA .)


state 35

    (9) instruccion -> call_function PTCOMA .

    PRINT           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    PRINTLN         reduce using rule 9 (instruccion -> call_function PTCOMA .)
    LOCAL           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    GLOBAL          reduce using rule 9 (instruccion -> call_function PTCOMA .)
    ID              reduce using rule 9 (instruccion -> call_function PTCOMA .)
    FUNCTION        reduce using rule 9 (instruccion -> call_function PTCOMA .)
    RETURN          reduce using rule 9 (instruccion -> call_function PTCOMA .)
    BREAK           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    CONTINUE        reduce using rule 9 (instruccion -> call_function PTCOMA .)
    IF              reduce using rule 9 (instruccion -> call_function PTCOMA .)
    WHILE           reduce using rule 9 (instruccion -> call_function PTCOMA .)
    FOR             reduce using rule 9 (instruccion -> call_function PTCOMA .)
    $end            reduce using rule 9 (instruccion -> call_function PTCOMA .)
    END             reduce using rule 9 (instruccion -> call_function PTCOMA .)
    ELSE            reduce using rule 9 (instruccion -> call_function PTCOMA .)
    ELSEIF          reduce using rule 9 (instruccion -> call_function PTCOMA .)


state 36

    (10) instruccion -> declare_function PTCOMA .

    PRINT           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    PRINTLN         reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    LOCAL           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    GLOBAL          reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    ID              reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    FUNCTION        reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    RETURN          reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    BREAK           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    IF              reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    WHILE           reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    FOR             reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    $end            reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    END             reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    ELSE            reduce using rule 10 (instruccion -> declare_function PTCOMA .)
    ELSEIF          reduce using rule 10 (instruccion -> declare_function PTCOMA .)


state 37

    (11) instruccion -> return_state PTCOMA .

    PRINT           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    PRINTLN         reduce using rule 11 (instruccion -> return_state PTCOMA .)
    LOCAL           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    GLOBAL          reduce using rule 11 (instruccion -> return_state PTCOMA .)
    ID              reduce using rule 11 (instruccion -> return_state PTCOMA .)
    FUNCTION        reduce using rule 11 (instruccion -> return_state PTCOMA .)
    RETURN          reduce using rule 11 (instruccion -> return_state PTCOMA .)
    BREAK           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    CONTINUE        reduce using rule 11 (instruccion -> return_state PTCOMA .)
    IF              reduce using rule 11 (instruccion -> return_state PTCOMA .)
    WHILE           reduce using rule 11 (instruccion -> return_state PTCOMA .)
    FOR             reduce using rule 11 (instruccion -> return_state PTCOMA .)
    $end            reduce using rule 11 (instruccion -> return_state PTCOMA .)
    END             reduce using rule 11 (instruccion -> return_state PTCOMA .)
    ELSE            reduce using rule 11 (instruccion -> return_state PTCOMA .)
    ELSEIF          reduce using rule 11 (instruccion -> return_state PTCOMA .)


state 38

    (12) instruccion -> break_state PTCOMA .

    PRINT           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    PRINTLN         reduce using rule 12 (instruccion -> break_state PTCOMA .)
    LOCAL           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    GLOBAL          reduce using rule 12 (instruccion -> break_state PTCOMA .)
    ID              reduce using rule 12 (instruccion -> break_state PTCOMA .)
    FUNCTION        reduce using rule 12 (instruccion -> break_state PTCOMA .)
    RETURN          reduce using rule 12 (instruccion -> break_state PTCOMA .)
    BREAK           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> break_state PTCOMA .)
    IF              reduce using rule 12 (instruccion -> break_state PTCOMA .)
    WHILE           reduce using rule 12 (instruccion -> break_state PTCOMA .)
    FOR             reduce using rule 12 (instruccion -> break_state PTCOMA .)
    $end            reduce using rule 12 (instruccion -> break_state PTCOMA .)
    END             reduce using rule 12 (instruccion -> break_state PTCOMA .)
    ELSE            reduce using rule 12 (instruccion -> break_state PTCOMA .)
    ELSEIF          reduce using rule 12 (instruccion -> break_state PTCOMA .)


state 39

    (13) instruccion -> continue_state PTCOMA .

    PRINT           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    PRINTLN         reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    LOCAL           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    GLOBAL          reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    ID              reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    FUNCTION        reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    RETURN          reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    BREAK           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    IF              reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    WHILE           reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    FOR             reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    $end            reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    END             reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    ELSE            reduce using rule 13 (instruccion -> continue_state PTCOMA .)
    ELSEIF          reduce using rule 13 (instruccion -> continue_state PTCOMA .)


state 40

    (14) instruccion -> if_state PTCOMA .

    PRINT           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    PRINTLN         reduce using rule 14 (instruccion -> if_state PTCOMA .)
    LOCAL           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    GLOBAL          reduce using rule 14 (instruccion -> if_state PTCOMA .)
    ID              reduce using rule 14 (instruccion -> if_state PTCOMA .)
    FUNCTION        reduce using rule 14 (instruccion -> if_state PTCOMA .)
    RETURN          reduce using rule 14 (instruccion -> if_state PTCOMA .)
    BREAK           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    CONTINUE        reduce using rule 14 (instruccion -> if_state PTCOMA .)
    IF              reduce using rule 14 (instruccion -> if_state PTCOMA .)
    WHILE           reduce using rule 14 (instruccion -> if_state PTCOMA .)
    FOR             reduce using rule 14 (instruccion -> if_state PTCOMA .)
    $end            reduce using rule 14 (instruccion -> if_state PTCOMA .)
    END             reduce using rule 14 (instruccion -> if_state PTCOMA .)
    ELSE            reduce using rule 14 (instruccion -> if_state PTCOMA .)
    ELSEIF          reduce using rule 14 (instruccion -> if_state PTCOMA .)


state 41

    (15) instruccion -> while_state PTCOMA .

    PRINT           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    PRINTLN         reduce using rule 15 (instruccion -> while_state PTCOMA .)
    LOCAL           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    GLOBAL          reduce using rule 15 (instruccion -> while_state PTCOMA .)
    ID              reduce using rule 15 (instruccion -> while_state PTCOMA .)
    FUNCTION        reduce using rule 15 (instruccion -> while_state PTCOMA .)
    RETURN          reduce using rule 15 (instruccion -> while_state PTCOMA .)
    BREAK           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    CONTINUE        reduce using rule 15 (instruccion -> while_state PTCOMA .)
    IF              reduce using rule 15 (instruccion -> while_state PTCOMA .)
    WHILE           reduce using rule 15 (instruccion -> while_state PTCOMA .)
    FOR             reduce using rule 15 (instruccion -> while_state PTCOMA .)
    $end            reduce using rule 15 (instruccion -> while_state PTCOMA .)
    END             reduce using rule 15 (instruccion -> while_state PTCOMA .)
    ELSE            reduce using rule 15 (instruccion -> while_state PTCOMA .)
    ELSEIF          reduce using rule 15 (instruccion -> while_state PTCOMA .)


state 42

    (16) instruccion -> for_state PTCOMA .

    PRINT           reduce using rule 16 (instruccion -> for_state PTCOMA .)
    PRINTLN         reduce using rule 16 (instruccion -> for_state PTCOMA .)
    LOCAL           reduce using rule 16 (instruccion -> for_state PTCOMA .)
    GLOBAL          reduce using rule 16 (instruccion -> for_state PTCOMA .)
    ID              reduce using rule 16 (instruccion -> for_state PTCOMA .)
    FUNCTION        reduce using rule 16 (instruccion -> for_state PTCOMA .)
    RETURN          reduce using rule 16 (instruccion -> for_state PTCOMA .)
    BREAK           reduce using rule 16 (instruccion -> for_state PTCOMA .)
    CONTINUE        reduce using rule 16 (instruccion -> for_state PTCOMA .)
    IF              reduce using rule 16 (instruccion -> for_state PTCOMA .)
    WHILE           reduce using rule 16 (instruccion -> for_state PTCOMA .)
    FOR             reduce using rule 16 (instruccion -> for_state PTCOMA .)
    $end            reduce using rule 16 (instruccion -> for_state PTCOMA .)
    END             reduce using rule 16 (instruccion -> for_state PTCOMA .)
    ELSE            reduce using rule 16 (instruccion -> for_state PTCOMA .)
    ELSEIF          reduce using rule 16 (instruccion -> for_state PTCOMA .)


state 43

    (57) print_instr -> PRINT PARIZQ . exp_list PARDER
    (74) exp_list -> . exp_list COMA expression
    (75) exp_list -> . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    exp_list                       shift and go to state 80
    expression                     shift and go to state 81
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 44

    (58) println_instr -> PRINTLN PARIZQ . exp_list PARDER
    (74) exp_list -> . exp_list COMA expression
    (75) exp_list -> . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    exp_list                       shift and go to state 82
    expression                     shift and go to state 81
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 45

    (64) definicion_instr -> LOCAL ID .
    (67) asignacion_instr -> LOCAL ID . IGUAL expression
    (70) definicion_asignacion_instr -> LOCAL ID . IGUAL expression DOSP DOSP tipo

    PTCOMA          reduce using rule 64 (definicion_instr -> LOCAL ID .)
    IGUAL           shift and go to state 83


state 46

    (66) asignacion_instr -> ID IGUAL . expression
    (69) definicion_asignacion_instr -> ID IGUAL . expression DOSP DOSP tipo
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 84
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 47

    (72) call_function -> ID PARIZQ . PARDER
    (73) call_function -> ID PARIZQ . exp_list PARDER
    (74) exp_list -> . exp_list COMA expression
    (75) exp_list -> . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    PARDER          shift and go to state 85
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    exp_list                       shift and go to state 86
    expression                     shift and go to state 81
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 48

    (65) definicion_instr -> GLOBAL ID .
    (68) asignacion_instr -> GLOBAL ID . IGUAL expression
    (71) definicion_asignacion_instr -> GLOBAL ID . IGUAL expression DOSP DOSP tipo

    PTCOMA          reduce using rule 65 (definicion_instr -> GLOBAL ID .)
    IGUAL           shift and go to state 87


state 49

    (77) declare_function -> FUNCTION ID . PARIZQ PARDER statement END
    (78) declare_function -> FUNCTION ID . PARIZQ dec_params PARDER statement END

    PARIZQ          shift and go to state 88


state 50

    (93) return_state -> RETURN expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PTCOMA          reduce using rule 93 (return_state -> RETURN expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 51

    (17) expression -> MENOS . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 103
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 52

    (18) expression -> NOT . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 104
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 53

    (33) expression -> final_expression .

    MAS             reduce using rule 33 (expression -> final_expression .)
    MENOS           reduce using rule 33 (expression -> final_expression .)
    POR             reduce using rule 33 (expression -> final_expression .)
    DIVIDIDO        reduce using rule 33 (expression -> final_expression .)
    POTENCIA        reduce using rule 33 (expression -> final_expression .)
    MODULO          reduce using rule 33 (expression -> final_expression .)
    MAYQUE          reduce using rule 33 (expression -> final_expression .)
    MENQUE          reduce using rule 33 (expression -> final_expression .)
    MENIGUALQUE     reduce using rule 33 (expression -> final_expression .)
    MAYIGUALQUE     reduce using rule 33 (expression -> final_expression .)
    IGUALQUE        reduce using rule 33 (expression -> final_expression .)
    NIGUALQUE       reduce using rule 33 (expression -> final_expression .)
    OR              reduce using rule 33 (expression -> final_expression .)
    AND             reduce using rule 33 (expression -> final_expression .)
    PTCOMA          reduce using rule 33 (expression -> final_expression .)
    PRINT           reduce using rule 33 (expression -> final_expression .)
    PRINTLN         reduce using rule 33 (expression -> final_expression .)
    LOCAL           reduce using rule 33 (expression -> final_expression .)
    GLOBAL          reduce using rule 33 (expression -> final_expression .)
    ID              reduce using rule 33 (expression -> final_expression .)
    FUNCTION        reduce using rule 33 (expression -> final_expression .)
    RETURN          reduce using rule 33 (expression -> final_expression .)
    BREAK           reduce using rule 33 (expression -> final_expression .)
    CONTINUE        reduce using rule 33 (expression -> final_expression .)
    IF              reduce using rule 33 (expression -> final_expression .)
    WHILE           reduce using rule 33 (expression -> final_expression .)
    FOR             reduce using rule 33 (expression -> final_expression .)
    PARDER          reduce using rule 33 (expression -> final_expression .)
    COMA            reduce using rule 33 (expression -> final_expression .)
    DOSP            reduce using rule 33 (expression -> final_expression .)


state 54

    (34) final_expression -> PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 105
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 55

    (35) final_expression -> DECIMAL .

    MAS             reduce using rule 35 (final_expression -> DECIMAL .)
    MENOS           reduce using rule 35 (final_expression -> DECIMAL .)
    POR             reduce using rule 35 (final_expression -> DECIMAL .)
    DIVIDIDO        reduce using rule 35 (final_expression -> DECIMAL .)
    POTENCIA        reduce using rule 35 (final_expression -> DECIMAL .)
    MODULO          reduce using rule 35 (final_expression -> DECIMAL .)
    MAYQUE          reduce using rule 35 (final_expression -> DECIMAL .)
    MENQUE          reduce using rule 35 (final_expression -> DECIMAL .)
    MENIGUALQUE     reduce using rule 35 (final_expression -> DECIMAL .)
    MAYIGUALQUE     reduce using rule 35 (final_expression -> DECIMAL .)
    IGUALQUE        reduce using rule 35 (final_expression -> DECIMAL .)
    NIGUALQUE       reduce using rule 35 (final_expression -> DECIMAL .)
    OR              reduce using rule 35 (final_expression -> DECIMAL .)
    AND             reduce using rule 35 (final_expression -> DECIMAL .)
    PTCOMA          reduce using rule 35 (final_expression -> DECIMAL .)
    PRINT           reduce using rule 35 (final_expression -> DECIMAL .)
    PRINTLN         reduce using rule 35 (final_expression -> DECIMAL .)
    LOCAL           reduce using rule 35 (final_expression -> DECIMAL .)
    GLOBAL          reduce using rule 35 (final_expression -> DECIMAL .)
    ID              reduce using rule 35 (final_expression -> DECIMAL .)
    FUNCTION        reduce using rule 35 (final_expression -> DECIMAL .)
    RETURN          reduce using rule 35 (final_expression -> DECIMAL .)
    BREAK           reduce using rule 35 (final_expression -> DECIMAL .)
    CONTINUE        reduce using rule 35 (final_expression -> DECIMAL .)
    IF              reduce using rule 35 (final_expression -> DECIMAL .)
    WHILE           reduce using rule 35 (final_expression -> DECIMAL .)
    FOR             reduce using rule 35 (final_expression -> DECIMAL .)
    PARDER          reduce using rule 35 (final_expression -> DECIMAL .)
    COMA            reduce using rule 35 (final_expression -> DECIMAL .)
    DOSP            reduce using rule 35 (final_expression -> DECIMAL .)


state 56

    (36) final_expression -> ENTERO .

    MAS             reduce using rule 36 (final_expression -> ENTERO .)
    MENOS           reduce using rule 36 (final_expression -> ENTERO .)
    POR             reduce using rule 36 (final_expression -> ENTERO .)
    DIVIDIDO        reduce using rule 36 (final_expression -> ENTERO .)
    POTENCIA        reduce using rule 36 (final_expression -> ENTERO .)
    MODULO          reduce using rule 36 (final_expression -> ENTERO .)
    MAYQUE          reduce using rule 36 (final_expression -> ENTERO .)
    MENQUE          reduce using rule 36 (final_expression -> ENTERO .)
    MENIGUALQUE     reduce using rule 36 (final_expression -> ENTERO .)
    MAYIGUALQUE     reduce using rule 36 (final_expression -> ENTERO .)
    IGUALQUE        reduce using rule 36 (final_expression -> ENTERO .)
    NIGUALQUE       reduce using rule 36 (final_expression -> ENTERO .)
    OR              reduce using rule 36 (final_expression -> ENTERO .)
    AND             reduce using rule 36 (final_expression -> ENTERO .)
    PTCOMA          reduce using rule 36 (final_expression -> ENTERO .)
    PRINT           reduce using rule 36 (final_expression -> ENTERO .)
    PRINTLN         reduce using rule 36 (final_expression -> ENTERO .)
    LOCAL           reduce using rule 36 (final_expression -> ENTERO .)
    GLOBAL          reduce using rule 36 (final_expression -> ENTERO .)
    ID              reduce using rule 36 (final_expression -> ENTERO .)
    FUNCTION        reduce using rule 36 (final_expression -> ENTERO .)
    RETURN          reduce using rule 36 (final_expression -> ENTERO .)
    BREAK           reduce using rule 36 (final_expression -> ENTERO .)
    CONTINUE        reduce using rule 36 (final_expression -> ENTERO .)
    IF              reduce using rule 36 (final_expression -> ENTERO .)
    WHILE           reduce using rule 36 (final_expression -> ENTERO .)
    FOR             reduce using rule 36 (final_expression -> ENTERO .)
    PARDER          reduce using rule 36 (final_expression -> ENTERO .)
    COMA            reduce using rule 36 (final_expression -> ENTERO .)
    DOSP            reduce using rule 36 (final_expression -> ENTERO .)


state 57

    (37) final_expression -> CADENA .

    MAS             reduce using rule 37 (final_expression -> CADENA .)
    MENOS           reduce using rule 37 (final_expression -> CADENA .)
    POR             reduce using rule 37 (final_expression -> CADENA .)
    DIVIDIDO        reduce using rule 37 (final_expression -> CADENA .)
    POTENCIA        reduce using rule 37 (final_expression -> CADENA .)
    MODULO          reduce using rule 37 (final_expression -> CADENA .)
    MAYQUE          reduce using rule 37 (final_expression -> CADENA .)
    MENQUE          reduce using rule 37 (final_expression -> CADENA .)
    MENIGUALQUE     reduce using rule 37 (final_expression -> CADENA .)
    MAYIGUALQUE     reduce using rule 37 (final_expression -> CADENA .)
    IGUALQUE        reduce using rule 37 (final_expression -> CADENA .)
    NIGUALQUE       reduce using rule 37 (final_expression -> CADENA .)
    OR              reduce using rule 37 (final_expression -> CADENA .)
    AND             reduce using rule 37 (final_expression -> CADENA .)
    PTCOMA          reduce using rule 37 (final_expression -> CADENA .)
    PRINT           reduce using rule 37 (final_expression -> CADENA .)
    PRINTLN         reduce using rule 37 (final_expression -> CADENA .)
    LOCAL           reduce using rule 37 (final_expression -> CADENA .)
    GLOBAL          reduce using rule 37 (final_expression -> CADENA .)
    ID              reduce using rule 37 (final_expression -> CADENA .)
    FUNCTION        reduce using rule 37 (final_expression -> CADENA .)
    RETURN          reduce using rule 37 (final_expression -> CADENA .)
    BREAK           reduce using rule 37 (final_expression -> CADENA .)
    CONTINUE        reduce using rule 37 (final_expression -> CADENA .)
    IF              reduce using rule 37 (final_expression -> CADENA .)
    WHILE           reduce using rule 37 (final_expression -> CADENA .)
    FOR             reduce using rule 37 (final_expression -> CADENA .)
    PARDER          reduce using rule 37 (final_expression -> CADENA .)
    COMA            reduce using rule 37 (final_expression -> CADENA .)
    DOSP            reduce using rule 37 (final_expression -> CADENA .)


state 58

    (38) final_expression -> CARACTER .

    MAS             reduce using rule 38 (final_expression -> CARACTER .)
    MENOS           reduce using rule 38 (final_expression -> CARACTER .)
    POR             reduce using rule 38 (final_expression -> CARACTER .)
    DIVIDIDO        reduce using rule 38 (final_expression -> CARACTER .)
    POTENCIA        reduce using rule 38 (final_expression -> CARACTER .)
    MODULO          reduce using rule 38 (final_expression -> CARACTER .)
    MAYQUE          reduce using rule 38 (final_expression -> CARACTER .)
    MENQUE          reduce using rule 38 (final_expression -> CARACTER .)
    MENIGUALQUE     reduce using rule 38 (final_expression -> CARACTER .)
    MAYIGUALQUE     reduce using rule 38 (final_expression -> CARACTER .)
    IGUALQUE        reduce using rule 38 (final_expression -> CARACTER .)
    NIGUALQUE       reduce using rule 38 (final_expression -> CARACTER .)
    OR              reduce using rule 38 (final_expression -> CARACTER .)
    AND             reduce using rule 38 (final_expression -> CARACTER .)
    PTCOMA          reduce using rule 38 (final_expression -> CARACTER .)
    PRINT           reduce using rule 38 (final_expression -> CARACTER .)
    PRINTLN         reduce using rule 38 (final_expression -> CARACTER .)
    LOCAL           reduce using rule 38 (final_expression -> CARACTER .)
    GLOBAL          reduce using rule 38 (final_expression -> CARACTER .)
    ID              reduce using rule 38 (final_expression -> CARACTER .)
    FUNCTION        reduce using rule 38 (final_expression -> CARACTER .)
    RETURN          reduce using rule 38 (final_expression -> CARACTER .)
    BREAK           reduce using rule 38 (final_expression -> CARACTER .)
    CONTINUE        reduce using rule 38 (final_expression -> CARACTER .)
    IF              reduce using rule 38 (final_expression -> CARACTER .)
    WHILE           reduce using rule 38 (final_expression -> CARACTER .)
    FOR             reduce using rule 38 (final_expression -> CARACTER .)
    PARDER          reduce using rule 38 (final_expression -> CARACTER .)
    COMA            reduce using rule 38 (final_expression -> CARACTER .)
    DOSP            reduce using rule 38 (final_expression -> CARACTER .)


state 59

    (39) final_expression -> ID .
    (72) call_function -> ID . PARIZQ PARDER
    (73) call_function -> ID . PARIZQ exp_list PARDER

    MAS             reduce using rule 39 (final_expression -> ID .)
    MENOS           reduce using rule 39 (final_expression -> ID .)
    POR             reduce using rule 39 (final_expression -> ID .)
    DIVIDIDO        reduce using rule 39 (final_expression -> ID .)
    POTENCIA        reduce using rule 39 (final_expression -> ID .)
    MODULO          reduce using rule 39 (final_expression -> ID .)
    MAYQUE          reduce using rule 39 (final_expression -> ID .)
    MENQUE          reduce using rule 39 (final_expression -> ID .)
    MENIGUALQUE     reduce using rule 39 (final_expression -> ID .)
    MAYIGUALQUE     reduce using rule 39 (final_expression -> ID .)
    IGUALQUE        reduce using rule 39 (final_expression -> ID .)
    NIGUALQUE       reduce using rule 39 (final_expression -> ID .)
    OR              reduce using rule 39 (final_expression -> ID .)
    AND             reduce using rule 39 (final_expression -> ID .)
    PTCOMA          reduce using rule 39 (final_expression -> ID .)
    PRINT           reduce using rule 39 (final_expression -> ID .)
    PRINTLN         reduce using rule 39 (final_expression -> ID .)
    LOCAL           reduce using rule 39 (final_expression -> ID .)
    GLOBAL          reduce using rule 39 (final_expression -> ID .)
    ID              reduce using rule 39 (final_expression -> ID .)
    FUNCTION        reduce using rule 39 (final_expression -> ID .)
    RETURN          reduce using rule 39 (final_expression -> ID .)
    BREAK           reduce using rule 39 (final_expression -> ID .)
    CONTINUE        reduce using rule 39 (final_expression -> ID .)
    IF              reduce using rule 39 (final_expression -> ID .)
    WHILE           reduce using rule 39 (final_expression -> ID .)
    FOR             reduce using rule 39 (final_expression -> ID .)
    PARDER          reduce using rule 39 (final_expression -> ID .)
    COMA            reduce using rule 39 (final_expression -> ID .)
    DOSP            reduce using rule 39 (final_expression -> ID .)
    PARIZQ          shift and go to state 47


state 60

    (40) final_expression -> TRUE .

    MAS             reduce using rule 40 (final_expression -> TRUE .)
    MENOS           reduce using rule 40 (final_expression -> TRUE .)
    POR             reduce using rule 40 (final_expression -> TRUE .)
    DIVIDIDO        reduce using rule 40 (final_expression -> TRUE .)
    POTENCIA        reduce using rule 40 (final_expression -> TRUE .)
    MODULO          reduce using rule 40 (final_expression -> TRUE .)
    MAYQUE          reduce using rule 40 (final_expression -> TRUE .)
    MENQUE          reduce using rule 40 (final_expression -> TRUE .)
    MENIGUALQUE     reduce using rule 40 (final_expression -> TRUE .)
    MAYIGUALQUE     reduce using rule 40 (final_expression -> TRUE .)
    IGUALQUE        reduce using rule 40 (final_expression -> TRUE .)
    NIGUALQUE       reduce using rule 40 (final_expression -> TRUE .)
    OR              reduce using rule 40 (final_expression -> TRUE .)
    AND             reduce using rule 40 (final_expression -> TRUE .)
    PTCOMA          reduce using rule 40 (final_expression -> TRUE .)
    PRINT           reduce using rule 40 (final_expression -> TRUE .)
    PRINTLN         reduce using rule 40 (final_expression -> TRUE .)
    LOCAL           reduce using rule 40 (final_expression -> TRUE .)
    GLOBAL          reduce using rule 40 (final_expression -> TRUE .)
    ID              reduce using rule 40 (final_expression -> TRUE .)
    FUNCTION        reduce using rule 40 (final_expression -> TRUE .)
    RETURN          reduce using rule 40 (final_expression -> TRUE .)
    BREAK           reduce using rule 40 (final_expression -> TRUE .)
    CONTINUE        reduce using rule 40 (final_expression -> TRUE .)
    IF              reduce using rule 40 (final_expression -> TRUE .)
    WHILE           reduce using rule 40 (final_expression -> TRUE .)
    FOR             reduce using rule 40 (final_expression -> TRUE .)
    PARDER          reduce using rule 40 (final_expression -> TRUE .)
    COMA            reduce using rule 40 (final_expression -> TRUE .)
    DOSP            reduce using rule 40 (final_expression -> TRUE .)


state 61

    (41) final_expression -> FALSE .

    MAS             reduce using rule 41 (final_expression -> FALSE .)
    MENOS           reduce using rule 41 (final_expression -> FALSE .)
    POR             reduce using rule 41 (final_expression -> FALSE .)
    DIVIDIDO        reduce using rule 41 (final_expression -> FALSE .)
    POTENCIA        reduce using rule 41 (final_expression -> FALSE .)
    MODULO          reduce using rule 41 (final_expression -> FALSE .)
    MAYQUE          reduce using rule 41 (final_expression -> FALSE .)
    MENQUE          reduce using rule 41 (final_expression -> FALSE .)
    MENIGUALQUE     reduce using rule 41 (final_expression -> FALSE .)
    MAYIGUALQUE     reduce using rule 41 (final_expression -> FALSE .)
    IGUALQUE        reduce using rule 41 (final_expression -> FALSE .)
    NIGUALQUE       reduce using rule 41 (final_expression -> FALSE .)
    OR              reduce using rule 41 (final_expression -> FALSE .)
    AND             reduce using rule 41 (final_expression -> FALSE .)
    PTCOMA          reduce using rule 41 (final_expression -> FALSE .)
    PRINT           reduce using rule 41 (final_expression -> FALSE .)
    PRINTLN         reduce using rule 41 (final_expression -> FALSE .)
    LOCAL           reduce using rule 41 (final_expression -> FALSE .)
    GLOBAL          reduce using rule 41 (final_expression -> FALSE .)
    ID              reduce using rule 41 (final_expression -> FALSE .)
    FUNCTION        reduce using rule 41 (final_expression -> FALSE .)
    RETURN          reduce using rule 41 (final_expression -> FALSE .)
    BREAK           reduce using rule 41 (final_expression -> FALSE .)
    CONTINUE        reduce using rule 41 (final_expression -> FALSE .)
    IF              reduce using rule 41 (final_expression -> FALSE .)
    WHILE           reduce using rule 41 (final_expression -> FALSE .)
    FOR             reduce using rule 41 (final_expression -> FALSE .)
    PARDER          reduce using rule 41 (final_expression -> FALSE .)
    COMA            reduce using rule 41 (final_expression -> FALSE .)
    DOSP            reduce using rule 41 (final_expression -> FALSE .)


state 62

    (42) final_expression -> call_function .

    MAS             reduce using rule 42 (final_expression -> call_function .)
    MENOS           reduce using rule 42 (final_expression -> call_function .)
    POR             reduce using rule 42 (final_expression -> call_function .)
    DIVIDIDO        reduce using rule 42 (final_expression -> call_function .)
    POTENCIA        reduce using rule 42 (final_expression -> call_function .)
    MODULO          reduce using rule 42 (final_expression -> call_function .)
    MAYQUE          reduce using rule 42 (final_expression -> call_function .)
    MENQUE          reduce using rule 42 (final_expression -> call_function .)
    MENIGUALQUE     reduce using rule 42 (final_expression -> call_function .)
    MAYIGUALQUE     reduce using rule 42 (final_expression -> call_function .)
    IGUALQUE        reduce using rule 42 (final_expression -> call_function .)
    NIGUALQUE       reduce using rule 42 (final_expression -> call_function .)
    OR              reduce using rule 42 (final_expression -> call_function .)
    AND             reduce using rule 42 (final_expression -> call_function .)
    PTCOMA          reduce using rule 42 (final_expression -> call_function .)
    PRINT           reduce using rule 42 (final_expression -> call_function .)
    PRINTLN         reduce using rule 42 (final_expression -> call_function .)
    LOCAL           reduce using rule 42 (final_expression -> call_function .)
    GLOBAL          reduce using rule 42 (final_expression -> call_function .)
    ID              reduce using rule 42 (final_expression -> call_function .)
    FUNCTION        reduce using rule 42 (final_expression -> call_function .)
    RETURN          reduce using rule 42 (final_expression -> call_function .)
    BREAK           reduce using rule 42 (final_expression -> call_function .)
    CONTINUE        reduce using rule 42 (final_expression -> call_function .)
    IF              reduce using rule 42 (final_expression -> call_function .)
    WHILE           reduce using rule 42 (final_expression -> call_function .)
    FOR             reduce using rule 42 (final_expression -> call_function .)
    PARDER          reduce using rule 42 (final_expression -> call_function .)
    COMA            reduce using rule 42 (final_expression -> call_function .)
    DOSP            reduce using rule 42 (final_expression -> call_function .)


state 63

    (43) final_expression -> nativas .

    MAS             reduce using rule 43 (final_expression -> nativas .)
    MENOS           reduce using rule 43 (final_expression -> nativas .)
    POR             reduce using rule 43 (final_expression -> nativas .)
    DIVIDIDO        reduce using rule 43 (final_expression -> nativas .)
    POTENCIA        reduce using rule 43 (final_expression -> nativas .)
    MODULO          reduce using rule 43 (final_expression -> nativas .)
    MAYQUE          reduce using rule 43 (final_expression -> nativas .)
    MENQUE          reduce using rule 43 (final_expression -> nativas .)
    MENIGUALQUE     reduce using rule 43 (final_expression -> nativas .)
    MAYIGUALQUE     reduce using rule 43 (final_expression -> nativas .)
    IGUALQUE        reduce using rule 43 (final_expression -> nativas .)
    NIGUALQUE       reduce using rule 43 (final_expression -> nativas .)
    OR              reduce using rule 43 (final_expression -> nativas .)
    AND             reduce using rule 43 (final_expression -> nativas .)
    PTCOMA          reduce using rule 43 (final_expression -> nativas .)
    PRINT           reduce using rule 43 (final_expression -> nativas .)
    PRINTLN         reduce using rule 43 (final_expression -> nativas .)
    LOCAL           reduce using rule 43 (final_expression -> nativas .)
    GLOBAL          reduce using rule 43 (final_expression -> nativas .)
    ID              reduce using rule 43 (final_expression -> nativas .)
    FUNCTION        reduce using rule 43 (final_expression -> nativas .)
    RETURN          reduce using rule 43 (final_expression -> nativas .)
    BREAK           reduce using rule 43 (final_expression -> nativas .)
    CONTINUE        reduce using rule 43 (final_expression -> nativas .)
    IF              reduce using rule 43 (final_expression -> nativas .)
    WHILE           reduce using rule 43 (final_expression -> nativas .)
    FOR             reduce using rule 43 (final_expression -> nativas .)
    PARDER          reduce using rule 43 (final_expression -> nativas .)
    COMA            reduce using rule 43 (final_expression -> nativas .)
    DOSP            reduce using rule 43 (final_expression -> nativas .)


state 64

    (44) nativas -> LOG . PARIZQ ENTERO COMA expression PARDER

    PARIZQ          shift and go to state 106


state 65

    (45) nativas -> LOG10 . PARIZQ expression PARDER

    PARIZQ          shift and go to state 107


state 66

    (46) nativas -> COS . PARIZQ expression PARDER

    PARIZQ          shift and go to state 108


state 67

    (47) nativas -> SIN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 109


state 68

    (48) nativas -> TAN . PARIZQ expression PARDER

    PARIZQ          shift and go to state 110


state 69

    (49) nativas -> SQRT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 111


state 70

    (50) nativas -> UPPERCASE . PARIZQ expression PARDER

    PARIZQ          shift and go to state 112


state 71

    (51) nativas -> LOWERCASE . PARIZQ expression PARDER

    PARIZQ          shift and go to state 113


state 72

    (52) nativas -> TOSTRING . PARIZQ expression PARDER

    PARIZQ          shift and go to state 114


state 73

    (53) nativas -> TOFLOAT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 115


state 74

    (54) nativas -> TRUNC . PARIZQ INT COMA expression PARDER

    PARIZQ          shift and go to state 116


state 75

    (55) nativas -> TYPEOF . PARIZQ expression PARDER

    PARIZQ          shift and go to state 117


state 76

    (56) nativas -> PARSE . PARIZQ tipo COMA expression PARDER

    PARIZQ          shift and go to state 118


state 77

    (81) if_state -> IF expression . statement END
    (82) if_state -> IF expression . statement ELSE statement END
    (83) if_state -> IF expression . statement else_if_list END
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102
    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 119
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 78

    (87) while_state -> WHILE expression . statement END
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102
    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 121
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 79

    (88) for_state -> FOR ID . IN expression DOSP expression statement END
    (89) for_state -> FOR ID . IN expression statement END

    IN              shift and go to state 122


state 80

    (57) print_instr -> PRINT PARIZQ exp_list . PARDER
    (74) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 123
    COMA            shift and go to state 124


state 81

    (75) exp_list -> expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          reduce using rule 75 (exp_list -> expression .)
    COMA            reduce using rule 75 (exp_list -> expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 82

    (58) println_instr -> PRINTLN PARIZQ exp_list . PARDER
    (74) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 125
    COMA            shift and go to state 124


state 83

    (67) asignacion_instr -> LOCAL ID IGUAL . expression
    (70) definicion_asignacion_instr -> LOCAL ID IGUAL . expression DOSP DOSP tipo
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 126
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 84

    (66) asignacion_instr -> ID IGUAL expression .
    (69) definicion_asignacion_instr -> ID IGUAL expression . DOSP DOSP tipo
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PTCOMA          reduce using rule 66 (asignacion_instr -> ID IGUAL expression .)
    DOSP            shift and go to state 127
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 85

    (72) call_function -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    MAS             reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    POR             reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    MENIGUALQUE     reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    MAYIGUALQUE     reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    OR              reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    AND             reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    PRINT           reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    PRINTLN         reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    LOCAL           reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    GLOBAL          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    ID              reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    FUNCTION        reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    IF              reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    FOR             reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    COMA            reduce using rule 72 (call_function -> ID PARIZQ PARDER .)
    DOSP            reduce using rule 72 (call_function -> ID PARIZQ PARDER .)


state 86

    (73) call_function -> ID PARIZQ exp_list . PARDER
    (74) exp_list -> exp_list . COMA expression

    PARDER          shift and go to state 128
    COMA            shift and go to state 124


state 87

    (68) asignacion_instr -> GLOBAL ID IGUAL . expression
    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL . expression DOSP DOSP tipo
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 129
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 88

    (77) declare_function -> FUNCTION ID PARIZQ . PARDER statement END
    (78) declare_function -> FUNCTION ID PARIZQ . dec_params PARDER statement END
    (79) dec_params -> . dec_params COMA ID
    (80) dec_params -> . ID

    PARDER          shift and go to state 131
    ID              shift and go to state 130

    dec_params                     shift and go to state 132

state 89

    (19) expression -> expression MAS . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 133
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 90

    (20) expression -> expression MENOS . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 134
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 91

    (21) expression -> expression POR . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 135
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 92

    (22) expression -> expression DIVIDIDO . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 136
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 93

    (23) expression -> expression POTENCIA . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 137
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 94

    (24) expression -> expression MODULO . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 138
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 95

    (25) expression -> expression MAYQUE . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 139
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 96

    (26) expression -> expression MENQUE . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 140
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 97

    (27) expression -> expression MENIGUALQUE . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 141
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 98

    (28) expression -> expression MAYIGUALQUE . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 142
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 99

    (29) expression -> expression IGUALQUE . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 143
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 100

    (30) expression -> expression NIGUALQUE . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 144
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 101

    (31) expression -> expression OR . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 145
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 102

    (32) expression -> expression AND . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 146
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 103

    (17) expression -> MENOS expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 17 (expression -> MENOS expression .)
    MENOS           reduce using rule 17 (expression -> MENOS expression .)
    POR             reduce using rule 17 (expression -> MENOS expression .)
    DIVIDIDO        reduce using rule 17 (expression -> MENOS expression .)
    POTENCIA        reduce using rule 17 (expression -> MENOS expression .)
    MODULO          reduce using rule 17 (expression -> MENOS expression .)
    MAYQUE          reduce using rule 17 (expression -> MENOS expression .)
    MENQUE          reduce using rule 17 (expression -> MENOS expression .)
    MENIGUALQUE     reduce using rule 17 (expression -> MENOS expression .)
    MAYIGUALQUE     reduce using rule 17 (expression -> MENOS expression .)
    IGUALQUE        reduce using rule 17 (expression -> MENOS expression .)
    NIGUALQUE       reduce using rule 17 (expression -> MENOS expression .)
    OR              reduce using rule 17 (expression -> MENOS expression .)
    AND             reduce using rule 17 (expression -> MENOS expression .)
    PTCOMA          reduce using rule 17 (expression -> MENOS expression .)
    PRINT           reduce using rule 17 (expression -> MENOS expression .)
    PRINTLN         reduce using rule 17 (expression -> MENOS expression .)
    LOCAL           reduce using rule 17 (expression -> MENOS expression .)
    GLOBAL          reduce using rule 17 (expression -> MENOS expression .)
    ID              reduce using rule 17 (expression -> MENOS expression .)
    FUNCTION        reduce using rule 17 (expression -> MENOS expression .)
    RETURN          reduce using rule 17 (expression -> MENOS expression .)
    BREAK           reduce using rule 17 (expression -> MENOS expression .)
    CONTINUE        reduce using rule 17 (expression -> MENOS expression .)
    IF              reduce using rule 17 (expression -> MENOS expression .)
    WHILE           reduce using rule 17 (expression -> MENOS expression .)
    FOR             reduce using rule 17 (expression -> MENOS expression .)
    PARDER          reduce using rule 17 (expression -> MENOS expression .)
    COMA            reduce using rule 17 (expression -> MENOS expression .)
    DOSP            reduce using rule 17 (expression -> MENOS expression .)

  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! POR             [ shift and go to state 91 ]
  ! DIVIDIDO        [ shift and go to state 92 ]
  ! POTENCIA        [ shift and go to state 93 ]
  ! MODULO          [ shift and go to state 94 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 104

    (18) expression -> NOT expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 18 (expression -> NOT expression .)
    MENOS           reduce using rule 18 (expression -> NOT expression .)
    POR             reduce using rule 18 (expression -> NOT expression .)
    DIVIDIDO        reduce using rule 18 (expression -> NOT expression .)
    POTENCIA        reduce using rule 18 (expression -> NOT expression .)
    MODULO          reduce using rule 18 (expression -> NOT expression .)
    MAYQUE          reduce using rule 18 (expression -> NOT expression .)
    MENQUE          reduce using rule 18 (expression -> NOT expression .)
    MENIGUALQUE     reduce using rule 18 (expression -> NOT expression .)
    MAYIGUALQUE     reduce using rule 18 (expression -> NOT expression .)
    IGUALQUE        reduce using rule 18 (expression -> NOT expression .)
    NIGUALQUE       reduce using rule 18 (expression -> NOT expression .)
    OR              reduce using rule 18 (expression -> NOT expression .)
    AND             reduce using rule 18 (expression -> NOT expression .)
    PTCOMA          reduce using rule 18 (expression -> NOT expression .)
    PRINT           reduce using rule 18 (expression -> NOT expression .)
    PRINTLN         reduce using rule 18 (expression -> NOT expression .)
    LOCAL           reduce using rule 18 (expression -> NOT expression .)
    GLOBAL          reduce using rule 18 (expression -> NOT expression .)
    ID              reduce using rule 18 (expression -> NOT expression .)
    FUNCTION        reduce using rule 18 (expression -> NOT expression .)
    RETURN          reduce using rule 18 (expression -> NOT expression .)
    BREAK           reduce using rule 18 (expression -> NOT expression .)
    CONTINUE        reduce using rule 18 (expression -> NOT expression .)
    IF              reduce using rule 18 (expression -> NOT expression .)
    WHILE           reduce using rule 18 (expression -> NOT expression .)
    FOR             reduce using rule 18 (expression -> NOT expression .)
    PARDER          reduce using rule 18 (expression -> NOT expression .)
    COMA            reduce using rule 18 (expression -> NOT expression .)
    DOSP            reduce using rule 18 (expression -> NOT expression .)

  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! POR             [ shift and go to state 91 ]
  ! DIVIDIDO        [ shift and go to state 92 ]
  ! POTENCIA        [ shift and go to state 93 ]
  ! MODULO          [ shift and go to state 94 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 105

    (34) final_expression -> PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 147
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 106

    (44) nativas -> LOG PARIZQ . ENTERO COMA expression PARDER

    ENTERO          shift and go to state 148


state 107

    (45) nativas -> LOG10 PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 149
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 108

    (46) nativas -> COS PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 150
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 109

    (47) nativas -> SIN PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 151
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 110

    (48) nativas -> TAN PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 152
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 111

    (49) nativas -> SQRT PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 153
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 112

    (50) nativas -> UPPERCASE PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 154
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 113

    (51) nativas -> LOWERCASE PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 155
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 114

    (52) nativas -> TOSTRING PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 156
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 115

    (53) nativas -> TOFLOAT PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 157
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 116

    (54) nativas -> TRUNC PARIZQ . INT COMA expression PARDER

    INT             shift and go to state 158


state 117

    (55) nativas -> TYPEOF PARIZQ . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 159
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 118

    (56) nativas -> PARSE PARIZQ . tipo COMA expression PARDER
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 161
    FLOAT           shift and go to state 162
    BOOL            shift and go to state 163
    CHAR            shift and go to state 164
    STRING          shift and go to state 165

    tipo                           shift and go to state 160

state 119

    (81) if_state -> IF expression statement . END
    (82) if_state -> IF expression statement . ELSE statement END
    (83) if_state -> IF expression statement . else_if_list END
    (84) else_if_list -> . ELSEIF expression statement
    (85) else_if_list -> . ELSEIF expression statement ELSE statement
    (86) else_if_list -> . ELSEIF expression statement else_if_list

    END             shift and go to state 166
    ELSE            shift and go to state 167
    ELSEIF          shift and go to state 169

    else_if_list                   shift and go to state 168

state 120

    (76) statement -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    END             reduce using rule 76 (statement -> instrucciones .)
    ELSE            reduce using rule 76 (statement -> instrucciones .)
    ELSEIF          reduce using rule 76 (statement -> instrucciones .)
    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    instruccion                    shift and go to state 29
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 121

    (87) while_state -> WHILE expression statement . END

    END             shift and go to state 170


state 122

    (88) for_state -> FOR ID IN . expression DOSP expression statement END
    (89) for_state -> FOR ID IN . expression statement END
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 171
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 123

    (57) print_instr -> PRINT PARIZQ exp_list PARDER .

    PTCOMA          reduce using rule 57 (print_instr -> PRINT PARIZQ exp_list PARDER .)


state 124

    (74) exp_list -> exp_list COMA . expression
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 172
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 125

    (58) println_instr -> PRINTLN PARIZQ exp_list PARDER .

    PTCOMA          reduce using rule 58 (println_instr -> PRINTLN PARIZQ exp_list PARDER .)


state 126

    (67) asignacion_instr -> LOCAL ID IGUAL expression .
    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression . DOSP DOSP tipo
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PTCOMA          reduce using rule 67 (asignacion_instr -> LOCAL ID IGUAL expression .)
    DOSP            shift and go to state 173
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 127

    (69) definicion_asignacion_instr -> ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 174


state 128

    (73) call_function -> ID PARIZQ exp_list PARDER .

    PTCOMA          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    MAS             reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    MENOS           reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    POR             reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    DIVIDIDO        reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    POTENCIA        reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    MODULO          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    MAYQUE          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    MENQUE          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    MENIGUALQUE     reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    MAYIGUALQUE     reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    IGUALQUE        reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    NIGUALQUE       reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    OR              reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    AND             reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    PRINT           reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    PRINTLN         reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    LOCAL           reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    GLOBAL          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    ID              reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    FUNCTION        reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    RETURN          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    BREAK           reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    CONTINUE        reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    IF              reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    WHILE           reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    FOR             reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    PARDER          reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    COMA            reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)
    DOSP            reduce using rule 73 (call_function -> ID PARIZQ exp_list PARDER .)


state 129

    (68) asignacion_instr -> GLOBAL ID IGUAL expression .
    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression . DOSP DOSP tipo
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PTCOMA          reduce using rule 68 (asignacion_instr -> GLOBAL ID IGUAL expression .)
    DOSP            shift and go to state 175
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 130

    (80) dec_params -> ID .

    PARDER          reduce using rule 80 (dec_params -> ID .)
    COMA            reduce using rule 80 (dec_params -> ID .)


state 131

    (77) declare_function -> FUNCTION ID PARIZQ PARDER . statement END
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 176
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 132

    (78) declare_function -> FUNCTION ID PARIZQ dec_params . PARDER statement END
    (79) dec_params -> dec_params . COMA ID

    PARDER          shift and go to state 177
    COMA            shift and go to state 178


state 133

    (19) expression -> expression MAS expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 19 (expression -> expression MAS expression .)
    MENOS           reduce using rule 19 (expression -> expression MAS expression .)
    MAYQUE          reduce using rule 19 (expression -> expression MAS expression .)
    MENQUE          reduce using rule 19 (expression -> expression MAS expression .)
    MENIGUALQUE     reduce using rule 19 (expression -> expression MAS expression .)
    MAYIGUALQUE     reduce using rule 19 (expression -> expression MAS expression .)
    IGUALQUE        reduce using rule 19 (expression -> expression MAS expression .)
    NIGUALQUE       reduce using rule 19 (expression -> expression MAS expression .)
    OR              reduce using rule 19 (expression -> expression MAS expression .)
    AND             reduce using rule 19 (expression -> expression MAS expression .)
    PTCOMA          reduce using rule 19 (expression -> expression MAS expression .)
    PRINT           reduce using rule 19 (expression -> expression MAS expression .)
    PRINTLN         reduce using rule 19 (expression -> expression MAS expression .)
    LOCAL           reduce using rule 19 (expression -> expression MAS expression .)
    GLOBAL          reduce using rule 19 (expression -> expression MAS expression .)
    ID              reduce using rule 19 (expression -> expression MAS expression .)
    FUNCTION        reduce using rule 19 (expression -> expression MAS expression .)
    RETURN          reduce using rule 19 (expression -> expression MAS expression .)
    BREAK           reduce using rule 19 (expression -> expression MAS expression .)
    CONTINUE        reduce using rule 19 (expression -> expression MAS expression .)
    IF              reduce using rule 19 (expression -> expression MAS expression .)
    WHILE           reduce using rule 19 (expression -> expression MAS expression .)
    FOR             reduce using rule 19 (expression -> expression MAS expression .)
    PARDER          reduce using rule 19 (expression -> expression MAS expression .)
    COMA            reduce using rule 19 (expression -> expression MAS expression .)
    DOSP            reduce using rule 19 (expression -> expression MAS expression .)
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94

  ! POR             [ reduce using rule 19 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 19 (expression -> expression MAS expression .) ]
  ! POTENCIA        [ reduce using rule 19 (expression -> expression MAS expression .) ]
  ! MODULO          [ reduce using rule 19 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 134

    (20) expression -> expression MENOS expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 20 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 20 (expression -> expression MENOS expression .)
    MAYQUE          reduce using rule 20 (expression -> expression MENOS expression .)
    MENQUE          reduce using rule 20 (expression -> expression MENOS expression .)
    MENIGUALQUE     reduce using rule 20 (expression -> expression MENOS expression .)
    MAYIGUALQUE     reduce using rule 20 (expression -> expression MENOS expression .)
    IGUALQUE        reduce using rule 20 (expression -> expression MENOS expression .)
    NIGUALQUE       reduce using rule 20 (expression -> expression MENOS expression .)
    OR              reduce using rule 20 (expression -> expression MENOS expression .)
    AND             reduce using rule 20 (expression -> expression MENOS expression .)
    PTCOMA          reduce using rule 20 (expression -> expression MENOS expression .)
    PRINT           reduce using rule 20 (expression -> expression MENOS expression .)
    PRINTLN         reduce using rule 20 (expression -> expression MENOS expression .)
    LOCAL           reduce using rule 20 (expression -> expression MENOS expression .)
    GLOBAL          reduce using rule 20 (expression -> expression MENOS expression .)
    ID              reduce using rule 20 (expression -> expression MENOS expression .)
    FUNCTION        reduce using rule 20 (expression -> expression MENOS expression .)
    RETURN          reduce using rule 20 (expression -> expression MENOS expression .)
    BREAK           reduce using rule 20 (expression -> expression MENOS expression .)
    CONTINUE        reduce using rule 20 (expression -> expression MENOS expression .)
    IF              reduce using rule 20 (expression -> expression MENOS expression .)
    WHILE           reduce using rule 20 (expression -> expression MENOS expression .)
    FOR             reduce using rule 20 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 20 (expression -> expression MENOS expression .)
    COMA            reduce using rule 20 (expression -> expression MENOS expression .)
    DOSP            reduce using rule 20 (expression -> expression MENOS expression .)
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94

  ! POR             [ reduce using rule 20 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 20 (expression -> expression MENOS expression .) ]
  ! POTENCIA        [ reduce using rule 20 (expression -> expression MENOS expression .) ]
  ! MODULO          [ reduce using rule 20 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 135

    (21) expression -> expression POR expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 21 (expression -> expression POR expression .)
    MENOS           reduce using rule 21 (expression -> expression POR expression .)
    POR             reduce using rule 21 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 21 (expression -> expression POR expression .)
    MODULO          reduce using rule 21 (expression -> expression POR expression .)
    MAYQUE          reduce using rule 21 (expression -> expression POR expression .)
    MENQUE          reduce using rule 21 (expression -> expression POR expression .)
    MENIGUALQUE     reduce using rule 21 (expression -> expression POR expression .)
    MAYIGUALQUE     reduce using rule 21 (expression -> expression POR expression .)
    IGUALQUE        reduce using rule 21 (expression -> expression POR expression .)
    NIGUALQUE       reduce using rule 21 (expression -> expression POR expression .)
    OR              reduce using rule 21 (expression -> expression POR expression .)
    AND             reduce using rule 21 (expression -> expression POR expression .)
    PTCOMA          reduce using rule 21 (expression -> expression POR expression .)
    PRINT           reduce using rule 21 (expression -> expression POR expression .)
    PRINTLN         reduce using rule 21 (expression -> expression POR expression .)
    LOCAL           reduce using rule 21 (expression -> expression POR expression .)
    GLOBAL          reduce using rule 21 (expression -> expression POR expression .)
    ID              reduce using rule 21 (expression -> expression POR expression .)
    FUNCTION        reduce using rule 21 (expression -> expression POR expression .)
    RETURN          reduce using rule 21 (expression -> expression POR expression .)
    BREAK           reduce using rule 21 (expression -> expression POR expression .)
    CONTINUE        reduce using rule 21 (expression -> expression POR expression .)
    IF              reduce using rule 21 (expression -> expression POR expression .)
    WHILE           reduce using rule 21 (expression -> expression POR expression .)
    FOR             reduce using rule 21 (expression -> expression POR expression .)
    PARDER          reduce using rule 21 (expression -> expression POR expression .)
    COMA            reduce using rule 21 (expression -> expression POR expression .)
    DOSP            reduce using rule 21 (expression -> expression POR expression .)
    POTENCIA        shift and go to state 93

  ! POTENCIA        [ reduce using rule 21 (expression -> expression POR expression .) ]
  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! POR             [ shift and go to state 91 ]
  ! DIVIDIDO        [ shift and go to state 92 ]
  ! MODULO          [ shift and go to state 94 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 136

    (22) expression -> expression DIVIDIDO expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    MODULO          reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    MAYQUE          reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    MENQUE          reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    MENIGUALQUE     reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    MAYIGUALQUE     reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    IGUALQUE        reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    NIGUALQUE       reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    PTCOMA          reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    PRINT           reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    PRINTLN         reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    LOCAL           reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    GLOBAL          reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    ID              reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    FUNCTION        reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    RETURN          reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    BREAK           reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    CONTINUE        reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    IF              reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    WHILE           reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    FOR             reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    DOSP            reduce using rule 22 (expression -> expression DIVIDIDO expression .)
    POTENCIA        shift and go to state 93

  ! POTENCIA        [ reduce using rule 22 (expression -> expression DIVIDIDO expression .) ]
  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! POR             [ shift and go to state 91 ]
  ! DIVIDIDO        [ shift and go to state 92 ]
  ! MODULO          [ shift and go to state 94 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 137

    (23) expression -> expression POTENCIA expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 23 (expression -> expression POTENCIA expression .)
    MENOS           reduce using rule 23 (expression -> expression POTENCIA expression .)
    POR             reduce using rule 23 (expression -> expression POTENCIA expression .)
    DIVIDIDO        reduce using rule 23 (expression -> expression POTENCIA expression .)
    POTENCIA        reduce using rule 23 (expression -> expression POTENCIA expression .)
    MODULO          reduce using rule 23 (expression -> expression POTENCIA expression .)
    MAYQUE          reduce using rule 23 (expression -> expression POTENCIA expression .)
    MENQUE          reduce using rule 23 (expression -> expression POTENCIA expression .)
    MENIGUALQUE     reduce using rule 23 (expression -> expression POTENCIA expression .)
    MAYIGUALQUE     reduce using rule 23 (expression -> expression POTENCIA expression .)
    IGUALQUE        reduce using rule 23 (expression -> expression POTENCIA expression .)
    NIGUALQUE       reduce using rule 23 (expression -> expression POTENCIA expression .)
    OR              reduce using rule 23 (expression -> expression POTENCIA expression .)
    AND             reduce using rule 23 (expression -> expression POTENCIA expression .)
    PTCOMA          reduce using rule 23 (expression -> expression POTENCIA expression .)
    PRINT           reduce using rule 23 (expression -> expression POTENCIA expression .)
    PRINTLN         reduce using rule 23 (expression -> expression POTENCIA expression .)
    LOCAL           reduce using rule 23 (expression -> expression POTENCIA expression .)
    GLOBAL          reduce using rule 23 (expression -> expression POTENCIA expression .)
    ID              reduce using rule 23 (expression -> expression POTENCIA expression .)
    FUNCTION        reduce using rule 23 (expression -> expression POTENCIA expression .)
    RETURN          reduce using rule 23 (expression -> expression POTENCIA expression .)
    BREAK           reduce using rule 23 (expression -> expression POTENCIA expression .)
    CONTINUE        reduce using rule 23 (expression -> expression POTENCIA expression .)
    IF              reduce using rule 23 (expression -> expression POTENCIA expression .)
    WHILE           reduce using rule 23 (expression -> expression POTENCIA expression .)
    FOR             reduce using rule 23 (expression -> expression POTENCIA expression .)
    PARDER          reduce using rule 23 (expression -> expression POTENCIA expression .)
    COMA            reduce using rule 23 (expression -> expression POTENCIA expression .)
    DOSP            reduce using rule 23 (expression -> expression POTENCIA expression .)

  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! POR             [ shift and go to state 91 ]
  ! DIVIDIDO        [ shift and go to state 92 ]
  ! POTENCIA        [ shift and go to state 93 ]
  ! MODULO          [ shift and go to state 94 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 138

    (24) expression -> expression MODULO expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAS             reduce using rule 24 (expression -> expression MODULO expression .)
    MENOS           reduce using rule 24 (expression -> expression MODULO expression .)
    POR             reduce using rule 24 (expression -> expression MODULO expression .)
    DIVIDIDO        reduce using rule 24 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 24 (expression -> expression MODULO expression .)
    MAYQUE          reduce using rule 24 (expression -> expression MODULO expression .)
    MENQUE          reduce using rule 24 (expression -> expression MODULO expression .)
    MENIGUALQUE     reduce using rule 24 (expression -> expression MODULO expression .)
    MAYIGUALQUE     reduce using rule 24 (expression -> expression MODULO expression .)
    IGUALQUE        reduce using rule 24 (expression -> expression MODULO expression .)
    NIGUALQUE       reduce using rule 24 (expression -> expression MODULO expression .)
    OR              reduce using rule 24 (expression -> expression MODULO expression .)
    AND             reduce using rule 24 (expression -> expression MODULO expression .)
    PTCOMA          reduce using rule 24 (expression -> expression MODULO expression .)
    PRINT           reduce using rule 24 (expression -> expression MODULO expression .)
    PRINTLN         reduce using rule 24 (expression -> expression MODULO expression .)
    LOCAL           reduce using rule 24 (expression -> expression MODULO expression .)
    GLOBAL          reduce using rule 24 (expression -> expression MODULO expression .)
    ID              reduce using rule 24 (expression -> expression MODULO expression .)
    FUNCTION        reduce using rule 24 (expression -> expression MODULO expression .)
    RETURN          reduce using rule 24 (expression -> expression MODULO expression .)
    BREAK           reduce using rule 24 (expression -> expression MODULO expression .)
    CONTINUE        reduce using rule 24 (expression -> expression MODULO expression .)
    IF              reduce using rule 24 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 24 (expression -> expression MODULO expression .)
    FOR             reduce using rule 24 (expression -> expression MODULO expression .)
    PARDER          reduce using rule 24 (expression -> expression MODULO expression .)
    COMA            reduce using rule 24 (expression -> expression MODULO expression .)
    DOSP            reduce using rule 24 (expression -> expression MODULO expression .)
    POTENCIA        shift and go to state 93

  ! POTENCIA        [ reduce using rule 24 (expression -> expression MODULO expression .) ]
  ! MAS             [ shift and go to state 89 ]
  ! MENOS           [ shift and go to state 90 ]
  ! POR             [ shift and go to state 91 ]
  ! DIVIDIDO        [ shift and go to state 92 ]
  ! MODULO          [ shift and go to state 94 ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 139

    (25) expression -> expression MAYQUE expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAYQUE          reduce using rule 25 (expression -> expression MAYQUE expression .)
    MENQUE          reduce using rule 25 (expression -> expression MAYQUE expression .)
    MENIGUALQUE     reduce using rule 25 (expression -> expression MAYQUE expression .)
    MAYIGUALQUE     reduce using rule 25 (expression -> expression MAYQUE expression .)
    IGUALQUE        reduce using rule 25 (expression -> expression MAYQUE expression .)
    NIGUALQUE       reduce using rule 25 (expression -> expression MAYQUE expression .)
    OR              reduce using rule 25 (expression -> expression MAYQUE expression .)
    AND             reduce using rule 25 (expression -> expression MAYQUE expression .)
    PTCOMA          reduce using rule 25 (expression -> expression MAYQUE expression .)
    PRINT           reduce using rule 25 (expression -> expression MAYQUE expression .)
    PRINTLN         reduce using rule 25 (expression -> expression MAYQUE expression .)
    LOCAL           reduce using rule 25 (expression -> expression MAYQUE expression .)
    GLOBAL          reduce using rule 25 (expression -> expression MAYQUE expression .)
    ID              reduce using rule 25 (expression -> expression MAYQUE expression .)
    FUNCTION        reduce using rule 25 (expression -> expression MAYQUE expression .)
    RETURN          reduce using rule 25 (expression -> expression MAYQUE expression .)
    BREAK           reduce using rule 25 (expression -> expression MAYQUE expression .)
    CONTINUE        reduce using rule 25 (expression -> expression MAYQUE expression .)
    IF              reduce using rule 25 (expression -> expression MAYQUE expression .)
    WHILE           reduce using rule 25 (expression -> expression MAYQUE expression .)
    FOR             reduce using rule 25 (expression -> expression MAYQUE expression .)
    PARDER          reduce using rule 25 (expression -> expression MAYQUE expression .)
    COMA            reduce using rule 25 (expression -> expression MAYQUE expression .)
    DOSP            reduce using rule 25 (expression -> expression MAYQUE expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94

  ! MAS             [ reduce using rule 25 (expression -> expression MAYQUE expression .) ]
  ! MENOS           [ reduce using rule 25 (expression -> expression MAYQUE expression .) ]
  ! POR             [ reduce using rule 25 (expression -> expression MAYQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expression -> expression MAYQUE expression .) ]
  ! POTENCIA        [ reduce using rule 25 (expression -> expression MAYQUE expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression MAYQUE expression .) ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 140

    (26) expression -> expression MENQUE expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAYQUE          reduce using rule 26 (expression -> expression MENQUE expression .)
    MENQUE          reduce using rule 26 (expression -> expression MENQUE expression .)
    MENIGUALQUE     reduce using rule 26 (expression -> expression MENQUE expression .)
    MAYIGUALQUE     reduce using rule 26 (expression -> expression MENQUE expression .)
    IGUALQUE        reduce using rule 26 (expression -> expression MENQUE expression .)
    NIGUALQUE       reduce using rule 26 (expression -> expression MENQUE expression .)
    OR              reduce using rule 26 (expression -> expression MENQUE expression .)
    AND             reduce using rule 26 (expression -> expression MENQUE expression .)
    PTCOMA          reduce using rule 26 (expression -> expression MENQUE expression .)
    PRINT           reduce using rule 26 (expression -> expression MENQUE expression .)
    PRINTLN         reduce using rule 26 (expression -> expression MENQUE expression .)
    LOCAL           reduce using rule 26 (expression -> expression MENQUE expression .)
    GLOBAL          reduce using rule 26 (expression -> expression MENQUE expression .)
    ID              reduce using rule 26 (expression -> expression MENQUE expression .)
    FUNCTION        reduce using rule 26 (expression -> expression MENQUE expression .)
    RETURN          reduce using rule 26 (expression -> expression MENQUE expression .)
    BREAK           reduce using rule 26 (expression -> expression MENQUE expression .)
    CONTINUE        reduce using rule 26 (expression -> expression MENQUE expression .)
    IF              reduce using rule 26 (expression -> expression MENQUE expression .)
    WHILE           reduce using rule 26 (expression -> expression MENQUE expression .)
    FOR             reduce using rule 26 (expression -> expression MENQUE expression .)
    PARDER          reduce using rule 26 (expression -> expression MENQUE expression .)
    COMA            reduce using rule 26 (expression -> expression MENQUE expression .)
    DOSP            reduce using rule 26 (expression -> expression MENQUE expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94

  ! MAS             [ reduce using rule 26 (expression -> expression MENQUE expression .) ]
  ! MENOS           [ reduce using rule 26 (expression -> expression MENQUE expression .) ]
  ! POR             [ reduce using rule 26 (expression -> expression MENQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expression -> expression MENQUE expression .) ]
  ! POTENCIA        [ reduce using rule 26 (expression -> expression MENQUE expression .) ]
  ! MODULO          [ reduce using rule 26 (expression -> expression MENQUE expression .) ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 141

    (27) expression -> expression MENIGUALQUE expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAYQUE          reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    MENQUE          reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    IGUALQUE        reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    NIGUALQUE       reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    OR              reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    AND             reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    PTCOMA          reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    PRINT           reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    PRINTLN         reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    LOCAL           reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    GLOBAL          reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    ID              reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    FUNCTION        reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    RETURN          reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    BREAK           reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    CONTINUE        reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    IF              reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    WHILE           reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    FOR             reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    PARDER          reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    COMA            reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    DOSP            reduce using rule 27 (expression -> expression MENIGUALQUE expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94

  ! MAS             [ reduce using rule 27 (expression -> expression MENIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 27 (expression -> expression MENIGUALQUE expression .) ]
  ! POR             [ reduce using rule 27 (expression -> expression MENIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 27 (expression -> expression MENIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 27 (expression -> expression MENIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 27 (expression -> expression MENIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 142

    (28) expression -> expression MAYIGUALQUE expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    MAYQUE          reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    MENQUE          reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    MENIGUALQUE     reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    MAYIGUALQUE     reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    IGUALQUE        reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    NIGUALQUE       reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    OR              reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    AND             reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    PTCOMA          reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    PRINT           reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    PRINTLN         reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    LOCAL           reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    GLOBAL          reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    ID              reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    FUNCTION        reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    RETURN          reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    BREAK           reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    CONTINUE        reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    IF              reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    WHILE           reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    FOR             reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    PARDER          reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    COMA            reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    DOSP            reduce using rule 28 (expression -> expression MAYIGUALQUE expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94

  ! MAS             [ reduce using rule 28 (expression -> expression MAYIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 28 (expression -> expression MAYIGUALQUE expression .) ]
  ! POR             [ reduce using rule 28 (expression -> expression MAYIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 28 (expression -> expression MAYIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 28 (expression -> expression MAYIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 28 (expression -> expression MAYIGUALQUE expression .) ]
  ! MAYQUE          [ shift and go to state 95 ]
  ! MENQUE          [ shift and go to state 96 ]
  ! MENIGUALQUE     [ shift and go to state 97 ]
  ! MAYIGUALQUE     [ shift and go to state 98 ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 143

    (29) expression -> expression IGUALQUE expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    IGUALQUE        reduce using rule 29 (expression -> expression IGUALQUE expression .)
    NIGUALQUE       reduce using rule 29 (expression -> expression IGUALQUE expression .)
    OR              reduce using rule 29 (expression -> expression IGUALQUE expression .)
    AND             reduce using rule 29 (expression -> expression IGUALQUE expression .)
    PTCOMA          reduce using rule 29 (expression -> expression IGUALQUE expression .)
    PRINT           reduce using rule 29 (expression -> expression IGUALQUE expression .)
    PRINTLN         reduce using rule 29 (expression -> expression IGUALQUE expression .)
    LOCAL           reduce using rule 29 (expression -> expression IGUALQUE expression .)
    GLOBAL          reduce using rule 29 (expression -> expression IGUALQUE expression .)
    ID              reduce using rule 29 (expression -> expression IGUALQUE expression .)
    FUNCTION        reduce using rule 29 (expression -> expression IGUALQUE expression .)
    RETURN          reduce using rule 29 (expression -> expression IGUALQUE expression .)
    BREAK           reduce using rule 29 (expression -> expression IGUALQUE expression .)
    CONTINUE        reduce using rule 29 (expression -> expression IGUALQUE expression .)
    IF              reduce using rule 29 (expression -> expression IGUALQUE expression .)
    WHILE           reduce using rule 29 (expression -> expression IGUALQUE expression .)
    FOR             reduce using rule 29 (expression -> expression IGUALQUE expression .)
    PARDER          reduce using rule 29 (expression -> expression IGUALQUE expression .)
    COMA            reduce using rule 29 (expression -> expression IGUALQUE expression .)
    DOSP            reduce using rule 29 (expression -> expression IGUALQUE expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98

  ! MAS             [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! POR             [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 29 (expression -> expression IGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 144

    (30) expression -> expression NIGUALQUE expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    IGUALQUE        reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    NIGUALQUE       reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    OR              reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    AND             reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    PTCOMA          reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    PRINT           reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    PRINTLN         reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    LOCAL           reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    GLOBAL          reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    ID              reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    FUNCTION        reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    RETURN          reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    BREAK           reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    CONTINUE        reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    IF              reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    WHILE           reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    FOR             reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    PARDER          reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    COMA            reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    DOSP            reduce using rule 30 (expression -> expression NIGUALQUE expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98

  ! MAS             [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! MENOS           [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! POR             [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! POTENCIA        [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! MODULO          [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! MAYQUE          [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! MENQUE          [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! MENIGUALQUE     [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 30 (expression -> expression NIGUALQUE expression .) ]
  ! IGUALQUE        [ shift and go to state 99 ]
  ! NIGUALQUE       [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 145

    (31) expression -> expression OR expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    OR              reduce using rule 31 (expression -> expression OR expression .)
    PTCOMA          reduce using rule 31 (expression -> expression OR expression .)
    PRINT           reduce using rule 31 (expression -> expression OR expression .)
    PRINTLN         reduce using rule 31 (expression -> expression OR expression .)
    LOCAL           reduce using rule 31 (expression -> expression OR expression .)
    GLOBAL          reduce using rule 31 (expression -> expression OR expression .)
    ID              reduce using rule 31 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 31 (expression -> expression OR expression .)
    RETURN          reduce using rule 31 (expression -> expression OR expression .)
    BREAK           reduce using rule 31 (expression -> expression OR expression .)
    CONTINUE        reduce using rule 31 (expression -> expression OR expression .)
    IF              reduce using rule 31 (expression -> expression OR expression .)
    WHILE           reduce using rule 31 (expression -> expression OR expression .)
    FOR             reduce using rule 31 (expression -> expression OR expression .)
    PARDER          reduce using rule 31 (expression -> expression OR expression .)
    COMA            reduce using rule 31 (expression -> expression OR expression .)
    DOSP            reduce using rule 31 (expression -> expression OR expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    AND             shift and go to state 102

  ! MAS             [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! POTENCIA        [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MAYQUE          [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MENQUE          [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MENIGUALQUE     [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! IGUALQUE        [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! NIGUALQUE       [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 101 ]


state 146

    (32) expression -> expression AND expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    OR              reduce using rule 32 (expression -> expression AND expression .)
    AND             reduce using rule 32 (expression -> expression AND expression .)
    PTCOMA          reduce using rule 32 (expression -> expression AND expression .)
    PRINT           reduce using rule 32 (expression -> expression AND expression .)
    PRINTLN         reduce using rule 32 (expression -> expression AND expression .)
    LOCAL           reduce using rule 32 (expression -> expression AND expression .)
    GLOBAL          reduce using rule 32 (expression -> expression AND expression .)
    ID              reduce using rule 32 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 32 (expression -> expression AND expression .)
    RETURN          reduce using rule 32 (expression -> expression AND expression .)
    BREAK           reduce using rule 32 (expression -> expression AND expression .)
    CONTINUE        reduce using rule 32 (expression -> expression AND expression .)
    IF              reduce using rule 32 (expression -> expression AND expression .)
    WHILE           reduce using rule 32 (expression -> expression AND expression .)
    FOR             reduce using rule 32 (expression -> expression AND expression .)
    PARDER          reduce using rule 32 (expression -> expression AND expression .)
    COMA            reduce using rule 32 (expression -> expression AND expression .)
    DOSP            reduce using rule 32 (expression -> expression AND expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100

  ! MAS             [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! POTENCIA        [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MAYQUE          [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MENQUE          [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MENIGUALQUE     [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MAYIGUALQUE     [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! IGUALQUE        [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! NIGUALQUE       [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 101 ]
  ! AND             [ shift and go to state 102 ]


state 147

    (34) final_expression -> PARIZQ expression PARDER .

    MAS             reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    MODULO          reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    MENQUE          reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    PRINT           reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    LOCAL           reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    ID              reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    RETURN          reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    BREAK           reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    IF              reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    WHILE           reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    FOR             reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)
    DOSP            reduce using rule 34 (final_expression -> PARIZQ expression PARDER .)


state 148

    (44) nativas -> LOG PARIZQ ENTERO . COMA expression PARDER

    COMA            shift and go to state 179


state 149

    (45) nativas -> LOG10 PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 180
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 150

    (46) nativas -> COS PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 181
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 151

    (47) nativas -> SIN PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 182
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 152

    (48) nativas -> TAN PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 183
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 153

    (49) nativas -> SQRT PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 184
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 154

    (50) nativas -> UPPERCASE PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 185
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 155

    (51) nativas -> LOWERCASE PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 186
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 156

    (52) nativas -> TOSTRING PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 187
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 157

    (53) nativas -> TOFLOAT PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 188
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 158

    (54) nativas -> TRUNC PARIZQ INT . COMA expression PARDER

    COMA            shift and go to state 189


state 159

    (55) nativas -> TYPEOF PARIZQ expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 190
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 160

    (56) nativas -> PARSE PARIZQ tipo . COMA expression PARDER

    COMA            shift and go to state 191


state 161

    (59) tipo -> INT .

    COMA            reduce using rule 59 (tipo -> INT .)
    PTCOMA          reduce using rule 59 (tipo -> INT .)


state 162

    (60) tipo -> FLOAT .

    COMA            reduce using rule 60 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 60 (tipo -> FLOAT .)


state 163

    (61) tipo -> BOOL .

    COMA            reduce using rule 61 (tipo -> BOOL .)
    PTCOMA          reduce using rule 61 (tipo -> BOOL .)


state 164

    (62) tipo -> CHAR .

    COMA            reduce using rule 62 (tipo -> CHAR .)
    PTCOMA          reduce using rule 62 (tipo -> CHAR .)


state 165

    (63) tipo -> STRING .

    COMA            reduce using rule 63 (tipo -> STRING .)
    PTCOMA          reduce using rule 63 (tipo -> STRING .)


state 166

    (81) if_state -> IF expression statement END .

    PTCOMA          reduce using rule 81 (if_state -> IF expression statement END .)


state 167

    (82) if_state -> IF expression statement ELSE . statement END
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 192
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 168

    (83) if_state -> IF expression statement else_if_list . END

    END             shift and go to state 193


state 169

    (84) else_if_list -> ELSEIF . expression statement
    (85) else_if_list -> ELSEIF . expression statement ELSE statement
    (86) else_if_list -> ELSEIF . expression statement else_if_list
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 194
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 170

    (87) while_state -> WHILE expression statement END .

    PTCOMA          reduce using rule 87 (while_state -> WHILE expression statement END .)


state 171

    (88) for_state -> FOR ID IN expression . DOSP expression statement END
    (89) for_state -> FOR ID IN expression . statement END
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    DOSP            shift and go to state 195
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102
    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 196
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 172

    (74) exp_list -> exp_list COMA expression .
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          reduce using rule 74 (exp_list -> exp_list COMA expression .)
    COMA            reduce using rule 74 (exp_list -> exp_list COMA expression .)
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 173

    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 197


state 174

    (69) definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP . tipo
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 161
    FLOAT           shift and go to state 162
    BOOL            shift and go to state 163
    CHAR            shift and go to state 164
    STRING          shift and go to state 165

    tipo                           shift and go to state 198

state 175

    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP . DOSP tipo

    DOSP            shift and go to state 199


state 176

    (77) declare_function -> FUNCTION ID PARIZQ PARDER statement . END

    END             shift and go to state 200


state 177

    (78) declare_function -> FUNCTION ID PARIZQ dec_params PARDER . statement END
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 201
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 178

    (79) dec_params -> dec_params COMA . ID

    ID              shift and go to state 202


state 179

    (44) nativas -> LOG PARIZQ ENTERO COMA . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 203
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 180

    (45) nativas -> LOG10 PARIZQ expression PARDER .

    MAS             reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENOS           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    POR             reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MODULO          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENQUE          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    OR              reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    AND             reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PRINT           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    LOCAL           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    ID              reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    RETURN          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    BREAK           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    IF              reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    WHILE           reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    FOR             reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    PARDER          reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    COMA            reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)
    DOSP            reduce using rule 45 (nativas -> LOG10 PARIZQ expression PARDER .)


state 181

    (46) nativas -> COS PARIZQ expression PARDER .

    MAS             reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MENOS           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    POR             reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MODULO          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MENQUE          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    OR              reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    AND             reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PRINT           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    LOCAL           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    ID              reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    RETURN          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    BREAK           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    IF              reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    WHILE           reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    FOR             reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    PARDER          reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    COMA            reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)
    DOSP            reduce using rule 46 (nativas -> COS PARIZQ expression PARDER .)


state 182

    (47) nativas -> SIN PARIZQ expression PARDER .

    MAS             reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MENOS           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    POR             reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MODULO          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MENQUE          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    OR              reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    AND             reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PRINT           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    LOCAL           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    ID              reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    RETURN          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    BREAK           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    IF              reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    WHILE           reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    FOR             reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    PARDER          reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    COMA            reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)
    DOSP            reduce using rule 47 (nativas -> SIN PARIZQ expression PARDER .)


state 183

    (48) nativas -> TAN PARIZQ expression PARDER .

    MAS             reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MENOS           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    POR             reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MODULO          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MENQUE          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    OR              reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    AND             reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PRINT           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    LOCAL           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    ID              reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    RETURN          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    BREAK           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    IF              reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    WHILE           reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    FOR             reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    PARDER          reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    COMA            reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)
    DOSP            reduce using rule 48 (nativas -> TAN PARIZQ expression PARDER .)


state 184

    (49) nativas -> SQRT PARIZQ expression PARDER .

    MAS             reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MENOS           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    POR             reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MODULO          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    OR              reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    AND             reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PRINT           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    LOCAL           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    ID              reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    RETURN          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    BREAK           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    IF              reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    WHILE           reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    FOR             reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    PARDER          reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    COMA            reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)
    DOSP            reduce using rule 49 (nativas -> SQRT PARIZQ expression PARDER .)


state 185

    (50) nativas -> UPPERCASE PARIZQ expression PARDER .

    MAS             reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENOS           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    POR             reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MODULO          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENQUE          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    OR              reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    AND             reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PRINT           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    LOCAL           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    ID              reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    RETURN          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    BREAK           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    IF              reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    WHILE           reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    FOR             reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    PARDER          reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    COMA            reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)
    DOSP            reduce using rule 50 (nativas -> UPPERCASE PARIZQ expression PARDER .)


state 186

    (51) nativas -> LOWERCASE PARIZQ expression PARDER .

    MAS             reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENOS           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    POR             reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MODULO          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENQUE          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    OR              reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    AND             reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PRINT           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    LOCAL           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    ID              reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    RETURN          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    BREAK           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    IF              reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    WHILE           reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    FOR             reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    PARDER          reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    COMA            reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)
    DOSP            reduce using rule 51 (nativas -> LOWERCASE PARIZQ expression PARDER .)


state 187

    (52) nativas -> TOSTRING PARIZQ expression PARDER .

    MAS             reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENOS           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    POR             reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MODULO          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENQUE          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    OR              reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    AND             reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PRINT           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    LOCAL           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    ID              reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    RETURN          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    BREAK           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    IF              reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    WHILE           reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    FOR             reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    PARDER          reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    COMA            reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)
    DOSP            reduce using rule 52 (nativas -> TOSTRING PARIZQ expression PARDER .)


state 188

    (53) nativas -> TOFLOAT PARIZQ expression PARDER .

    MAS             reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENOS           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    POR             reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MODULO          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    OR              reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    AND             reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PRINT           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    LOCAL           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    ID              reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    RETURN          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    BREAK           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    IF              reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    WHILE           reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    FOR             reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    PARDER          reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    COMA            reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)
    DOSP            reduce using rule 53 (nativas -> TOFLOAT PARIZQ expression PARDER .)


state 189

    (54) nativas -> TRUNC PARIZQ INT COMA . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 204
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 190

    (55) nativas -> TYPEOF PARIZQ expression PARDER .

    MAS             reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENOS           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    POR             reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    POTENCIA        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MODULO          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENQUE          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MENIGUALQUE     reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    MAYIGUALQUE     reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    IGUALQUE        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    NIGUALQUE       reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    OR              reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    AND             reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PTCOMA          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PRINT           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PRINTLN         reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    LOCAL           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    GLOBAL          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    ID              reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    FUNCTION        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    RETURN          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    BREAK           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    CONTINUE        reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    IF              reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    WHILE           reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    FOR             reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    PARDER          reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    COMA            reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)
    DOSP            reduce using rule 55 (nativas -> TYPEOF PARIZQ expression PARDER .)


state 191

    (56) nativas -> PARSE PARIZQ tipo COMA . expression PARDER
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 205
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 192

    (82) if_state -> IF expression statement ELSE statement . END

    END             shift and go to state 206


state 193

    (83) if_state -> IF expression statement else_if_list END .

    PTCOMA          reduce using rule 83 (if_state -> IF expression statement else_if_list END .)


state 194

    (84) else_if_list -> ELSEIF expression . statement
    (85) else_if_list -> ELSEIF expression . statement ELSE statement
    (86) else_if_list -> ELSEIF expression . statement else_if_list
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102
    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 207
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 195

    (88) for_state -> FOR ID IN expression DOSP . expression statement END
    (17) expression -> . MENOS expression
    (18) expression -> . NOT expression
    (19) expression -> . expression MAS expression
    (20) expression -> . expression MENOS expression
    (21) expression -> . expression POR expression
    (22) expression -> . expression DIVIDIDO expression
    (23) expression -> . expression POTENCIA expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression MAYQUE expression
    (26) expression -> . expression MENQUE expression
    (27) expression -> . expression MENIGUALQUE expression
    (28) expression -> . expression MAYIGUALQUE expression
    (29) expression -> . expression IGUALQUE expression
    (30) expression -> . expression NIGUALQUE expression
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . final_expression
    (34) final_expression -> . PARIZQ expression PARDER
    (35) final_expression -> . DECIMAL
    (36) final_expression -> . ENTERO
    (37) final_expression -> . CADENA
    (38) final_expression -> . CARACTER
    (39) final_expression -> . ID
    (40) final_expression -> . TRUE
    (41) final_expression -> . FALSE
    (42) final_expression -> . call_function
    (43) final_expression -> . nativas
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (44) nativas -> . LOG PARIZQ ENTERO COMA expression PARDER
    (45) nativas -> . LOG10 PARIZQ expression PARDER
    (46) nativas -> . COS PARIZQ expression PARDER
    (47) nativas -> . SIN PARIZQ expression PARDER
    (48) nativas -> . TAN PARIZQ expression PARDER
    (49) nativas -> . SQRT PARIZQ expression PARDER
    (50) nativas -> . UPPERCASE PARIZQ expression PARDER
    (51) nativas -> . LOWERCASE PARIZQ expression PARDER
    (52) nativas -> . TOSTRING PARIZQ expression PARDER
    (53) nativas -> . TOFLOAT PARIZQ expression PARDER
    (54) nativas -> . TRUNC PARIZQ INT COMA expression PARDER
    (55) nativas -> . TYPEOF PARIZQ expression PARDER
    (56) nativas -> . PARSE PARIZQ tipo COMA expression PARDER

    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 54
    DECIMAL         shift and go to state 55
    ENTERO          shift and go to state 56
    CADENA          shift and go to state 57
    CARACTER        shift and go to state 58
    ID              shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LOG             shift and go to state 64
    LOG10           shift and go to state 65
    COS             shift and go to state 66
    SIN             shift and go to state 67
    TAN             shift and go to state 68
    SQRT            shift and go to state 69
    UPPERCASE       shift and go to state 70
    LOWERCASE       shift and go to state 71
    TOSTRING        shift and go to state 72
    TOFLOAT         shift and go to state 73
    TRUNC           shift and go to state 74
    TYPEOF          shift and go to state 75
    PARSE           shift and go to state 76

    expression                     shift and go to state 208
    final_expression               shift and go to state 53
    call_function                  shift and go to state 62
    nativas                        shift and go to state 63

state 196

    (89) for_state -> FOR ID IN expression statement . END

    END             shift and go to state 209


state 197

    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP . tipo
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 161
    FLOAT           shift and go to state 162
    BOOL            shift and go to state 163
    CHAR            shift and go to state 164
    STRING          shift and go to state 165

    tipo                           shift and go to state 210

state 198

    (69) definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 69 (definicion_asignacion_instr -> ID IGUAL expression DOSP DOSP tipo .)


state 199

    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP . tipo
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . BOOL
    (62) tipo -> . CHAR
    (63) tipo -> . STRING

    INT             shift and go to state 161
    FLOAT           shift and go to state 162
    BOOL            shift and go to state 163
    CHAR            shift and go to state 164
    STRING          shift and go to state 165

    tipo                           shift and go to state 211

state 200

    (77) declare_function -> FUNCTION ID PARIZQ PARDER statement END .

    PTCOMA          reduce using rule 77 (declare_function -> FUNCTION ID PARIZQ PARDER statement END .)


state 201

    (78) declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement . END

    END             shift and go to state 212


state 202

    (79) dec_params -> dec_params COMA ID .

    PARDER          reduce using rule 79 (dec_params -> dec_params COMA ID .)
    COMA            reduce using rule 79 (dec_params -> dec_params COMA ID .)


state 203

    (44) nativas -> LOG PARIZQ ENTERO COMA expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 213
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 204

    (54) nativas -> TRUNC PARIZQ INT COMA expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 214
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 205

    (56) nativas -> PARSE PARIZQ tipo COMA expression . PARDER
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression

    PARDER          shift and go to state 215
    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102


state 206

    (82) if_state -> IF expression statement ELSE statement END .

    PTCOMA          reduce using rule 82 (if_state -> IF expression statement ELSE statement END .)


state 207

    (84) else_if_list -> ELSEIF expression statement .
    (85) else_if_list -> ELSEIF expression statement . ELSE statement
    (86) else_if_list -> ELSEIF expression statement . else_if_list
    (84) else_if_list -> . ELSEIF expression statement
    (85) else_if_list -> . ELSEIF expression statement ELSE statement
    (86) else_if_list -> . ELSEIF expression statement else_if_list

    END             reduce using rule 84 (else_if_list -> ELSEIF expression statement .)
    ELSE            shift and go to state 216
    ELSEIF          shift and go to state 169

    else_if_list                   shift and go to state 217

state 208

    (88) for_state -> FOR ID IN expression DOSP expression . statement END
    (19) expression -> expression . MAS expression
    (20) expression -> expression . MENOS expression
    (21) expression -> expression . POR expression
    (22) expression -> expression . DIVIDIDO expression
    (23) expression -> expression . POTENCIA expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . MAYQUE expression
    (26) expression -> expression . MENQUE expression
    (27) expression -> expression . MENIGUALQUE expression
    (28) expression -> expression . MAYIGUALQUE expression
    (29) expression -> expression . IGUALQUE expression
    (30) expression -> expression . NIGUALQUE expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    MAS             shift and go to state 89
    MENOS           shift and go to state 90
    POR             shift and go to state 91
    DIVIDIDO        shift and go to state 92
    POTENCIA        shift and go to state 93
    MODULO          shift and go to state 94
    MAYQUE          shift and go to state 95
    MENQUE          shift and go to state 96
    MENIGUALQUE     shift and go to state 97
    MAYIGUALQUE     shift and go to state 98
    IGUALQUE        shift and go to state 99
    NIGUALQUE       shift and go to state 100
    OR              shift and go to state 101
    AND             shift and go to state 102
    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 218
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 209

    (89) for_state -> FOR ID IN expression statement END .

    PTCOMA          reduce using rule 89 (for_state -> FOR ID IN expression statement END .)


state 210

    (70) definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 70 (definicion_asignacion_instr -> LOCAL ID IGUAL expression DOSP DOSP tipo .)


state 211

    (71) definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo .

    PTCOMA          reduce using rule 71 (definicion_asignacion_instr -> GLOBAL ID IGUAL expression DOSP DOSP tipo .)


state 212

    (78) declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END .

    PTCOMA          reduce using rule 78 (declare_function -> FUNCTION ID PARIZQ dec_params PARDER statement END .)


state 213

    (44) nativas -> LOG PARIZQ ENTERO COMA expression PARDER .

    MAS             reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENOS           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    POR             reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    DIVIDIDO        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    POTENCIA        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MODULO          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MAYQUE          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENQUE          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    IGUALQUE        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    NIGUALQUE       reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    OR              reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    AND             reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PTCOMA          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PRINT           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PRINTLN         reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    LOCAL           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    GLOBAL          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    ID              reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    FUNCTION        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    RETURN          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    BREAK           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    CONTINUE        reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    IF              reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    WHILE           reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    FOR             reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    PARDER          reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    COMA            reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)
    DOSP            reduce using rule 44 (nativas -> LOG PARIZQ ENTERO COMA expression PARDER .)


state 214

    (54) nativas -> TRUNC PARIZQ INT COMA expression PARDER .

    MAS             reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENOS           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    POR             reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    DIVIDIDO        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    POTENCIA        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MODULO          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MAYQUE          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENQUE          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    IGUALQUE        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    NIGUALQUE       reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    OR              reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    AND             reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PTCOMA          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PRINT           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PRINTLN         reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    LOCAL           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    GLOBAL          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    ID              reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    FUNCTION        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    RETURN          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    BREAK           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    CONTINUE        reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    IF              reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    WHILE           reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    FOR             reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    PARDER          reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    COMA            reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)
    DOSP            reduce using rule 54 (nativas -> TRUNC PARIZQ INT COMA expression PARDER .)


state 215

    (56) nativas -> PARSE PARIZQ tipo COMA expression PARDER .

    MAS             reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENOS           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    POR             reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    DIVIDIDO        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    POTENCIA        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MODULO          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MAYQUE          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENQUE          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MENIGUALQUE     reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    MAYIGUALQUE     reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    IGUALQUE        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    NIGUALQUE       reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    OR              reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    AND             reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PTCOMA          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PRINT           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PRINTLN         reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    LOCAL           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    GLOBAL          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    ID              reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    FUNCTION        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    RETURN          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    BREAK           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    CONTINUE        reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    IF              reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    WHILE           reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    FOR             reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    PARDER          reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    COMA            reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)
    DOSP            reduce using rule 56 (nativas -> PARSE PARIZQ tipo COMA expression PARDER .)


state 216

    (85) else_if_list -> ELSEIF expression statement ELSE . statement
    (76) statement -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr PTCOMA
    (5) instruccion -> . println_instr PTCOMA
    (6) instruccion -> . definicion_instr PTCOMA
    (7) instruccion -> . asignacion_instr PTCOMA
    (8) instruccion -> . definicion_asignacion_instr PTCOMA
    (9) instruccion -> . call_function PTCOMA
    (10) instruccion -> . declare_function PTCOMA
    (11) instruccion -> . return_state PTCOMA
    (12) instruccion -> . break_state PTCOMA
    (13) instruccion -> . continue_state PTCOMA
    (14) instruccion -> . if_state PTCOMA
    (15) instruccion -> . while_state PTCOMA
    (16) instruccion -> . for_state PTCOMA
    (57) print_instr -> . PRINT PARIZQ exp_list PARDER
    (58) println_instr -> . PRINTLN PARIZQ exp_list PARDER
    (64) definicion_instr -> . LOCAL ID
    (65) definicion_instr -> . GLOBAL ID
    (66) asignacion_instr -> . ID IGUAL expression
    (67) asignacion_instr -> . LOCAL ID IGUAL expression
    (68) asignacion_instr -> . GLOBAL ID IGUAL expression
    (69) definicion_asignacion_instr -> . ID IGUAL expression DOSP DOSP tipo
    (70) definicion_asignacion_instr -> . LOCAL ID IGUAL expression DOSP DOSP tipo
    (71) definicion_asignacion_instr -> . GLOBAL ID IGUAL expression DOSP DOSP tipo
    (72) call_function -> . ID PARIZQ PARDER
    (73) call_function -> . ID PARIZQ exp_list PARDER
    (77) declare_function -> . FUNCTION ID PARIZQ PARDER statement END
    (78) declare_function -> . FUNCTION ID PARIZQ dec_params PARDER statement END
    (92) return_state -> . RETURN
    (93) return_state -> . RETURN expression
    (90) break_state -> . BREAK
    (91) continue_state -> . CONTINUE
    (81) if_state -> . IF expression statement END
    (82) if_state -> . IF expression statement ELSE statement END
    (83) if_state -> . IF expression statement else_if_list END
    (87) while_state -> . WHILE expression statement END
    (88) for_state -> . FOR ID IN expression DOSP expression statement END
    (89) for_state -> . FOR ID IN expression statement END

    PRINT           shift and go to state 17
    PRINTLN         shift and go to state 18
    LOCAL           shift and go to state 19
    GLOBAL          shift and go to state 21
    ID              shift and go to state 20
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 219
    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    println_instr                  shift and go to state 5
    definicion_instr               shift and go to state 6
    asignacion_instr               shift and go to state 7
    definicion_asignacion_instr    shift and go to state 8
    call_function                  shift and go to state 9
    declare_function               shift and go to state 10
    return_state                   shift and go to state 11
    break_state                    shift and go to state 12
    continue_state                 shift and go to state 13
    if_state                       shift and go to state 14
    while_state                    shift and go to state 15
    for_state                      shift and go to state 16

state 217

    (86) else_if_list -> ELSEIF expression statement else_if_list .

    END             reduce using rule 86 (else_if_list -> ELSEIF expression statement else_if_list .)


state 218

    (88) for_state -> FOR ID IN expression DOSP expression statement . END

    END             shift and go to state 220


state 219

    (85) else_if_list -> ELSEIF expression statement ELSE statement .

    END             reduce using rule 85 (else_if_list -> ELSEIF expression statement ELSE statement .)


state 220

    (88) for_state -> FOR ID IN expression DOSP expression statement END .

    PTCOMA          reduce using rule 88 (for_state -> FOR ID IN expression DOSP expression statement END .)

